// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("android.animation.ObjectAnimator")
open class ObjectAnimator: ValueAnimator {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func setIntValues(_ arg0: [Int32])

  @JavaMethod
  open override func setFloatValues(_ arg0: [Float])

  @JavaMethod
  open override func setObjectValues(_ arg0: [JavaObject?])

  @JavaMethod
  open func setPropertyName(_ arg0: String)

  @JavaMethod
  open func getPropertyName() -> String

  @JavaMethod
  open override func setDuration(_ arg0: Int64) -> ObjectAnimator!

  @JavaMethod
  open override func setupStartValues()

  @JavaMethod
  open override func setupEndValues()

  @JavaMethod
  open func setAutoCancel(_ arg0: Bool)

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func clone() -> ObjectAnimator!

  @JavaMethod
  open override func start()

  @JavaMethod
  open func getTarget() -> JavaObject!

  @JavaMethod
  open override func setTarget(_ arg0: JavaObject?)
}
extension JavaClass<ObjectAnimator> {
  @JavaStaticField(isFinal: true)
  public var INFINITE: Int32

  @JavaStaticField(isFinal: true)
  public var RESTART: Int32

  @JavaStaticField(isFinal: true)
  public var REVERSE: Int32

  @JavaStaticField(isFinal: true)
  public var DURATION_INFINITE: Int64

  @JavaStaticMethod
  public func ofMultiInt(_ arg0: JavaObject?, _ arg1: String, _ arg2: TypeConverter?, _ arg3: TypeEvaluator?, _ arg4: [JavaObject?]) -> ObjectAnimator!

  @JavaStaticMethod
  public func ofMultiInt(_ arg0: JavaObject?, _ arg1: String, _ arg2: [[Int32]]) -> ObjectAnimator!

  @JavaStaticMethod
  public func ofMultiFloat(_ arg0: JavaObject?, _ arg1: String, _ arg2: [[Float]]) -> ObjectAnimator!

  @JavaStaticMethod
  public func ofMultiFloat(_ arg0: JavaObject?, _ arg1: String, _ arg2: TypeConverter?, _ arg3: TypeEvaluator?, _ arg4: [JavaObject?]) -> ObjectAnimator!

  @JavaStaticMethod
  public func ofObject(_ arg0: JavaObject?, _ arg1: String, _ arg2: TypeEvaluator?, _ arg3: [JavaObject?]) -> ObjectAnimator!

  @JavaStaticMethod
  public func ofArgb(_ arg0: JavaObject?, _ arg1: String, _ arg2: [Int32]) -> ObjectAnimator!

  @JavaStaticMethod
  public func ofPropertyValuesHolder(_ arg0: JavaObject?, _ arg1: [PropertyValuesHolder?]) -> ObjectAnimator!

  @JavaStaticMethod
  public func ofInt(_ arg0: JavaObject?, _ arg1: String, _ arg2: [Int32]) -> ObjectAnimator!

  @JavaStaticMethod
  public func ofFloat(_ arg0: JavaObject?, _ arg1: String, _ arg2: [Float]) -> ObjectAnimator!
}
