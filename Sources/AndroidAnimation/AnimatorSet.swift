// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("android.animation.AnimatorSet")
open class AnimatorSet: Animator {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func setDuration(_ arg0: Int64) -> AnimatorSet!

  @JavaMethod
  open override func setStartDelay(_ arg0: Int64)

  @JavaMethod
  open override func getStartDelay() -> Int64

  @JavaMethod
  open override func setInterpolator(_ arg0: TimeInterpolator?)

  @JavaMethod
  open override func getInterpolator() -> TimeInterpolator!

  @JavaMethod
  open override func isRunning() -> Bool

  @JavaMethod
  open func playTogether(_ arg0: JavaCollection<Animator>?)

  @JavaMethod
  open func playTogether(_ arg0: [Animator?])

  @JavaMethod
  open func playSequentially(_ arg0: [Animator?])

  @JavaMethod
  open func playSequentially(_ arg0: List<Animator>?)

  @JavaMethod
  open func getChildAnimations() -> ArrayList<Animator>!

  @JavaMethod
  open func play(_ arg0: Animator?) -> AnimatorSet.Builder!

  @JavaMethod
  open override func setupStartValues()

  @JavaMethod
  open override func setupEndValues()

  @JavaMethod
  open override func pause()

  @JavaMethod
  open override func resume()

  @JavaMethod
  open func setCurrentPlayTime(_ arg0: Int64)

  @JavaMethod
  open func getCurrentPlayTime() -> Int64

  @JavaMethod
  open override func getTotalDuration() -> Int64

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func clone() -> AnimatorSet!

  @JavaMethod
  open func reverse()

  @JavaMethod
  open override func end()

  @JavaMethod
  open override func start()

  @JavaMethod
  open override func cancel()

  @JavaMethod
  open override func isStarted() -> Bool

  @JavaMethod
  open override func setTarget(_ arg0: JavaObject?)

  @JavaMethod
  open override func getDuration() -> Int64
}
extension JavaClass<AnimatorSet> {
  @JavaStaticField(isFinal: true)
  public var DURATION_INFINITE: Int64
}
