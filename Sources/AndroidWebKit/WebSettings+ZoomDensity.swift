// Auto-generated by Java-to-Swift wrapper generator.
import JavaLang
import JavaKit
import JavaRuntime

extension WebSettings {
  @JavaClass("android.webkit.WebSettings$ZoomDensity")
  open class ZoomDensity: Enum {
    public enum ZoomDensityCases: Equatable {
      case FAR
  case MEDIUM
  case CLOSE
    }

    public var enumValue: ZoomDensityCases! {
      let classObj = self.javaClass
      if self.equals(classObj.FAR?.as(JavaObject.self)) {
        return ZoomDensityCases.FAR
  } else if self.equals(classObj.MEDIUM?.as(JavaObject.self)) {
        return ZoomDensityCases.MEDIUM
  } else if self.equals(classObj.CLOSE?.as(JavaObject.self)) {
        return ZoomDensityCases.CLOSE
  } else {
        return nil
      }
    }

  public convenience init(_ enumValue: ZoomDensityCases, environment: JNIEnvironment? = nil) {
    let _environment = if let environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    let classObj = try! JavaClass<ZoomDensity>(environment: _environment)
    switch enumValue {
      case .FAR:
        if let FAR = classObj.FAR {
          self.init(javaHolder: FAR.javaHolder)
        } else {
          fatalError("Enum value FAR was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .MEDIUM:
        if let MEDIUM = classObj.MEDIUM {
          self.init(javaHolder: MEDIUM.javaHolder)
        } else {
          fatalError("Enum value MEDIUM was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .CLOSE:
        if let CLOSE = classObj.CLOSE {
          self.init(javaHolder: CLOSE.javaHolder)
        } else {
          fatalError("Enum value CLOSE was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
    }
  }
  }
}
extension WebSettings.ZoomDensity {
  @JavaClass("java.lang.Enum$EnumDesc")
  open class EnumDesc<E: AnyJavaObject>: JavaObject {
  @JavaMethod
  open override func toString() -> String
  }
}
extension JavaClass<WebSettings.ZoomDensity> {
  @JavaStaticField(isFinal: true)
  public var FAR: WebSettings.ZoomDensity!

  @JavaStaticField(isFinal: true)
  public var MEDIUM: WebSettings.ZoomDensity!

  @JavaStaticField(isFinal: true)
  public var CLOSE: WebSettings.ZoomDensity!

  @JavaStaticMethod
  public func values() -> [WebSettings.ZoomDensity?]

  @JavaStaticMethod
  public func valueOf(_ arg0: String) -> WebSettings.ZoomDensity!
}
