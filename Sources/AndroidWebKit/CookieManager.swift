// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("android.webkit.CookieManager")
open class CookieManager: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func clone() throws -> JavaObject!

  @JavaMethod
  open func flush()

  @JavaMethod
  open func setAcceptThirdPartyCookies(_ arg0: WebView?, _ arg1: Bool)

  @JavaMethod
  open func acceptThirdPartyCookies(_ arg0: WebView?) -> Bool

  @JavaMethod
  open func removeSessionCookie()

  @JavaMethod
  open func removeSessionCookies(_ arg0: ValueCallback<JavaBoolean>?)

  @JavaMethod
  open func removeExpiredCookie()

  @JavaMethod
  open func setAcceptCookie(_ arg0: Bool)

  @JavaMethod
  open func acceptCookie() -> Bool

  @JavaMethod
  open func setCookie(_ arg0: String, _ arg1: String, _ arg2: ValueCallback<JavaBoolean>?)

  @JavaMethod
  open func setCookie(_ arg0: String, _ arg1: String)

  @JavaMethod
  open func getCookie(_ arg0: String) -> String

  @JavaMethod
  open func removeAllCookie()

  @JavaMethod
  open func removeAllCookies(_ arg0: ValueCallback<JavaBoolean>?)

  @JavaMethod
  open func hasCookies() -> Bool
}
extension JavaClass<CookieManager> {
  @JavaStaticMethod
  public func getInstance() -> CookieManager!

  @JavaStaticMethod
  public func allowFileSchemeCookies() -> Bool

  @JavaStaticMethod
  public func setAcceptFileSchemeCookies(_ arg0: Bool)
}
