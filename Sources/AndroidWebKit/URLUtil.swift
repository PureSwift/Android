// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("android.webkit.URLUtil")
open class URLUtil: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)
}
extension JavaClass<URLUtil> {
  @JavaStaticMethod
  public func decode(_ arg0: [Int8]) throws -> [Int8]

  @JavaStaticMethod
  public func isCookielessProxyUrl(_ arg0: String) -> Bool

  @JavaStaticMethod
  public func guessUrl(_ arg0: String) -> String

  @JavaStaticMethod
  public func composeSearchUrl(_ arg0: String, _ arg1: String, _ arg2: String) -> String

  @JavaStaticMethod
  public func isAssetUrl(_ arg0: String) -> Bool

  @JavaStaticMethod
  public func isFileUrl(_ arg0: String) -> Bool

  @JavaStaticMethod
  public func isAboutUrl(_ arg0: String) -> Bool

  @JavaStaticMethod
  public func isDataUrl(_ arg0: String) -> Bool

  @JavaStaticMethod
  public func isJavaScriptUrl(_ arg0: String) -> Bool

  @JavaStaticMethod
  public func isHttpUrl(_ arg0: String) -> Bool

  @JavaStaticMethod
  public func isHttpsUrl(_ arg0: String) -> Bool

  @JavaStaticMethod
  public func isNetworkUrl(_ arg0: String) -> Bool

  @JavaStaticMethod
  public func isContentUrl(_ arg0: String) -> Bool

  @JavaStaticMethod
  public func isValidUrl(_ arg0: String) -> Bool

  @JavaStaticMethod
  public func stripAnchor(_ arg0: String) -> String

  @JavaStaticMethod
  public func guessFileName(_ arg0: String, _ arg1: String, _ arg2: String) -> String
}
