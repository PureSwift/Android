// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaInterface("java.time.chrono.ChronoPeriod", extends: TemporalAmount.self)
public struct ChronoPeriod {
  @JavaMethod
  public func get(_ arg0: TemporalUnit?) -> Int64

  @JavaMethod
  public func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func toString() -> String

  @JavaMethod
  public func hashCode() -> Int32

  @JavaMethod
  public func normalized() -> ChronoPeriod!

  @JavaMethod
  public func isZero() -> Bool

  @JavaMethod
  public func isNegative() -> Bool

  @JavaMethod
  public func minus(_ arg0: TemporalAmount?) -> ChronoPeriod!

  @JavaMethod
  public func plus(_ arg0: TemporalAmount?) -> ChronoPeriod!

  @JavaMethod
  public func getUnits() -> List<TemporalUnit>!

  @JavaMethod
  public func negated() -> ChronoPeriod!

  @JavaMethod
  public func multipliedBy(_ arg0: Int32) -> ChronoPeriod!

  @JavaMethod
  public func addTo(_ arg0: Temporal?) -> Temporal!

  @JavaMethod
  public func subtractFrom(_ arg0: Temporal?) -> Temporal!

  @JavaMethod
  public func getChronology() -> Chronology!
}
extension JavaClass<ChronoPeriod> {
  @JavaStaticMethod
  public func between(_ arg0: ChronoLocalDate?, _ arg1: ChronoLocalDate?) -> ChronoPeriod!
}
