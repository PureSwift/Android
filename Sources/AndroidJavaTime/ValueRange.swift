// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import JavaKit
import JavaRuntime

@JavaClass("java.time.temporal.ValueRange", implements: Serializable.self)
open class ValueRange: JavaObject {
  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func getMaximum() -> Int64

  @JavaMethod
  open func checkValidIntValue(_ arg0: Int64, _ arg1: TemporalField?) -> Int32

  @JavaMethod
  open func checkValidValue(_ arg0: Int64, _ arg1: TemporalField?) -> Int64

  @JavaMethod
  open func isIntValue() -> Bool

  @JavaMethod
  open func isValidValue(_ arg0: Int64) -> Bool

  @JavaMethod
  open func getMinimum() -> Int64

  @JavaMethod
  open func isValidIntValue(_ arg0: Int64) -> Bool

  @JavaMethod
  open func isFixed() -> Bool

  @JavaMethod
  open func getLargestMinimum() -> Int64

  @JavaMethod
  open func getSmallestMaximum() -> Int64
}
extension JavaClass<ValueRange> {
  @JavaStaticMethod
  public func of(_ arg0: Int64, _ arg1: Int64) -> ValueRange!

  @JavaStaticMethod
  public func of(_ arg0: Int64, _ arg1: Int64, _ arg2: Int64, _ arg3: Int64) -> ValueRange!

  @JavaStaticMethod
  public func of(_ arg0: Int64, _ arg1: Int64, _ arg2: Int64) -> ValueRange!
}
