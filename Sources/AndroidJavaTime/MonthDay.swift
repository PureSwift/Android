// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import AndroidJavaLang
import JavaKit
import JavaRuntime

@JavaClass("java.time.MonthDay", implements: TemporalAccessor.self, TemporalAdjuster.self, Comparable.self, Serializable.self)
open class MonthDay: JavaObject {
  @JavaMethod
  open func isValidYear(_ arg0: Int32) -> Bool

  @JavaMethod
  open func atYear(_ arg0: Int32) -> LocalDate!

  @JavaMethod
  open func get(_ arg0: TemporalField?) -> Int32

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func compareTo(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open func compareTo(_ arg0: MonthDay?) -> Int32

  @JavaMethod
  open func getLong(_ arg0: TemporalField?) -> Int64

  @JavaMethod
  open func format(_ arg0: DateTimeFormatter?) -> String

  @JavaMethod
  open func isSupported(_ arg0: TemporalField?) -> Bool

  @JavaMethod
  open func with(_ arg0: Month?) -> MonthDay!

  @JavaMethod
  open func query(_ arg0: TemporalQuery<JavaObject>?) -> JavaObject!

  @JavaMethod
  open func range(_ arg0: TemporalField?) -> ValueRange!

  @JavaMethod
  open func getMonthValue() -> Int32

  @JavaMethod
  open func getDayOfMonth() -> Int32

  @JavaMethod
  open func adjustInto(_ arg0: Temporal?) -> Temporal!

  @JavaMethod
  open func isAfter(_ arg0: MonthDay?) -> Bool

  @JavaMethod
  open func isBefore(_ arg0: MonthDay?) -> Bool

  @JavaMethod
  open func getMonth() -> Month!

  @JavaMethod
  open func withDayOfMonth(_ arg0: Int32) -> MonthDay!

  @JavaMethod
  open func withMonth(_ arg0: Int32) -> MonthDay!
}
extension JavaClass<MonthDay> {
  @JavaStaticMethod
  public func of(_ arg0: Month?, _ arg1: Int32) -> MonthDay!

  @JavaStaticMethod
  public func of(_ arg0: Int32, _ arg1: Int32) -> MonthDay!

  @JavaStaticMethod
  public func from(_ arg0: TemporalAccessor?) -> MonthDay!

  @JavaStaticMethod
  public func parse(_ arg0: CharSequence?) -> MonthDay!

  @JavaStaticMethod
  public func parse(_ arg0: CharSequence?, _ arg1: DateTimeFormatter?) -> MonthDay!

  @JavaStaticMethod
  public func now(_ arg0: ZoneId?) -> MonthDay!

  @JavaStaticMethod
  public func now() -> MonthDay!

  @JavaStaticMethod
  public func now(_ arg0: Clock?) -> MonthDay!
}
