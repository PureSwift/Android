// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import JavaKit
import JavaRuntime

@JavaClass("java.time.temporal.WeekFields", implements: Serializable.self)
open class WeekFields: JavaObject {
  @JavaMethod
  open func weekOfWeekBasedYear() -> TemporalField!

  @JavaMethod
  open func weekBasedYear() -> TemporalField!

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func getFirstDayOfWeek() -> DayOfWeek!

  @JavaMethod
  open func getMinimalDaysInFirstWeek() -> Int32

  @JavaMethod
  open func dayOfWeek() -> TemporalField!

  @JavaMethod
  open func weekOfYear() -> TemporalField!

  @JavaMethod
  open func weekOfMonth() -> TemporalField!
}
extension JavaClass<WeekFields> {
  @JavaStaticField(isFinal: true)
  public var ISO: WeekFields!

  @JavaStaticField(isFinal: true)
  public var SUNDAY_START: WeekFields!

  @JavaStaticField(isFinal: true)
  public var WEEK_BASED_YEARS: TemporalUnit!

  @JavaStaticMethod
  public func of(_ arg0: DayOfWeek?, _ arg1: Int32) -> WeekFields!
}
