// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("java.time.format.DecimalStyle")
open class DecimalStyle: JavaObject {
  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func getZeroDigit() -> UInt16

  @JavaMethod
  open func getDecimalSeparator() -> UInt16

  @JavaMethod
  open func getPositiveSign() -> UInt16

  @JavaMethod
  open func getNegativeSign() -> UInt16

  @JavaMethod
  open func withZeroDigit(_ arg0: UInt16) -> DecimalStyle!

  @JavaMethod
  open func withPositiveSign(_ arg0: UInt16) -> DecimalStyle!

  @JavaMethod
  open func withNegativeSign(_ arg0: UInt16) -> DecimalStyle!

  @JavaMethod
  open func withDecimalSeparator(_ arg0: UInt16) -> DecimalStyle!
}
extension JavaClass<DecimalStyle> {
  @JavaStaticField(isFinal: true)
  public var STANDARD: DecimalStyle!

  @JavaStaticMethod
  public func ofDefaultLocale() -> DecimalStyle!
}
