// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaLang
import JavaKit
import JavaRuntime

@JavaClass("java.time.chrono.HijrahEra", implements: Era.self)
open class HijrahEra: Enum {
  public enum HijrahEraCases: Equatable {
    case AH
  }

  public var enumValue: HijrahEraCases! {
    let classObj = self.javaClass
    if self.equals(classObj.AH?.as(JavaObject.self)) {
      return HijrahEraCases.AH
    } else {
      return nil
    }
  }

  public convenience init(_ enumValue: HijrahEraCases, environment: JNIEnvironment? = nil) {
    let _environment = if let environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    let classObj = try! JavaClass<HijrahEra>(environment: _environment)
    switch enumValue {
      case .AH:
        if let AH = classObj.AH {
          self.init(javaHolder: AH.javaHolder)
        } else {
          fatalError("Enum value AH was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
    }
  }

  @JavaMethod
  open func getValue() -> Int32

  @JavaMethod
  open func range(_ arg0: TemporalField?) -> ValueRange!
}
extension JavaClass<HijrahEra> {
  @JavaStaticField(isFinal: true)
  public var AH: HijrahEra!

  @JavaStaticMethod
  public func values() -> [HijrahEra?]

  @JavaStaticMethod
  public func valueOf(_ arg0: String) -> HijrahEra!

  @JavaStaticMethod
  public func of(_ arg0: Int32) -> HijrahEra!
}
