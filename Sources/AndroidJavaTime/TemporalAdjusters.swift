// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitFunction
import JavaRuntime

@JavaClass("java.time.temporal.TemporalAdjusters")
open class TemporalAdjusters: JavaObject {

}
extension JavaClass<TemporalAdjusters> {
  @JavaStaticMethod
  public func dayOfWeekInMonth(_ arg0: Int32, _ arg1: DayOfWeek?) -> TemporalAdjuster!

  @JavaStaticMethod
  public func ofDateAdjuster(_ arg0: JavaUnaryOperator<LocalDate>?) -> TemporalAdjuster!

  @JavaStaticMethod
  public func firstDayOfMonth() -> TemporalAdjuster!

  @JavaStaticMethod
  public func firstDayOfNextMonth() -> TemporalAdjuster!

  @JavaStaticMethod
  public func lastDayOfYear() -> TemporalAdjuster!

  @JavaStaticMethod
  public func firstDayOfNextYear() -> TemporalAdjuster!

  @JavaStaticMethod
  public func firstInMonth(_ arg0: DayOfWeek?) -> TemporalAdjuster!

  @JavaStaticMethod
  public func lastInMonth(_ arg0: DayOfWeek?) -> TemporalAdjuster!

  @JavaStaticMethod
  public func next(_ arg0: DayOfWeek?) -> TemporalAdjuster!

  @JavaStaticMethod
  public func previous(_ arg0: DayOfWeek?) -> TemporalAdjuster!

  @JavaStaticMethod
  public func firstDayOfYear() -> TemporalAdjuster!

  @JavaStaticMethod
  public func lastDayOfMonth() -> TemporalAdjuster!

  @JavaStaticMethod
  public func nextOrSame(_ arg0: DayOfWeek?) -> TemporalAdjuster!

  @JavaStaticMethod
  public func previousOrSame(_ arg0: DayOfWeek?) -> TemporalAdjuster!
}
