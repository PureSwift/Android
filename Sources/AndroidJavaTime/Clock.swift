// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.time.Clock")
open class Clock: JavaObject {
  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func millis() -> Int64

  @JavaMethod
  open func instant() -> Instant!

  @JavaMethod
  open func getZone() -> ZoneId!

  @JavaMethod
  open func withZone(_ arg0: ZoneId?) -> Clock!
}
extension JavaClass<Clock> {
  @JavaStaticMethod
  public func offset(_ arg0: Clock?, _ arg1: Duration?) -> Clock!

  @JavaStaticMethod
  public func system(_ arg0: ZoneId?) -> Clock!

  @JavaStaticMethod
  public func fixed(_ arg0: Instant?, _ arg1: ZoneId?) -> Clock!

  @JavaStaticMethod
  public func systemUTC() -> Clock!

  @JavaStaticMethod
  public func systemDefaultZone() -> Clock!

  @JavaStaticMethod
  public func tickMillis(_ arg0: ZoneId?) -> Clock!

  @JavaStaticMethod
  public func tickSeconds(_ arg0: ZoneId?) -> Clock!

  @JavaStaticMethod
  public func tickMinutes(_ arg0: ZoneId?) -> Clock!

  @JavaStaticMethod
  public func tick(_ arg0: Clock?, _ arg1: Duration?) -> Clock!
}
