// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("java.time.chrono.MinguoChronology", implements: Serializable.self)
open class MinguoChronology: AbstractChronology {
  @JavaMethod
  open func getId() -> String

  @JavaMethod
  open func range(_ arg0: ChronoField?) -> ValueRange!

  @JavaMethod
  open func date(_ arg0: TemporalAccessor?) -> ChronoLocalDate!

  @JavaMethod
  open func date(_ arg0: TemporalAccessor?) -> MinguoDate!

  @JavaMethod
  open func date(_ arg0: Era?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32) -> MinguoDate!

  @JavaMethod
  open func date(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32) -> ChronoLocalDate!

  @JavaMethod
  open func date(_ arg0: Era?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32) -> ChronoLocalDate!

  @JavaMethod
  open func date(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32) -> MinguoDate!

  @JavaMethod
  open func eras() -> List<Era>!

  @JavaMethod
  open func isLeapYear(_ arg0: Int64) -> Bool

  @JavaMethod
  open func eraOf(_ arg0: Int32) -> MinguoEra!

  @JavaMethod
  open func eraOf(_ arg0: Int32) -> Era!

  @JavaMethod
  open func localDateTime(_ arg0: TemporalAccessor?) -> ChronoLocalDateTime<MinguoDate>!

  @JavaMethod
  open func getCalendarType() -> String

  @JavaMethod
  open func dateEpochDay(_ arg0: Int64) -> MinguoDate!

  @JavaMethod
  open func dateEpochDay(_ arg0: Int64) -> ChronoLocalDate!

  @JavaMethod
  open func dateNow(_ arg0: Clock?) -> ChronoLocalDate!

  @JavaMethod
  open func dateNow(_ arg0: ZoneId?) -> ChronoLocalDate!

  @JavaMethod
  open func dateNow() -> MinguoDate!

  @JavaMethod
  open func dateNow(_ arg0: Clock?) -> MinguoDate!

  @JavaMethod
  open func dateNow() -> ChronoLocalDate!

  @JavaMethod
  open func dateNow(_ arg0: ZoneId?) -> MinguoDate!

  @JavaMethod
  open func prolepticYear(_ arg0: Era?, _ arg1: Int32) -> Int32

  @JavaMethod
  open func dateYearDay(_ arg0: Int32, _ arg1: Int32) -> MinguoDate!

  @JavaMethod
  open func dateYearDay(_ arg0: Era?, _ arg1: Int32, _ arg2: Int32) -> ChronoLocalDate!

  @JavaMethod
  open func dateYearDay(_ arg0: Int32, _ arg1: Int32) -> ChronoLocalDate!

  @JavaMethod
  open func dateYearDay(_ arg0: Era?, _ arg1: Int32, _ arg2: Int32) -> MinguoDate!

  @JavaMethod
  open func zonedDateTime(_ arg0: TemporalAccessor?) -> ChronoZonedDateTime<MinguoDate>!

  @JavaMethod
  open func zonedDateTime(_ arg0: Instant?, _ arg1: ZoneId?) -> ChronoZonedDateTime<MinguoDate>!

  @JavaMethod
  open func isIsoBased() -> Bool
}
extension JavaClass<MinguoChronology> {
  @JavaStaticField(isFinal: true)
  public var INSTANCE: MinguoChronology!
}
