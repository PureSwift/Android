// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import AndroidJavaLang
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("java.time.Duration", implements: TemporalAmount.self, Comparable.self, Serializable.self)
open class Duration: JavaObject {
  @JavaMethod
  open func get(_ arg0: TemporalUnit?) -> Int64

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func abs() -> Duration!

  @JavaMethod
  open func compareTo(_ arg0: Duration?) -> Int32

  @JavaMethod
  open func compareTo(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open func toNanos() -> Int64

  @JavaMethod
  open func toMillis() -> Int64

  @JavaMethod
  open func isZero() -> Bool

  @JavaMethod
  open func getNano() -> Int32

  @JavaMethod
  open func toDays() -> Int64

  @JavaMethod
  open func toSeconds() -> Int64

  @JavaMethod
  open func isNegative() -> Bool

  @JavaMethod
  open func minus(_ arg0: Int64, _ arg1: TemporalUnit?) -> Duration!

  @JavaMethod
  open func minus(_ arg0: Duration?) -> Duration!

  @JavaMethod
  open func isPositive() -> Bool

  @JavaMethod
  open func plus(_ arg0: Int64, _ arg1: TemporalUnit?) -> Duration!

  @JavaMethod
  open func plus(_ arg0: Duration?) -> Duration!

  @JavaMethod
  open func getUnits() -> List<TemporalUnit>!

  @JavaMethod
  open func negated() -> Duration!

  @JavaMethod
  open func getSeconds() -> Int64

  @JavaMethod
  open func plusNanos(_ arg0: Int64) -> Duration!

  @JavaMethod
  open func plusSeconds(_ arg0: Int64) -> Duration!

  @JavaMethod
  open func plusMillis(_ arg0: Int64) -> Duration!

  @JavaMethod
  open func multipliedBy(_ arg0: Int64) -> Duration!

  @JavaMethod
  open func plusDays(_ arg0: Int64) -> Duration!

  @JavaMethod
  open func plusHours(_ arg0: Int64) -> Duration!

  @JavaMethod
  open func plusMinutes(_ arg0: Int64) -> Duration!

  @JavaMethod
  open func toHours() -> Int64

  @JavaMethod
  open func toMinutes() -> Int64

  @JavaMethod
  open func withSeconds(_ arg0: Int64) -> Duration!

  @JavaMethod
  open func withNanos(_ arg0: Int32) -> Duration!

  @JavaMethod
  open func minusDays(_ arg0: Int64) -> Duration!

  @JavaMethod
  open func minusHours(_ arg0: Int64) -> Duration!

  @JavaMethod
  open func minusMinutes(_ arg0: Int64) -> Duration!

  @JavaMethod
  open func minusSeconds(_ arg0: Int64) -> Duration!

  @JavaMethod
  open func minusMillis(_ arg0: Int64) -> Duration!

  @JavaMethod
  open func minusNanos(_ arg0: Int64) -> Duration!

  @JavaMethod
  open func dividedBy(_ arg0: Int64) -> Duration!

  @JavaMethod
  open func dividedBy(_ arg0: Duration?) -> Int64

  @JavaMethod
  open func addTo(_ arg0: Temporal?) -> Temporal!

  @JavaMethod
  open func subtractFrom(_ arg0: Temporal?) -> Temporal!

  @JavaMethod
  open func toDaysPart() -> Int64

  @JavaMethod
  open func toHoursPart() -> Int32

  @JavaMethod
  open func toMinutesPart() -> Int32

  @JavaMethod
  open func toSecondsPart() -> Int32

  @JavaMethod
  open func toMillisPart() -> Int32

  @JavaMethod
  open func toNanosPart() -> Int32

  @JavaMethod
  open func truncatedTo(_ arg0: TemporalUnit?) -> Duration!
}
extension JavaClass<Duration> {
  @JavaStaticField(isFinal: true)
  public var ZERO: Duration!

  @JavaStaticMethod
  public func of(_ arg0: Int64, _ arg1: TemporalUnit?) -> Duration!

  @JavaStaticMethod
  public func from(_ arg0: TemporalAmount?) -> Duration!

  @JavaStaticMethod
  public func parse(_ arg0: CharSequence?) -> Duration!

  @JavaStaticMethod
  public func between(_ arg0: Temporal?, _ arg1: Temporal?) -> Duration!

  @JavaStaticMethod
  public func ofSeconds(_ arg0: Int64, _ arg1: Int64) -> Duration!

  @JavaStaticMethod
  public func ofSeconds(_ arg0: Int64) -> Duration!

  @JavaStaticMethod
  public func ofNanos(_ arg0: Int64) -> Duration!

  @JavaStaticMethod
  public func ofDays(_ arg0: Int64) -> Duration!

  @JavaStaticMethod
  public func ofHours(_ arg0: Int64) -> Duration!

  @JavaStaticMethod
  public func ofMinutes(_ arg0: Int64) -> Duration!

  @JavaStaticMethod
  public func ofMillis(_ arg0: Int64) -> Duration!
}
