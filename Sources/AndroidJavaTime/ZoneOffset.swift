// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import AndroidJavaLang
import JavaKit
import JavaRuntime

@JavaClass("java.time.ZoneOffset", implements: TemporalAccessor.self, TemporalAdjuster.self, Comparable.self, Serializable.self)
open class ZoneOffset: ZoneId {
  @JavaMethod
  open func get(_ arg0: TemporalField?) -> Int32

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func compareTo(_ arg0: ZoneOffset?) -> Int32

  @JavaMethod
  open func compareTo(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open func getLong(_ arg0: TemporalField?) -> Int64

  @JavaMethod
  open func isSupported(_ arg0: TemporalField?) -> Bool

  @JavaMethod
  open override func getId() -> String

  @JavaMethod
  open func query(_ arg0: TemporalQuery<JavaObject>?) -> JavaObject!

  @JavaMethod
  open func range(_ arg0: TemporalField?) -> ValueRange!

  @JavaMethod
  open override func normalized() -> ZoneId!

  @JavaMethod
  open func adjustInto(_ arg0: Temporal?) -> Temporal!

  @JavaMethod
  open override func getRules() -> ZoneRules!

  @JavaMethod
  open func getTotalSeconds() -> Int32
}
extension JavaClass<ZoneOffset> {
  @JavaStaticField(isFinal: true)
  public var UTC: ZoneOffset!

  @JavaStaticField(isFinal: true)
  public var MIN: ZoneOffset!

  @JavaStaticField(isFinal: true)
  public var MAX: ZoneOffset!

  @JavaStaticMethod
  public func of(_ arg0: String) -> ZoneOffset!

  @JavaStaticMethod
  public func from(_ arg0: TemporalAccessor?) -> ZoneOffset!

  @JavaStaticMethod
  public func ofHours(_ arg0: Int32) -> ZoneOffset!

  @JavaStaticMethod
  public func ofHoursMinutesSeconds(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32) -> ZoneOffset!

  @JavaStaticMethod
  public func ofTotalSeconds(_ arg0: Int32) -> ZoneOffset!

  @JavaStaticMethod
  public func ofHoursMinutes(_ arg0: Int32, _ arg1: Int32) -> ZoneOffset!
}
