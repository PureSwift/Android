// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("android.util.Base64")
open class Base64: JavaObject {

}
extension JavaClass<Base64> {
  @JavaStaticField(isFinal: true)
  public var CRLF: Int32

  @JavaStaticField(isFinal: true)
  public var DEFAULT: Int32

  @JavaStaticField(isFinal: true)
  public var NO_CLOSE: Int32

  @JavaStaticField(isFinal: true)
  public var NO_PADDING: Int32

  @JavaStaticField(isFinal: true)
  public var NO_WRAP: Int32

  @JavaStaticField(isFinal: true)
  public var URL_SAFE: Int32

  @JavaStaticMethod
  public func encodeToString(_ arg0: [Int8], _ arg1: Int32) -> String

  @JavaStaticMethod
  public func encodeToString(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32) -> String

  @JavaStaticMethod
  public func decode(_ arg0: String, _ arg1: Int32) -> [Int8]

  @JavaStaticMethod
  public func decode(_ arg0: [Int8], _ arg1: Int32) -> [Int8]

  @JavaStaticMethod
  public func decode(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32) -> [Int8]

  @JavaStaticMethod
  public func encode(_ arg0: [Int8], _ arg1: Int32) -> [Int8]

  @JavaStaticMethod
  public func encode(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32) -> [Int8]
}
