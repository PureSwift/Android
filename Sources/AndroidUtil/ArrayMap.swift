// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaUtil
import JavaKit
import JavaKitCollection
import JavaKitFunction
import JavaRuntime

@JavaClass("android.util.ArrayMap", implements: Map<JavaObject, JavaObject>.self)
open class ArrayMap<K: AnyJavaObject, V: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: ArrayMap<JavaObject, JavaObject>?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func removeAt(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open func keyAt(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open func valueAt(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open func indexOfKey(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open func indexOfValue(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open func setValueAt(_ arg0: Int32, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open func remove(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open func size() -> Int32

  @JavaMethod
  open func get(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open func put(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open func values() -> JavaCollection<JavaObject>!

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func clear()

  @JavaMethod
  open func isEmpty() -> Bool

  @JavaMethod
  open func replaceAll(_ arg0: JavaBiFunction<JavaObject, JavaObject, JavaObject>?)

  @JavaMethod
  open func entrySet() -> JavaSet<Map<JavaObject, JavaObject>.Entry>!

  @JavaMethod
  open func putAll(_ arg0: ArrayMap<JavaObject, JavaObject>?)

  @JavaMethod
  open func putAll(_ arg0: Map<JavaObject, JavaObject>?)

  @JavaMethod
  open func forEach(_ arg0: JavaBiConsumer<JavaObject, JavaObject>?)

  @JavaMethod
  open func keySet() -> JavaSet<JavaObject>!

  @JavaMethod
  open func containsValue(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func containsKey(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func ensureCapacity(_ arg0: Int32)

  @JavaMethod
  open func removeAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open func retainAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open func containsAll(_ arg0: JavaCollection<JavaObject>?) -> Bool
}
