// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("android.util.Log")
open class Log: JavaObject {

}
extension JavaClass<Log> {
  @JavaStaticField(isFinal: true)
  public var ASSERT: Int32

  @JavaStaticField(isFinal: true)
  public var DEBUG: Int32

  @JavaStaticField(isFinal: true)
  public var ERROR: Int32

  @JavaStaticField(isFinal: true)
  public var INFO: Int32

  @JavaStaticField(isFinal: true)
  public var VERBOSE: Int32

  @JavaStaticField(isFinal: true)
  public var WARN: Int32

  @JavaStaticMethod
  public func wtf(_ arg0: String, _ arg1: String) -> Int32

  @JavaStaticMethod
  public func wtf(_ arg0: String, _ arg1: String, _ arg2: Throwable?) -> Int32

  @JavaStaticMethod
  public func wtf(_ arg0: String, _ arg1: Throwable?) -> Int32

  @JavaStaticMethod
  public func getStackTraceString(_ arg0: Throwable?) -> String

  @JavaStaticMethod
  public func println(_ arg0: Int32, _ arg1: String, _ arg2: String) -> Int32

  @JavaStaticMethod
  public func e(_ arg0: String, _ arg1: String) -> Int32

  @JavaStaticMethod
  public func e(_ arg0: String, _ arg1: String, _ arg2: Throwable?) -> Int32

  @JavaStaticMethod
  public func i(_ arg0: String, _ arg1: String, _ arg2: Throwable?) -> Int32

  @JavaStaticMethod
  public func i(_ arg0: String, _ arg1: String) -> Int32

  @JavaStaticMethod
  public func d(_ arg0: String, _ arg1: String) -> Int32

  @JavaStaticMethod
  public func d(_ arg0: String, _ arg1: String, _ arg2: Throwable?) -> Int32

  @JavaStaticMethod
  public func v(_ arg0: String, _ arg1: String, _ arg2: Throwable?) -> Int32

  @JavaStaticMethod
  public func v(_ arg0: String, _ arg1: String) -> Int32

  @JavaStaticMethod
  public func w(_ arg0: String, _ arg1: Throwable?) -> Int32

  @JavaStaticMethod
  public func w(_ arg0: String, _ arg1: String) -> Int32

  @JavaStaticMethod
  public func w(_ arg0: String, _ arg1: String, _ arg2: Throwable?) -> Int32

  @JavaStaticMethod
  public func isLoggable(_ arg0: String, _ arg1: Int32) -> Bool
}
