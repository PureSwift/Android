// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaUtil
import JavaKit
import JavaRuntime

@JavaClass("android.util.LruCache")
open class LruCache<K: AnyJavaObject, V: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func entryRemoved(_ arg0: Bool, _ arg1: JavaObject?, _ arg2: JavaObject?, _ arg3: JavaObject?)

  @JavaMethod
  open func sizeOf(_ arg0: JavaObject?, _ arg1: JavaObject?) -> Int32

  @JavaMethod
  open func evictAll()

  @JavaMethod
  open func hitCount() -> Int32

  @JavaMethod
  open func missCount() -> Int32

  @JavaMethod
  open func createCount() -> Int32

  @JavaMethod
  open func putCount() -> Int32

  @JavaMethod
  open func evictionCount() -> Int32

  @JavaMethod
  open func remove(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open func size() -> Int32

  @JavaMethod
  open func maxSize() -> Int32

  @JavaMethod
  open func get(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open func put(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open func snapshot() -> Map<JavaObject, JavaObject>!

  @JavaMethod
  open func create(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open func trimToSize(_ arg0: Int32)

  @JavaMethod
  open func resize(_ arg0: Int32)
}
