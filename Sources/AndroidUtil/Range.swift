// Auto-generated by Java-to-Swift wrapper generator.
import JavaLang
import JavaKit
import JavaRuntime

@JavaClass("android.util.Range")
open class Range<T: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Comparable?, _ arg1: Comparable?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func intersect(_ arg0: Range<Comparable>?) -> Range<Comparable>!

  @JavaMethod
  open func intersect(_ arg0: Comparable?, _ arg1: Comparable?) -> Range<Comparable>!

  @JavaMethod
  open func extend(_ arg0: Comparable?, _ arg1: Comparable?) -> Range<Comparable>!

  @JavaMethod
  open func extend(_ arg0: Range<Comparable>?) -> Range<Comparable>!

  @JavaMethod
  open func extend(_ arg0: Comparable?) -> Range<Comparable>!

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func clamp(_ arg0: Comparable?) -> Comparable!

  @JavaMethod
  open func contains(_ arg0: Comparable?) -> Bool

  @JavaMethod
  open func contains(_ arg0: Range<Comparable>?) -> Bool

  @JavaMethod
  open func getLower() -> Comparable!

  @JavaMethod
  open func getUpper() -> Comparable!
}
extension JavaClass {
  @JavaStaticMethod
  public func create(_ arg0: Comparable?, _ arg1: Comparable?) -> Range<Comparable>!
}
