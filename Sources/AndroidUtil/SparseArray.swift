// Auto-generated by Java-to-Swift wrapper generator.
import JavaLang
import JavaKit
import JavaRuntime

@JavaClass("android.util.SparseArray", implements: Cloneable.self)
open class SparseArray<E: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func removeAt(_ arg0: Int32)

  @JavaMethod
  open func keyAt(_ arg0: Int32) -> Int32

  @JavaMethod
  open func valueAt(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open func indexOfKey(_ arg0: Int32) -> Int32

  @JavaMethod
  open func indexOfValue(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open func setValueAt(_ arg0: Int32, _ arg1: JavaObject?)

  @JavaMethod
  open func removeAtRange(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func contentHashCode() -> Int32

  @JavaMethod
  open func remove(_ arg0: Int32)

  @JavaMethod
  open func size() -> Int32

  @JavaMethod
  open func get(_ arg0: Int32, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open func get(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open func put(_ arg0: Int32, _ arg1: JavaObject?)

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open func append(_ arg0: Int32, _ arg1: JavaObject?)

  @JavaMethod
  open override func clone() -> SparseArray<JavaObject>!

  @JavaMethod
  open func clear()

  @JavaMethod
  open func contentEquals(_ arg0: SparseArray<JavaObject>?) -> Bool

  @JavaMethod
  open func contains(_ arg0: Int32) -> Bool

  @JavaMethod
  open func set(_ arg0: Int32, _ arg1: JavaObject?)

  @JavaMethod
  open func delete(_ arg0: Int32)
}
