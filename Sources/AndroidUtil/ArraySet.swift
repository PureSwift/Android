// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaKitFunction
import JavaRuntime

@JavaClass("android.util.ArraySet", implements: JavaCollection<JavaObject>.self, JavaSet<JavaObject>.self)
open class ArraySet<E: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: [JavaObject?], environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: ArraySet<JavaObject>?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaCollection<JavaObject>?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func removeAt(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open func valueAt(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open func remove(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func size() -> Int32

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func indexOf(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open func clear()

  @JavaMethod
  open func isEmpty() -> Bool

  @JavaMethod
  open func add(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func toArray() -> [JavaObject?]

  @JavaMethod
  open func toArray(_ arg0: [JavaObject?]) -> [JavaObject?]

  @JavaMethod
  open func iterator() -> JavaIterator<JavaObject>!

  @JavaMethod
  open func contains(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func addAll(_ arg0: ArraySet<JavaObject>?)

  @JavaMethod
  open func addAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open func forEach(_ arg0: JavaConsumer<JavaObject>?)

  @JavaMethod
  open func ensureCapacity(_ arg0: Int32)

  @JavaMethod
  open func removeIf(_ arg0: JavaPredicate<JavaObject>?) -> Bool

  @JavaMethod
  open func removeAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open func removeAll(_ arg0: ArraySet<JavaObject>?) -> Bool

  @JavaMethod
  open func retainAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open func containsAll(_ arg0: JavaCollection<JavaObject>?) -> Bool
}
