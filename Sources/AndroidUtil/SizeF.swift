// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("android.util.SizeF")
open class SizeF: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Float, _ arg1: Float, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getWidth() -> Float

  @JavaMethod
  open func getHeight() -> Float

  @JavaMethod
  open func describeContents() -> Int32

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32
}
extension JavaClass<SizeF> {
  @JavaStaticField(isFinal: true)
  public var CONTENTS_FILE_DESCRIPTOR: Int32

  @JavaStaticField(isFinal: true)
  public var PARCELABLE_WRITE_RETURN_VALUE: Int32

  @JavaStaticMethod
  public func parseSizeF(_ arg0: String) throws -> SizeF!
}
