// Auto-generated by Java-to-Swift wrapper generator.
import AndroidGraphics
import JavaKit
import JavaRuntime

@JavaInterface("android.view.SurfaceHolder")
public struct SurfaceHolder {
  @JavaMethod
  public func setFormat(_ arg0: Int32)

  @JavaMethod
  public func unlockCanvasAndPost(_ arg0: Canvas?)

  @JavaMethod
  public func addCallback(_ arg0: SurfaceHolder.Callback?)

  @JavaMethod
  public func removeCallback(_ arg0: SurfaceHolder.Callback?)

  @JavaMethod
  public func isCreating() -> Bool

  @JavaMethod
  public func setType(_ arg0: Int32)

  @JavaMethod
  public func setFixedSize(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  public func setSizeFromLayout()

  @JavaMethod
  public func setKeepScreenOn(_ arg0: Bool)

  @JavaMethod
  public func lockCanvas() -> Canvas!

  @JavaMethod
  public func lockCanvas(_ arg0: Rect?) -> Canvas!

  @JavaMethod
  public func lockHardwareCanvas() -> Canvas!

  @JavaMethod
  public func getSurfaceFrame() -> Rect!

  @JavaMethod
  public func getSurface() -> Surface!
}
extension JavaClass<SurfaceHolder> {
  @JavaStaticField(isFinal: true)
  public var SURFACE_TYPE_GPU: Int32

  @JavaStaticField(isFinal: true)
  public var SURFACE_TYPE_HARDWARE: Int32

  @JavaStaticField(isFinal: true)
  public var SURFACE_TYPE_NORMAL: Int32

  @JavaStaticField(isFinal: true)
  public var SURFACE_TYPE_PUSH_BUFFERS: Int32
}
