// Auto-generated by Java-to-Swift wrapper generator.
import AndroidOS
import JavaKit
import JavaRuntime

@JavaClass("android.view.KeyCharacterMap", implements: Parcelable.self)
open class KeyCharacterMap: JavaObject {
  @JavaMethod
  open func writeToParcel(_ arg0: Parcel?, _ arg1: Int32)

  @JavaMethod
  open func describeContents() -> Int32

  @JavaMethod
  open func getKeyboardType() -> Int32

  @JavaMethod
  open func getMatch(_ arg0: Int32, _ arg1: [UInt16], _ arg2: Int32) -> UInt16

  @JavaMethod
  open func getMatch(_ arg0: Int32, _ arg1: [UInt16]) -> UInt16

  @JavaMethod
  open func getDisplayLabel(_ arg0: Int32) -> UInt16

  @JavaMethod
  open func getKeyData(_ arg0: Int32, _ arg1: KeyCharacterMap.KeyData?) -> Bool

  @JavaMethod
  open func getEvents(_ arg0: [UInt16]) -> [KeyEvent?]

  @JavaMethod
  open func isPrintingKey(_ arg0: Int32) -> Bool

  @JavaMethod
  open func getModifierBehavior() -> Int32

  @JavaMethod
  open override func finalize() throws

  @JavaMethod
  open func get(_ arg0: Int32, _ arg1: Int32) -> Int32

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func getNumber(_ arg0: Int32) -> UInt16
}
extension JavaClass<KeyCharacterMap> {
  @JavaStaticField(isFinal: true)
  public var ALPHA: Int32

  @JavaStaticField(isFinal: true)
  public var BUILT_IN_KEYBOARD: Int32

  @JavaStaticField(isFinal: true)
  public var COMBINING_ACCENT: Int32

  @JavaStaticField(isFinal: true)
  public var COMBINING_ACCENT_MASK: Int32

  @JavaStaticField(isFinal: true)
  public var CREATOR: Parcelable.Creator<KeyCharacterMap>!

  @JavaStaticField(isFinal: true)
  public var FULL: Int32

  @JavaStaticField(isFinal: true)
  public var HEX_INPUT: UInt16

  @JavaStaticField(isFinal: true)
  public var MODIFIER_BEHAVIOR_CHORDED: Int32

  @JavaStaticField(isFinal: true)
  public var MODIFIER_BEHAVIOR_CHORDED_OR_TOGGLED: Int32

  @JavaStaticField(isFinal: true)
  public var NUMERIC: Int32

  @JavaStaticField(isFinal: true)
  public var PICKER_DIALOG_INPUT: UInt16

  @JavaStaticField(isFinal: true)
  public var PREDICTIVE: Int32

  @JavaStaticField(isFinal: true)
  public var SPECIAL_FUNCTION: Int32

  @JavaStaticField(isFinal: true)
  public var VIRTUAL_KEYBOARD: Int32

  @JavaStaticField(isFinal: true)
  public var CONTENTS_FILE_DESCRIPTOR: Int32

  @JavaStaticField(isFinal: true)
  public var PARCELABLE_WRITE_RETURN_VALUE: Int32

  @JavaStaticMethod
  public func getDeadChar(_ arg0: Int32, _ arg1: Int32) -> Int32

  @JavaStaticMethod
  public func deviceHasKey(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func deviceHasKeys(_ arg0: [Int32]) -> [Bool]

  @JavaStaticMethod
  public func load(_ arg0: Int32) -> KeyCharacterMap!
}
