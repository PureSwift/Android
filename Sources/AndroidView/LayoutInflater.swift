// Auto-generated by Java-to-Swift wrapper generator.
import AndroidContent
import AndroidUtil
import JavaKit
import JavaRuntime

@JavaClass("android.view.LayoutInflater")
open class LayoutInflater: JavaObject {
  @JavaMethod
  open func cloneInContext(_ arg0: Context?) -> LayoutInflater!

  @JavaMethod
  open func getFactory2() -> LayoutInflater.Factory2!

  @JavaMethod
  open func setFactory(_ arg0: LayoutInflater.Factory?)

  @JavaMethod
  open func setFactory2(_ arg0: LayoutInflater.Factory2?)

  @JavaMethod
  open func createView(_ arg0: String, _ arg1: String, _ arg2: AttributeSet?) throws -> View!

  @JavaMethod
  open func createView(_ arg0: Context?, _ arg1: String, _ arg2: String, _ arg3: AttributeSet?) throws -> View!

  @JavaMethod
  open func onCreateView(_ arg0: View?, _ arg1: String, _ arg2: AttributeSet?) throws -> View!

  @JavaMethod
  open func onCreateView(_ arg0: String, _ arg1: AttributeSet?) throws -> View!

  @JavaMethod
  open func onCreateView(_ arg0: Context?, _ arg1: View?, _ arg2: String, _ arg3: AttributeSet?) throws -> View!

  @JavaMethod
  open func inflate(_ arg0: Int32, _ arg1: ViewGroup?) -> View!

  @JavaMethod
  open func inflate(_ arg0: Int32, _ arg1: ViewGroup?, _ arg2: Bool) -> View!

  @JavaMethod
  open func getFactory() -> LayoutInflater.Factory!

  @JavaMethod
  open func getFilter() -> LayoutInflater.Filter!

  @JavaMethod
  open func getContext() -> Context!

  @JavaMethod
  open func setFilter(_ arg0: LayoutInflater.Filter?)
}
extension JavaClass<LayoutInflater> {
  @JavaStaticMethod
  public func from(_ arg0: Context?) -> LayoutInflater!
}
