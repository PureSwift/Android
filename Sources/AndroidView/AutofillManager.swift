// Auto-generated by Java-to-Swift wrapper generator.
import AndroidContent
import AndroidGraphics
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("android.view.autofill.AutofillManager")
open class AutofillManager: JavaObject {
  @JavaMethod
  open func commit()

  @JavaMethod
  open func isEnabled() -> Bool

  @JavaMethod
  open func cancel()

  @JavaMethod
  open func notifyViewVisibilityChanged(_ arg0: View?, _ arg1: Bool)

  @JavaMethod
  open func notifyViewVisibilityChanged(_ arg0: View?, _ arg1: Int32, _ arg2: Bool)

  @JavaMethod
  open func disableAutofillServices()

  @JavaMethod
  open func hasEnabledAutofillServices() -> Bool

  @JavaMethod
  open func getAutofillServiceComponentName() -> ComponentName!

  @JavaMethod
  open func isFieldClassificationEnabled() -> Bool

  @JavaMethod
  open func isAutofillSupported() -> Bool

  @JavaMethod
  open func requestAutofill(_ arg0: View?)

  @JavaMethod
  open func requestAutofill(_ arg0: View?, _ arg1: Int32, _ arg2: Rect?)

  @JavaMethod
  open func notifyViewEntered(_ arg0: View?)

  @JavaMethod
  open func notifyViewEntered(_ arg0: View?, _ arg1: Int32, _ arg2: Rect?)

  @JavaMethod
  open func notifyViewExited(_ arg0: View?, _ arg1: Int32)

  @JavaMethod
  open func notifyViewExited(_ arg0: View?)

  @JavaMethod
  open func notifyValueChanged(_ arg0: View?)

  @JavaMethod
  open func notifyValueChanged(_ arg0: View?, _ arg1: Int32, _ arg2: AutofillValue?)

  @JavaMethod
  open func notifyViewClicked(_ arg0: View?, _ arg1: Int32)

  @JavaMethod
  open func notifyViewClicked(_ arg0: View?)

  @JavaMethod
  open func getUserDataId() -> String

  @JavaMethod
  open func getNextAutofillId() -> AutofillId!

  @JavaMethod
  open func registerCallback(_ arg0: AutofillManager.AutofillCallback?)

  @JavaMethod
  open func unregisterCallback(_ arg0: AutofillManager.AutofillCallback?)

  @JavaMethod
  open func showAutofillDialog(_ arg0: View?) -> Bool

  @JavaMethod
  open func showAutofillDialog(_ arg0: View?, _ arg1: Int32) -> Bool

  @JavaMethod
  open func getDefaultFieldClassificationAlgorithm() -> String

  @JavaMethod
  open func getAvailableFieldClassificationAlgorithms() -> List<JavaString>!
}
extension JavaClass<AutofillManager> {
  @JavaStaticField(isFinal: true)
  public var EXTRA_ASSIST_STRUCTURE: String

  @JavaStaticField(isFinal: true)
  public var EXTRA_AUTHENTICATION_RESULT: String

  @JavaStaticField(isFinal: true)
  public var EXTRA_AUTHENTICATION_RESULT_EPHEMERAL_DATASET: String

  @JavaStaticField(isFinal: true)
  public var EXTRA_CLIENT_STATE: String

  @JavaStaticField(isFinal: true)
  public var EXTRA_INLINE_SUGGESTIONS_REQUEST: String
}
