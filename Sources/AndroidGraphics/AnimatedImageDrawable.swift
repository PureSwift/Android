// Auto-generated by Java-to-Swift wrapper generator.
import AndroidContent
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.drawable.AnimatedImageDrawable", implements: Animatable2.self)
open class AnimatedImageDrawable: Drawable {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func getOpacity() -> Int32

  @JavaMethod
  open func isRunning() -> Bool

  @JavaMethod
  open override func draw(_ arg0: Canvas?)

  @JavaMethod
  open override func getAlpha() -> Int32

  @JavaMethod
  open override func setAlpha(_ arg0: Int32)

  @JavaMethod
  open override func getColorFilter() -> ColorFilter!

  @JavaMethod
  open override func setColorFilter(_ arg0: ColorFilter?)

  @JavaMethod
  open override func onBoundsChange(_ arg0: Rect?)

  @JavaMethod
  open override func onLayoutDirectionChanged(_ arg0: Int32) -> Bool

  @JavaMethod
  open override func setAutoMirrored(_ arg0: Bool)

  @JavaMethod
  open override func isAutoMirrored() -> Bool

  @JavaMethod
  open override func getIntrinsicWidth() -> Int32

  @JavaMethod
  open override func getIntrinsicHeight() -> Int32

  @JavaMethod
  open func clearAnimationCallbacks()

  @JavaMethod
  open func registerAnimationCallback(_ arg0: Animatable2.AnimationCallback?)

  @JavaMethod
  open func unregisterAnimationCallback(_ arg0: Animatable2.AnimationCallback?) -> Bool

  @JavaMethod
  open func setRepeatCount(_ arg0: Int32)

  @JavaMethod
  open func getRepeatCount() -> Int32

  @JavaMethod
  open func start()

  @JavaMethod
  open func stop()
}
extension JavaClass<AnimatedImageDrawable> {
  @JavaStaticField(isFinal: true)
  public var REPEAT_INFINITE: Int32
}
