// Auto-generated by Java-to-Swift wrapper generator.
import AndroidContent
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.drawable.InsetDrawable")
open class InsetDrawable: DrawableWrapper {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Drawable?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Drawable?, _ arg1: Float, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Drawable?, _ arg1: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Drawable?, _ arg1: Float, _ arg2: Float, _ arg3: Float, _ arg4: Float, environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func getOpacity() -> Int32

  @JavaMethod
  open override func applyTheme(_ arg0: Resources.Theme?)

  @JavaMethod
  open override func onBoundsChange(_ arg0: Rect?)

  @JavaMethod
  open override func getIntrinsicWidth() -> Int32

  @JavaMethod
  open override func getIntrinsicHeight() -> Int32

  @JavaMethod
  open override func getPadding(_ arg0: Rect?) -> Bool

  @JavaMethod
  open override func getOpticalInsets() -> Insets!

  @JavaMethod
  open override func getOutline(_ arg0: Outline?)
}
