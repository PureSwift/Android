// Auto-generated by Java-to-Swift wrapper generator.
import AndroidContent
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.drawable.ShapeDrawable")
open class ShapeDrawable: Drawable {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Shape?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func getChangingConfigurations() -> Int32

  @JavaMethod
  open override func getOpacity() -> Int32

  @JavaMethod
  open override func isStateful() -> Bool

  @JavaMethod
  open func getPaint() -> Paint!

  @JavaMethod
  open func setPadding(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32)

  @JavaMethod
  open func setPadding(_ arg0: Rect?)

  @JavaMethod
  open func setShape(_ arg0: Shape?)

  @JavaMethod
  open override func draw(_ arg0: Canvas?)

  @JavaMethod
  open override func getAlpha() -> Int32

  @JavaMethod
  open override func hasFocusStateSpecified() -> Bool

  @JavaMethod
  open override func applyTheme(_ arg0: Resources.Theme?)

  @JavaMethod
  open override func setAlpha(_ arg0: Int32)

  @JavaMethod
  open override func setTintList(_ arg0: ColorStateList?)

  @JavaMethod
  open override func setTintBlendMode(_ arg0: BlendMode?)

  @JavaMethod
  open override func setColorFilter(_ arg0: ColorFilter?)

  @JavaMethod
  open override func onBoundsChange(_ arg0: Rect?)

  @JavaMethod
  open override func onStateChange(_ arg0: [Int32]) -> Bool

  @JavaMethod
  open override func getConstantState() -> Drawable.ConstantState!

  @JavaMethod
  open override func mutate() -> Drawable!

  @JavaMethod
  open override func setDither(_ arg0: Bool)

  @JavaMethod
  open override func getIntrinsicWidth() -> Int32

  @JavaMethod
  open override func getIntrinsicHeight() -> Int32

  @JavaMethod
  open override func getPadding(_ arg0: Rect?) -> Bool

  @JavaMethod
  open override func getOutline(_ arg0: Outline?)

  @JavaMethod
  open func setShaderFactory(_ arg0: ShapeDrawable.ShaderFactory?)

  @JavaMethod
  open func getShaderFactory() -> ShapeDrawable.ShaderFactory!

  @JavaMethod
  open func setIntrinsicWidth(_ arg0: Int32)

  @JavaMethod
  open func setIntrinsicHeight(_ arg0: Int32)

  @JavaMethod
  open func onDraw(_ arg0: Shape?, _ arg1: Canvas?, _ arg2: Paint?)

  @JavaMethod
  open func getShape() -> Shape!
}
