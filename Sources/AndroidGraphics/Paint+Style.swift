// Auto-generated by Java-to-Swift wrapper generator.
import JavaLang
import JavaKit
import JavaRuntime

extension Paint {
  @JavaClass("android.graphics.Paint$Style")
  open class Style: Enum {
    public enum StyleCases: Equatable {
      case FILL
  case STROKE
  case FILL_AND_STROKE
    }

    public var enumValue: StyleCases! {
      let classObj = self.javaClass
      if self.equals(classObj.FILL?.as(JavaObject.self)) {
        return StyleCases.FILL
  } else if self.equals(classObj.STROKE?.as(JavaObject.self)) {
        return StyleCases.STROKE
  } else if self.equals(classObj.FILL_AND_STROKE?.as(JavaObject.self)) {
        return StyleCases.FILL_AND_STROKE
  } else {
        return nil
      }
    }

  public convenience init(_ enumValue: StyleCases, environment: JNIEnvironment? = nil) {
    let _environment = if let environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    let classObj = try! JavaClass<Style>(environment: _environment)
    switch enumValue {
      case .FILL:
        if let FILL = classObj.FILL {
          self.init(javaHolder: FILL.javaHolder)
        } else {
          fatalError("Enum value FILL was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .STROKE:
        if let STROKE = classObj.STROKE {
          self.init(javaHolder: STROKE.javaHolder)
        } else {
          fatalError("Enum value STROKE was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .FILL_AND_STROKE:
        if let FILL_AND_STROKE = classObj.FILL_AND_STROKE {
          self.init(javaHolder: FILL_AND_STROKE.javaHolder)
        } else {
          fatalError("Enum value FILL_AND_STROKE was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
    }
  }
  }
}
extension JavaClass<Paint.Style> {
  @JavaStaticField(isFinal: true)
  public var FILL: Paint.Style!

  @JavaStaticField(isFinal: true)
  public var STROKE: Paint.Style!

  @JavaStaticField(isFinal: true)
  public var FILL_AND_STROKE: Paint.Style!

  @JavaStaticMethod
  public func values() -> [Paint.Style?]

  @JavaStaticMethod
  public func valueOf(_ arg0: String) -> Paint.Style!
}
