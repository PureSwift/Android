// Auto-generated by Java-to-Swift wrapper generator.
import AndroidOS
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.SurfaceTexture")
open class SurfaceTexture: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Bool, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, _ arg1: Bool, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getDataSpace() -> Int32

  @JavaMethod
  open func setOnFrameAvailableListener(_ arg0: SurfaceTexture.OnFrameAvailableListener?)

  @JavaMethod
  open func setOnFrameAvailableListener(_ arg0: SurfaceTexture.OnFrameAvailableListener?, _ arg1: Handler?)

  @JavaMethod
  open func setDefaultBufferSize(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func updateTexImage()

  @JavaMethod
  open func releaseTexImage()

  @JavaMethod
  open func detachFromGLContext()

  @JavaMethod
  open func attachToGLContext(_ arg0: Int32)

  @JavaMethod
  open func getTransformMatrix(_ arg0: [Float])

  @JavaMethod
  open func isReleased() -> Bool

  @JavaMethod
  open override func finalize() throws

  @JavaMethod
  open func release()

  @JavaMethod
  open func getTimestamp() -> Int64
}
