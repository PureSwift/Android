// Auto-generated by Java-to-Swift wrapper generator.
import AndroidContent
import JavaLang
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.drawable.LayerDrawable", implements: Drawable.Callback.self)
open class LayerDrawable: Drawable {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: [Drawable?], environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func canApplyTheme() -> Bool

  @JavaMethod
  open override func getChangingConfigurations() -> Int32

  @JavaMethod
  open override func getOpacity() -> Int32

  @JavaMethod
  open override func isStateful() -> Bool

  @JavaMethod
  open func addLayer(_ arg0: Drawable?) -> Int32

  @JavaMethod
  open func findDrawableByLayerId(_ arg0: Int32) -> Drawable!

  @JavaMethod
  open func setId(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func getNumberOfLayers() -> Int32

  @JavaMethod
  open func setDrawableByLayerId(_ arg0: Int32, _ arg1: Drawable?) -> Bool

  @JavaMethod
  open func findIndexByLayerId(_ arg0: Int32) -> Int32

  @JavaMethod
  open func setDrawable(_ arg0: Int32, _ arg1: Drawable?)

  @JavaMethod
  open func getDrawable(_ arg0: Int32) -> Drawable!

  @JavaMethod
  open func setLayerSize(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open func setLayerWidth(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func getLayerWidth(_ arg0: Int32) -> Int32

  @JavaMethod
  open func setLayerHeight(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func getLayerHeight(_ arg0: Int32) -> Int32

  @JavaMethod
  open func setLayerGravity(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func getLayerGravity(_ arg0: Int32) -> Int32

  @JavaMethod
  open func setLayerInset(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32)

  @JavaMethod
  open func setLayerInsetRelative(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32)

  @JavaMethod
  open func setLayerInsetLeft(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func getLayerInsetLeft(_ arg0: Int32) -> Int32

  @JavaMethod
  open func setLayerInsetRight(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func getLayerInsetRight(_ arg0: Int32) -> Int32

  @JavaMethod
  open func setLayerInsetTop(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func getLayerInsetTop(_ arg0: Int32) -> Int32

  @JavaMethod
  open func setLayerInsetBottom(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func getLayerInsetBottom(_ arg0: Int32) -> Int32

  @JavaMethod
  open func setLayerInsetStart(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func getLayerInsetStart(_ arg0: Int32) -> Int32

  @JavaMethod
  open func setLayerInsetEnd(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func getLayerInsetEnd(_ arg0: Int32) -> Int32

  @JavaMethod
  open func setPaddingMode(_ arg0: Int32)

  @JavaMethod
  open func getPaddingMode() -> Int32

  @JavaMethod
  open func setPadding(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32)

  @JavaMethod
  open func setPaddingRelative(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32)

  @JavaMethod
  open func getLeftPadding() -> Int32

  @JavaMethod
  open func getRightPadding() -> Int32

  @JavaMethod
  open func getStartPadding() -> Int32

  @JavaMethod
  open func getEndPadding() -> Int32

  @JavaMethod
  open func getTopPadding() -> Int32

  @JavaMethod
  open func getBottomPadding() -> Int32

  @JavaMethod
  open func setOpacity(_ arg0: Int32)

  @JavaMethod
  open override func draw(_ arg0: Canvas?)

  @JavaMethod
  open override func getAlpha() -> Int32

  @JavaMethod
  open override func hasFocusStateSpecified() -> Bool

  @JavaMethod
  open override func applyTheme(_ arg0: Resources.Theme?)

  @JavaMethod
  open override func setAlpha(_ arg0: Int32)

  @JavaMethod
  open override func setTintList(_ arg0: ColorStateList?)

  @JavaMethod
  open override func setTintBlendMode(_ arg0: BlendMode?)

  @JavaMethod
  open override func setColorFilter(_ arg0: ColorFilter?)

  @JavaMethod
  open override func onBoundsChange(_ arg0: Rect?)

  @JavaMethod
  open override func onStateChange(_ arg0: [Int32]) -> Bool

  @JavaMethod
  open func invalidateDrawable(_ arg0: Drawable?)

  @JavaMethod
  open func scheduleDrawable(_ arg0: Drawable?, _ arg1: Runnable?, _ arg2: Int64)

  @JavaMethod
  open func unscheduleDrawable(_ arg0: Drawable?, _ arg1: Runnable?)

  @JavaMethod
  open override func getConstantState() -> Drawable.ConstantState!

  @JavaMethod
  open override func mutate() -> Drawable!

  @JavaMethod
  open override func setDither(_ arg0: Bool)

  @JavaMethod
  open override func onLayoutDirectionChanged(_ arg0: Int32) -> Bool

  @JavaMethod
  open override func setHotspot(_ arg0: Float, _ arg1: Float)

  @JavaMethod
  open override func setHotspotBounds(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32)

  @JavaMethod
  open override func getHotspotBounds(_ arg0: Rect?)

  @JavaMethod
  open override func isProjected() -> Bool

  @JavaMethod
  open override func jumpToCurrentState()

  @JavaMethod
  open override func setVisible(_ arg0: Bool, _ arg1: Bool) -> Bool

  @JavaMethod
  open override func setAutoMirrored(_ arg0: Bool)

  @JavaMethod
  open override func isAutoMirrored() -> Bool

  @JavaMethod
  open override func onLevelChange(_ arg0: Int32) -> Bool

  @JavaMethod
  open override func getIntrinsicWidth() -> Int32

  @JavaMethod
  open override func getIntrinsicHeight() -> Int32

  @JavaMethod
  open override func getPadding(_ arg0: Rect?) -> Bool

  @JavaMethod
  open override func getOutline(_ arg0: Outline?)

  @JavaMethod
  open func getId(_ arg0: Int32) -> Int32
}
extension JavaClass<LayerDrawable> {
  @JavaStaticField(isFinal: true)
  public var INSET_UNDEFINED: Int32

  @JavaStaticField(isFinal: true)
  public var PADDING_MODE_NEST: Int32

  @JavaStaticField(isFinal: true)
  public var PADDING_MODE_STACK: Int32
}
