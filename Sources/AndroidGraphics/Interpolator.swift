// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.Interpolator")
open class Interpolator: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, _ arg1: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getKeyFrameCount() -> Int32

  @JavaMethod
  open func getValueCount() -> Int32

  @JavaMethod
  open func setKeyFrame(_ arg0: Int32, _ arg1: Int32, _ arg2: [Float], _ arg3: [Float])

  @JavaMethod
  open func setKeyFrame(_ arg0: Int32, _ arg1: Int32, _ arg2: [Float])

  @JavaMethod
  open func setRepeatMirror(_ arg0: Float, _ arg1: Bool)

  @JavaMethod
  open func timeToValues(_ arg0: Int32, _ arg1: [Float]) -> Interpolator.Result!

  @JavaMethod
  open func timeToValues(_ arg0: [Float]) -> Interpolator.Result!

  @JavaMethod
  open override func finalize() throws

  @JavaMethod
  open func reset(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func reset(_ arg0: Int32)
}
