// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.Canvas")
open class Canvas: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Bitmap?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func restore()

  @JavaMethod
  open func translate(_ arg0: Float, _ arg1: Float)

  @JavaMethod
  open func getMatrix() -> Matrix!

  @JavaMethod
  open func getMatrix(_ arg0: Matrix?)

  @JavaMethod
  open func getWidth() -> Int32

  @JavaMethod
  open func getHeight() -> Int32

  @JavaMethod
  open func quickReject(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float, _ arg4: Canvas.EdgeType?) -> Bool

  @JavaMethod
  open func quickReject(_ arg0: Path?) -> Bool

  @JavaMethod
  open func quickReject(_ arg0: RectF?, _ arg1: Canvas.EdgeType?) -> Bool

  @JavaMethod
  open func quickReject(_ arg0: Path?, _ arg1: Canvas.EdgeType?) -> Bool

  @JavaMethod
  open func quickReject(_ arg0: RectF?) -> Bool

  @JavaMethod
  open func quickReject(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float) -> Bool

  @JavaMethod
  open func getDensity() -> Int32

  @JavaMethod
  open func setDensity(_ arg0: Int32)

  @JavaMethod
  open func setBitmap(_ arg0: Bitmap?)

  @JavaMethod
  open func isHardwareAccelerated() -> Bool

  @JavaMethod
  open func enableZ()

  @JavaMethod
  open func disableZ()

  @JavaMethod
  open func getMaximumBitmapWidth() -> Int32

  @JavaMethod
  open func getMaximumBitmapHeight() -> Int32

  @JavaMethod
  open func saveLayer(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float, _ arg4: Paint?, _ arg5: Int32) -> Int32

  @JavaMethod
  open func saveLayer(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float, _ arg4: Paint?) -> Int32

  @JavaMethod
  open func saveLayer(_ arg0: RectF?, _ arg1: Paint?, _ arg2: Int32) -> Int32

  @JavaMethod
  open func saveLayer(_ arg0: RectF?, _ arg1: Paint?) -> Int32

  @JavaMethod
  open func saveLayerAlpha(_ arg0: RectF?, _ arg1: Int32) -> Int32

  @JavaMethod
  open func saveLayerAlpha(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float, _ arg4: Int32) -> Int32

  @JavaMethod
  open func saveLayerAlpha(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float, _ arg4: Int32, _ arg5: Int32) -> Int32

  @JavaMethod
  open func saveLayerAlpha(_ arg0: RectF?, _ arg1: Int32, _ arg2: Int32) -> Int32

  @JavaMethod
  open func getSaveCount() -> Int32

  @JavaMethod
  open func restoreToCount(_ arg0: Int32)

  @JavaMethod
  open func skew(_ arg0: Float, _ arg1: Float)

  @JavaMethod
  open func setMatrix(_ arg0: Matrix?)

  @JavaMethod
  open func clipRect(_ arg0: Rect?) -> Bool

  @JavaMethod
  open func clipRect(_ arg0: RectF?) -> Bool

  @JavaMethod
  open func clipRect(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float, _ arg4: Region.Op?) -> Bool

  @JavaMethod
  open func clipRect(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float) -> Bool

  @JavaMethod
  open func clipRect(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32) -> Bool

  @JavaMethod
  open func clipRect(_ arg0: RectF?, _ arg1: Region.Op?) -> Bool

  @JavaMethod
  open func clipRect(_ arg0: Rect?, _ arg1: Region.Op?) -> Bool

  @JavaMethod
  open func clipOutRect(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float) -> Bool

  @JavaMethod
  open func clipOutRect(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32) -> Bool

  @JavaMethod
  open func clipOutRect(_ arg0: Rect?) -> Bool

  @JavaMethod
  open func clipOutRect(_ arg0: RectF?) -> Bool

  @JavaMethod
  open func clipPath(_ arg0: Path?) -> Bool

  @JavaMethod
  open func clipPath(_ arg0: Path?, _ arg1: Region.Op?) -> Bool

  @JavaMethod
  open func clipOutPath(_ arg0: Path?) -> Bool

  @JavaMethod
  open func getDrawFilter() -> DrawFilter!

  @JavaMethod
  open func setDrawFilter(_ arg0: DrawFilter?)

  @JavaMethod
  open func getClipBounds(_ arg0: Rect?) -> Bool

  @JavaMethod
  open func getClipBounds() -> Rect!

  @JavaMethod
  open func drawPicture(_ arg0: Picture?, _ arg1: Rect?)

  @JavaMethod
  open func drawPicture(_ arg0: Picture?)

  @JavaMethod
  open func drawPicture(_ arg0: Picture?, _ arg1: RectF?)

  @JavaMethod
  open func drawArc(_ arg0: RectF?, _ arg1: Float, _ arg2: Float, _ arg3: Bool, _ arg4: Paint?)

  @JavaMethod
  open func drawArc(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float, _ arg4: Float, _ arg5: Float, _ arg6: Bool, _ arg7: Paint?)

  @JavaMethod
  open func drawARGB(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32)

  @JavaMethod
  open func drawBitmap(_ arg0: Bitmap?, _ arg1: Rect?, _ arg2: RectF?, _ arg3: Paint?)

  @JavaMethod
  open func drawBitmap(_ arg0: Bitmap?, _ arg1: Float, _ arg2: Float, _ arg3: Paint?)

  @JavaMethod
  open func drawBitmap(_ arg0: Bitmap?, _ arg1: Matrix?, _ arg2: Paint?)

  @JavaMethod
  open func drawBitmap(_ arg0: Bitmap?, _ arg1: Rect?, _ arg2: Rect?, _ arg3: Paint?)

  @JavaMethod
  open func drawBitmap(_ arg0: [Int32], _ arg1: Int32, _ arg2: Int32, _ arg3: Float, _ arg4: Float, _ arg5: Int32, _ arg6: Int32, _ arg7: Bool, _ arg8: Paint?)

  @JavaMethod
  open func drawBitmap(_ arg0: [Int32], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Int32, _ arg6: Int32, _ arg7: Bool, _ arg8: Paint?)

  @JavaMethod
  open func drawBitmapMesh(_ arg0: Bitmap?, _ arg1: Int32, _ arg2: Int32, _ arg3: [Float], _ arg4: Int32, _ arg5: [Int32], _ arg6: Int32, _ arg7: Paint?)

  @JavaMethod
  open func drawCircle(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Paint?)

  @JavaMethod
  open func drawColor(_ arg0: Int32)

  @JavaMethod
  open func drawColor(_ arg0: Int32, _ arg1: BlendMode?)

  @JavaMethod
  open func drawColor(_ arg0: Int32, _ arg1: PorterDuff.Mode?)

  @JavaMethod
  open func drawColor(_ arg0: Int64, _ arg1: BlendMode?)

  @JavaMethod
  open func drawColor(_ arg0: Int64)

  @JavaMethod
  open func drawLine(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float, _ arg4: Paint?)

  @JavaMethod
  open func drawLines(_ arg0: [Float], _ arg1: Paint?)

  @JavaMethod
  open func drawLines(_ arg0: [Float], _ arg1: Int32, _ arg2: Int32, _ arg3: Paint?)

  @JavaMethod
  open func drawOval(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float, _ arg4: Paint?)

  @JavaMethod
  open func drawOval(_ arg0: RectF?, _ arg1: Paint?)

  @JavaMethod
  open func drawPaint(_ arg0: Paint?)

  @JavaMethod
  open func drawPatch(_ arg0: NinePatch?, _ arg1: RectF?, _ arg2: Paint?)

  @JavaMethod
  open func drawPatch(_ arg0: NinePatch?, _ arg1: Rect?, _ arg2: Paint?)

  @JavaMethod
  open func drawPath(_ arg0: Path?, _ arg1: Paint?)

  @JavaMethod
  open func drawPoint(_ arg0: Float, _ arg1: Float, _ arg2: Paint?)

  @JavaMethod
  open func drawPoints(_ arg0: [Float], _ arg1: Paint?)

  @JavaMethod
  open func drawPoints(_ arg0: [Float], _ arg1: Int32, _ arg2: Int32, _ arg3: Paint?)

  @JavaMethod
  open func drawPosText(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: [Float], _ arg4: Paint?)

  @JavaMethod
  open func drawPosText(_ arg0: String, _ arg1: [Float], _ arg2: Paint?)

  @JavaMethod
  open func drawRect(_ arg0: RectF?, _ arg1: Paint?)

  @JavaMethod
  open func drawRect(_ arg0: Rect?, _ arg1: Paint?)

  @JavaMethod
  open func drawRect(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float, _ arg4: Paint?)

  @JavaMethod
  open func drawRGB(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open func drawRoundRect(_ arg0: RectF?, _ arg1: Float, _ arg2: Float, _ arg3: Paint?)

  @JavaMethod
  open func drawRoundRect(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float, _ arg4: Float, _ arg5: Float, _ arg6: Paint?)

  @JavaMethod
  open func drawDoubleRoundRect(_ arg0: RectF?, _ arg1: [Float], _ arg2: RectF?, _ arg3: [Float], _ arg4: Paint?)

  @JavaMethod
  open func drawDoubleRoundRect(_ arg0: RectF?, _ arg1: Float, _ arg2: Float, _ arg3: RectF?, _ arg4: Float, _ arg5: Float, _ arg6: Paint?)

  @JavaMethod
  open func drawGlyphs(_ arg0: [Int32], _ arg1: Int32, _ arg2: [Float], _ arg3: Int32, _ arg4: Int32, _ arg5: Font?, _ arg6: Paint?)

  @JavaMethod
  open func drawText(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Float, _ arg4: Float, _ arg5: Paint?)

  @JavaMethod
  open func drawText(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32, _ arg3: Float, _ arg4: Float, _ arg5: Paint?)

  @JavaMethod
  open func drawText(_ arg0: String, _ arg1: Int32, _ arg2: Int32, _ arg3: Float, _ arg4: Float, _ arg5: Paint?)

  @JavaMethod
  open func drawText(_ arg0: String, _ arg1: Float, _ arg2: Float, _ arg3: Paint?)

  @JavaMethod
  open func drawTextOnPath(_ arg0: String, _ arg1: Path?, _ arg2: Float, _ arg3: Float, _ arg4: Paint?)

  @JavaMethod
  open func drawTextOnPath(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Path?, _ arg4: Float, _ arg5: Float, _ arg6: Paint?)

  @JavaMethod
  open func drawTextRun(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Float, _ arg6: Float, _ arg7: Bool, _ arg8: Paint?)

  @JavaMethod
  open func drawTextRun(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Float, _ arg6: Float, _ arg7: Bool, _ arg8: Paint?)

  @JavaMethod
  open func drawTextRun(_ arg0: MeasuredText?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Float, _ arg6: Float, _ arg7: Bool, _ arg8: Paint?)

  @JavaMethod
  open func drawVertices(_ arg0: Canvas.VertexMode?, _ arg1: Int32, _ arg2: [Float], _ arg3: Int32, _ arg4: [Float], _ arg5: Int32, _ arg6: [Int32], _ arg7: Int32, _ arg8: [Int16], _ arg9: Int32, _ arg10: Int32, _ arg11: Paint?)

  @JavaMethod
  open func drawRenderNode(_ arg0: RenderNode?)

  @JavaMethod
  open func scale(_ arg0: Float, _ arg1: Float)

  @JavaMethod
  open func scale(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float)

  @JavaMethod
  open func concat(_ arg0: Matrix?)

  @JavaMethod
  open func save() -> Int32

  @JavaMethod
  open func isOpaque() -> Bool

  @JavaMethod
  open func rotate(_ arg0: Float, _ arg1: Float, _ arg2: Float)

  @JavaMethod
  open func rotate(_ arg0: Float)
}
extension JavaClass<Canvas> {
  @JavaStaticField(isFinal: true)
  public var ALL_SAVE_FLAG: Int32
}
