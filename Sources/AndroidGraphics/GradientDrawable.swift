// Auto-generated by Java-to-Swift wrapper generator.
import AndroidContent
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.drawable.GradientDrawable")
open class GradientDrawable: Drawable {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: GradientDrawable.Orientation?, _ arg1: [Int32], environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func canApplyTheme() -> Bool

  @JavaMethod
  open override func getChangingConfigurations() -> Int32

  @JavaMethod
  open override func getOpacity() -> Int32

  @JavaMethod
  open override func isStateful() -> Bool

  @JavaMethod
  open func getColor() -> ColorStateList!

  @JavaMethod
  open func setPadding(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32)

  @JavaMethod
  open func setCornerRadii(_ arg0: [Float])

  @JavaMethod
  open func getCornerRadii() -> [Float]

  @JavaMethod
  open func setCornerRadius(_ arg0: Float)

  @JavaMethod
  open func getCornerRadius() -> Float

  @JavaMethod
  open func setStroke(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func setStroke(_ arg0: Int32, _ arg1: ColorStateList?, _ arg2: Float, _ arg3: Float)

  @JavaMethod
  open func setStroke(_ arg0: Int32, _ arg1: Int32, _ arg2: Float, _ arg3: Float)

  @JavaMethod
  open func setStroke(_ arg0: Int32, _ arg1: ColorStateList?)

  @JavaMethod
  open func setShape(_ arg0: Int32)

  @JavaMethod
  open func setGradientType(_ arg0: Int32)

  @JavaMethod
  open func getGradientType() -> Int32

  @JavaMethod
  open func setGradientCenter(_ arg0: Float, _ arg1: Float)

  @JavaMethod
  open func getGradientCenterX() -> Float

  @JavaMethod
  open func getGradientCenterY() -> Float

  @JavaMethod
  open func setGradientRadius(_ arg0: Float)

  @JavaMethod
  open func getGradientRadius() -> Float

  @JavaMethod
  open func setUseLevel(_ arg0: Bool)

  @JavaMethod
  open func getUseLevel() -> Bool

  @JavaMethod
  open func getOrientation() -> GradientDrawable.Orientation!

  @JavaMethod
  open func setOrientation(_ arg0: GradientDrawable.Orientation?)

  @JavaMethod
  open func setColors(_ arg0: [Int32])

  @JavaMethod
  open func setColors(_ arg0: [Int32], _ arg1: [Float])

  @JavaMethod
  open func getColors() -> [Int32]

  @JavaMethod
  open func setInnerRadiusRatio(_ arg0: Float)

  @JavaMethod
  open func getInnerRadiusRatio() -> Float

  @JavaMethod
  open func setInnerRadius(_ arg0: Int32)

  @JavaMethod
  open func getInnerRadius() -> Int32

  @JavaMethod
  open func setThicknessRatio(_ arg0: Float)

  @JavaMethod
  open func getThicknessRatio() -> Float

  @JavaMethod
  open func setThickness(_ arg0: Int32)

  @JavaMethod
  open func getThickness() -> Int32

  @JavaMethod
  open override func draw(_ arg0: Canvas?)

  @JavaMethod
  open override func getAlpha() -> Int32

  @JavaMethod
  open override func hasFocusStateSpecified() -> Bool

  @JavaMethod
  open override func applyTheme(_ arg0: Resources.Theme?)

  @JavaMethod
  open override func setAlpha(_ arg0: Int32)

  @JavaMethod
  open override func setTintList(_ arg0: ColorStateList?)

  @JavaMethod
  open override func setTintBlendMode(_ arg0: BlendMode?)

  @JavaMethod
  open override func getColorFilter() -> ColorFilter!

  @JavaMethod
  open override func setColorFilter(_ arg0: ColorFilter?)

  @JavaMethod
  open override func onBoundsChange(_ arg0: Rect?)

  @JavaMethod
  open override func onStateChange(_ arg0: [Int32]) -> Bool

  @JavaMethod
  open override func getConstantState() -> Drawable.ConstantState!

  @JavaMethod
  open override func mutate() -> Drawable!

  @JavaMethod
  open override func setDither(_ arg0: Bool)

  @JavaMethod
  open override func onLevelChange(_ arg0: Int32) -> Bool

  @JavaMethod
  open override func getIntrinsicWidth() -> Int32

  @JavaMethod
  open override func getIntrinsicHeight() -> Int32

  @JavaMethod
  open override func getPadding(_ arg0: Rect?) -> Bool

  @JavaMethod
  open override func getOpticalInsets() -> Insets!

  @JavaMethod
  open override func getOutline(_ arg0: Outline?)

  @JavaMethod
  open func setSize(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func getShape() -> Int32

  @JavaMethod
  open func setColor(_ arg0: ColorStateList?)

  @JavaMethod
  open func setColor(_ arg0: Int32)
}
extension JavaClass<GradientDrawable> {
  @JavaStaticField(isFinal: true)
  public var LINE: Int32

  @JavaStaticField(isFinal: true)
  public var LINEAR_GRADIENT: Int32

  @JavaStaticField(isFinal: true)
  public var OVAL: Int32

  @JavaStaticField(isFinal: true)
  public var RADIAL_GRADIENT: Int32

  @JavaStaticField(isFinal: true)
  public var RECTANGLE: Int32

  @JavaStaticField(isFinal: true)
  public var RING: Int32

  @JavaStaticField(isFinal: true)
  public var SWEEP_GRADIENT: Int32
}
