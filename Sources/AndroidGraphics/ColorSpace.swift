// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.ColorSpace")
open class ColorSpace: JavaObject {
  @JavaMethod
  open func getModel() -> ColorSpace.Model!

  @JavaMethod
  open func getComponentCount() -> Int32

  @JavaMethod
  open func getDataSpace() -> Int32

  @JavaMethod
  open func isSrgb() -> Bool

  @JavaMethod
  open func isWideGamut() -> Bool

  @JavaMethod
  open func getMinValue(_ arg0: Int32) -> Float

  @JavaMethod
  open func getMaxValue(_ arg0: Int32) -> Float

  @JavaMethod
  open func toXyz(_ arg0: Float, _ arg1: Float, _ arg2: Float) -> [Float]

  @JavaMethod
  open func toXyz(_ arg0: [Float]) -> [Float]

  @JavaMethod
  open func fromXyz(_ arg0: [Float]) -> [Float]

  @JavaMethod
  open func fromXyz(_ arg0: Float, _ arg1: Float, _ arg2: Float) -> [Float]

  @JavaMethod
  open func getName() -> String

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func getId() -> Int32
}
extension JavaClass<ColorSpace> {
  @JavaStaticField(isFinal: true)
  public var ILLUMINANT_A: [Float]

  @JavaStaticField(isFinal: true)
  public var ILLUMINANT_B: [Float]

  @JavaStaticField(isFinal: true)
  public var ILLUMINANT_C: [Float]

  @JavaStaticField(isFinal: true)
  public var ILLUMINANT_D50: [Float]

  @JavaStaticField(isFinal: true)
  public var ILLUMINANT_D55: [Float]

  @JavaStaticField(isFinal: true)
  public var ILLUMINANT_D60: [Float]

  @JavaStaticField(isFinal: true)
  public var ILLUMINANT_D65: [Float]

  @JavaStaticField(isFinal: true)
  public var ILLUMINANT_D75: [Float]

  @JavaStaticField(isFinal: true)
  public var ILLUMINANT_E: [Float]

  @JavaStaticField(isFinal: true)
  public var MAX_ID: Int32

  @JavaStaticField(isFinal: true)
  public var MIN_ID: Int32

  @JavaStaticMethod
  public func connect(_ arg0: ColorSpace?, _ arg1: ColorSpace.RenderIntent?) -> ColorSpace.Connector!

  @JavaStaticMethod
  public func connect(_ arg0: ColorSpace?, _ arg1: ColorSpace?) -> ColorSpace.Connector!

  @JavaStaticMethod
  public func connect(_ arg0: ColorSpace?, _ arg1: ColorSpace?, _ arg2: ColorSpace.RenderIntent?) -> ColorSpace.Connector!

  @JavaStaticMethod
  public func connect(_ arg0: ColorSpace?) -> ColorSpace.Connector!

  @JavaStaticMethod
  public func getFromDataSpace(_ arg0: Int32) -> ColorSpace!

  @JavaStaticMethod
  public func cctToXyz(_ arg0: Int32) -> [Float]

  @JavaStaticMethod
  public func chromaticAdaptation(_ arg0: ColorSpace.Adaptation?, _ arg1: [Float], _ arg2: [Float]) -> [Float]

  @JavaStaticMethod
  public func get(_ arg0: ColorSpace.Named?) -> ColorSpace!

  @JavaStaticMethod
  public func match(_ arg0: [Float], _ arg1: ColorSpace.Rgb.TransferParameters?) -> ColorSpace!

  @JavaStaticMethod
  public func adapt(_ arg0: ColorSpace?, _ arg1: [Float], _ arg2: ColorSpace.Adaptation?) -> ColorSpace!

  @JavaStaticMethod
  public func adapt(_ arg0: ColorSpace?, _ arg1: [Float]) -> ColorSpace!
}
