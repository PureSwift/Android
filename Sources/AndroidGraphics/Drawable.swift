// Auto-generated by Java-to-Swift wrapper generator.
import AndroidContent
import AndroidJavaIO
import AndroidJavaLang
import AndroidUtil
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.drawable.Drawable")
open class Drawable: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func canApplyTheme() -> Bool

  @JavaMethod
  open func getChangingConfigurations() -> Int32

  @JavaMethod
  open func getOpacity() -> Int32

  @JavaMethod
  open func isStateful() -> Bool

  @JavaMethod
  open func draw(_ arg0: Canvas?)

  @JavaMethod
  open func getAlpha() -> Int32

  @JavaMethod
  open func hasFocusStateSpecified() -> Bool

  @JavaMethod
  open func getCurrent() -> Drawable!

  @JavaMethod
  open func applyTheme(_ arg0: Resources.Theme?)

  @JavaMethod
  open func setAlpha(_ arg0: Int32)

  @JavaMethod
  open func setTintList(_ arg0: ColorStateList?)

  @JavaMethod
  open func setTintBlendMode(_ arg0: BlendMode?)

  @JavaMethod
  open func getColorFilter() -> ColorFilter!

  @JavaMethod
  open func setColorFilter(_ arg0: ColorFilter?)

  @JavaMethod
  open func setColorFilter(_ arg0: Int32, _ arg1: PorterDuff.Mode?)

  @JavaMethod
  open func onBoundsChange(_ arg0: Rect?)

  @JavaMethod
  open func onStateChange(_ arg0: [Int32]) -> Bool

  @JavaMethod
  open func getConstantState() -> Drawable.ConstantState!

  @JavaMethod
  open func mutate() -> Drawable!

  @JavaMethod
  open func setBounds(_ arg0: Rect?)

  @JavaMethod
  open func setBounds(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32)

  @JavaMethod
  open func copyBounds() -> Rect!

  @JavaMethod
  open func copyBounds(_ arg0: Rect?)

  @JavaMethod
  open func getDirtyBounds() -> Rect!

  @JavaMethod
  open func setChangingConfigurations(_ arg0: Int32)

  @JavaMethod
  open func setDither(_ arg0: Bool)

  @JavaMethod
  open func setFilterBitmap(_ arg0: Bool)

  @JavaMethod
  open func isFilterBitmap() -> Bool

  @JavaMethod
  open func setCallback(_ arg0: Drawable.Callback?)

  @JavaMethod
  open func getCallback() -> Drawable.Callback!

  @JavaMethod
  open func invalidateSelf()

  @JavaMethod
  open func scheduleSelf(_ arg0: Runnable?, _ arg1: Int64)

  @JavaMethod
  open func unscheduleSelf(_ arg0: Runnable?)

  @JavaMethod
  open func getLayoutDirection() -> Int32

  @JavaMethod
  open func setLayoutDirection(_ arg0: Int32) -> Bool

  @JavaMethod
  open func onLayoutDirectionChanged(_ arg0: Int32) -> Bool

  @JavaMethod
  open func setTint(_ arg0: Int32)

  @JavaMethod
  open func setTintMode(_ arg0: PorterDuff.Mode?)

  @JavaMethod
  open func clearColorFilter()

  @JavaMethod
  open func setHotspot(_ arg0: Float, _ arg1: Float)

  @JavaMethod
  open func setHotspotBounds(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32)

  @JavaMethod
  open func getHotspotBounds(_ arg0: Rect?)

  @JavaMethod
  open func isProjected() -> Bool

  @JavaMethod
  open func jumpToCurrentState()

  @JavaMethod
  open func setVisible(_ arg0: Bool, _ arg1: Bool) -> Bool

  @JavaMethod
  open func isVisible() -> Bool

  @JavaMethod
  open func setAutoMirrored(_ arg0: Bool)

  @JavaMethod
  open func isAutoMirrored() -> Bool

  @JavaMethod
  open func getTransparentRegion() -> Region!

  @JavaMethod
  open func onLevelChange(_ arg0: Int32) -> Bool

  @JavaMethod
  open func getIntrinsicWidth() -> Int32

  @JavaMethod
  open func getIntrinsicHeight() -> Int32

  @JavaMethod
  open func getMinimumWidth() -> Int32

  @JavaMethod
  open func getMinimumHeight() -> Int32

  @JavaMethod
  open func getPadding(_ arg0: Rect?) -> Bool

  @JavaMethod
  open func getOpticalInsets() -> Insets!

  @JavaMethod
  open func getOutline(_ arg0: Outline?)

  @JavaMethod
  open func getBounds() -> Rect!

  @JavaMethod
  open func getState() -> [Int32]

  @JavaMethod
  open func setState(_ arg0: [Int32]) -> Bool

  @JavaMethod
  open func setLevel(_ arg0: Int32) -> Bool

  @JavaMethod
  open func getLevel() -> Int32
}
extension JavaClass<Drawable> {
  @JavaStaticMethod
  public func resolveOpacity(_ arg0: Int32, _ arg1: Int32) -> Int32

  @JavaStaticMethod
  public func createFromStream(_ arg0: InputStream?, _ arg1: String) -> Drawable!

  @JavaStaticMethod
  public func createFromResourceStream(_ arg0: Resources?, _ arg1: TypedValue?, _ arg2: InputStream?, _ arg3: String) -> Drawable!

  @JavaStaticMethod
  public func createFromResourceStream(_ arg0: Resources?, _ arg1: TypedValue?, _ arg2: InputStream?, _ arg3: String, _ arg4: BitmapFactory.Options?) -> Drawable!

  @JavaStaticMethod
  public func createFromPath(_ arg0: String) -> Drawable!
}
