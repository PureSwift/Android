// Auto-generated by Java-to-Swift wrapper generator.
import JavaUtil
import AndroidOS
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.Paint")
open class Paint: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Paint?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getHinting() -> Int32

  @JavaMethod
  open func setHinting(_ arg0: Int32)

  @JavaMethod
  open func isAntiAlias() -> Bool

  @JavaMethod
  open func setAntiAlias(_ arg0: Bool)

  @JavaMethod
  open func isDither() -> Bool

  @JavaMethod
  open func isLinearText() -> Bool

  @JavaMethod
  open func setLinearText(_ arg0: Bool)

  @JavaMethod
  open func isSubpixelText() -> Bool

  @JavaMethod
  open func setSubpixelText(_ arg0: Bool)

  @JavaMethod
  open func isUnderlineText() -> Bool

  @JavaMethod
  open func getUnderlinePosition() -> Float

  @JavaMethod
  open func getUnderlineThickness() -> Float

  @JavaMethod
  open func setUnderlineText(_ arg0: Bool)

  @JavaMethod
  open func isStrikeThruText() -> Bool

  @JavaMethod
  open func getStrikeThruPosition() -> Float

  @JavaMethod
  open func getStrikeThruThickness() -> Float

  @JavaMethod
  open func setStrikeThruText(_ arg0: Bool)

  @JavaMethod
  open func isFakeBoldText() -> Bool

  @JavaMethod
  open func setFakeBoldText(_ arg0: Bool)

  @JavaMethod
  open func getStyle() -> Paint.Style!

  @JavaMethod
  open func setStyle(_ arg0: Paint.Style?)

  @JavaMethod
  open func getColor() -> Int32

  @JavaMethod
  open func getColorLong() -> Int64

  @JavaMethod
  open func setARGB(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32)

  @JavaMethod
  open func getStrokeWidth() -> Float

  @JavaMethod
  open func setStrokeWidth(_ arg0: Float)

  @JavaMethod
  open func getStrokeMiter() -> Float

  @JavaMethod
  open func setStrokeMiter(_ arg0: Float)

  @JavaMethod
  open func getStrokeCap() -> Paint.Cap!

  @JavaMethod
  open func setStrokeCap(_ arg0: Paint.Cap?)

  @JavaMethod
  open func getStrokeJoin() -> Paint.Join!

  @JavaMethod
  open func setStrokeJoin(_ arg0: Paint.Join?)

  @JavaMethod
  open func getFillPath(_ arg0: Path?, _ arg1: Path?) -> Bool

  @JavaMethod
  open func getShader() -> Shader!

  @JavaMethod
  open func setShader(_ arg0: Shader?) -> Shader!

  @JavaMethod
  open func getXfermode() -> Xfermode!

  @JavaMethod
  open func getBlendMode() -> BlendMode!

  @JavaMethod
  open func setXfermode(_ arg0: Xfermode?) -> Xfermode!

  @JavaMethod
  open func setBlendMode(_ arg0: BlendMode?)

  @JavaMethod
  open func getPathEffect() -> PathEffect!

  @JavaMethod
  open func setPathEffect(_ arg0: PathEffect?) -> PathEffect!

  @JavaMethod
  open func getMaskFilter() -> MaskFilter!

  @JavaMethod
  open func setMaskFilter(_ arg0: MaskFilter?) -> MaskFilter!

  @JavaMethod
  open func getTypeface() -> Typeface!

  @JavaMethod
  open func setTypeface(_ arg0: Typeface?) -> Typeface!

  @JavaMethod
  open func setShadowLayer(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Int64)

  @JavaMethod
  open func setShadowLayer(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Int32)

  @JavaMethod
  open func clearShadowLayer()

  @JavaMethod
  open func getShadowLayerRadius() -> Float

  @JavaMethod
  open func getShadowLayerDx() -> Float

  @JavaMethod
  open func getShadowLayerDy() -> Float

  @JavaMethod
  open func getShadowLayerColor() -> Int32

  @JavaMethod
  open func getShadowLayerColorLong() -> Int64

  @JavaMethod
  open func getTextAlign() -> Paint.Align!

  @JavaMethod
  open func setTextAlign(_ arg0: Paint.Align?)

  @JavaMethod
  open func getTextLocale() -> Locale!

  @JavaMethod
  open func getTextLocales() -> LocaleList!

  @JavaMethod
  open func setTextLocale(_ arg0: Locale?)

  @JavaMethod
  open func setTextLocales(_ arg0: LocaleList?)

  @JavaMethod
  open func isElegantTextHeight() -> Bool

  @JavaMethod
  open func setElegantTextHeight(_ arg0: Bool)

  @JavaMethod
  open func getTextSize() -> Float

  @JavaMethod
  open func setTextSize(_ arg0: Float)

  @JavaMethod
  open func getTextScaleX() -> Float

  @JavaMethod
  open func setTextScaleX(_ arg0: Float)

  @JavaMethod
  open func getTextSkewX() -> Float

  @JavaMethod
  open func setTextSkewX(_ arg0: Float)

  @JavaMethod
  open func getLetterSpacing() -> Float

  @JavaMethod
  open func setLetterSpacing(_ arg0: Float)

  @JavaMethod
  open func getWordSpacing() -> Float

  @JavaMethod
  open func setWordSpacing(_ arg0: Float)

  @JavaMethod
  open func getFontFeatureSettings() -> String

  @JavaMethod
  open func setFontFeatureSettings(_ arg0: String)

  @JavaMethod
  open func getFontVariationSettings() -> String

  @JavaMethod
  open func setFontVariationSettings(_ arg0: String) -> Bool

  @JavaMethod
  open func getStartHyphenEdit() -> Int32

  @JavaMethod
  open func getEndHyphenEdit() -> Int32

  @JavaMethod
  open func setStartHyphenEdit(_ arg0: Int32)

  @JavaMethod
  open func setEndHyphenEdit(_ arg0: Int32)

  @JavaMethod
  open func ascent() -> Float

  @JavaMethod
  open func descent() -> Float

  @JavaMethod
  open func getFontMetrics(_ arg0: Paint.FontMetrics?) -> Float

  @JavaMethod
  open func getFontMetrics() -> Paint.FontMetrics!

  @JavaMethod
  open func getFontMetricsInt(_ arg0: Paint.FontMetricsInt?) -> Int32

  @JavaMethod
  open func getFontMetricsInt() -> Paint.FontMetricsInt!

  @JavaMethod
  open func getFontMetricsInt(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Bool, _ arg6: Paint.FontMetricsInt?)

  @JavaMethod
  open func getFontMetricsInt(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Bool, _ arg6: Paint.FontMetricsInt?)

  @JavaMethod
  open func getFontSpacing() -> Float

  @JavaMethod
  open func measureText(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32) -> Float

  @JavaMethod
  open func measureText(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32) -> Float

  @JavaMethod
  open func measureText(_ arg0: String) -> Float

  @JavaMethod
  open func measureText(_ arg0: String, _ arg1: Int32, _ arg2: Int32) -> Float

  @JavaMethod
  open func breakText(_ arg0: String, _ arg1: Bool, _ arg2: Float, _ arg3: [Float]) -> Int32

  @JavaMethod
  open func breakText(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32, _ arg3: Bool, _ arg4: Float, _ arg5: [Float]) -> Int32

  @JavaMethod
  open func breakText(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Float, _ arg4: [Float]) -> Int32

  @JavaMethod
  open func getTextWidths(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: [Float]) -> Int32

  @JavaMethod
  open func getTextWidths(_ arg0: String, _ arg1: Int32, _ arg2: Int32, _ arg3: [Float]) -> Int32

  @JavaMethod
  open func getTextWidths(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32, _ arg3: [Float]) -> Int32

  @JavaMethod
  open func getTextWidths(_ arg0: String, _ arg1: [Float]) -> Int32

  @JavaMethod
  open func getTextRunAdvances(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Bool, _ arg6: [Float], _ arg7: Int32) -> Float

  @JavaMethod
  open func getTextRunCursor(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32, _ arg3: Bool, _ arg4: Int32, _ arg5: Int32) -> Int32

  @JavaMethod
  open func getTextRunCursor(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Bool, _ arg4: Int32, _ arg5: Int32) -> Int32

  @JavaMethod
  open func getTextPath(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Float, _ arg4: Float, _ arg5: Path?)

  @JavaMethod
  open func getTextPath(_ arg0: String, _ arg1: Int32, _ arg2: Int32, _ arg3: Float, _ arg4: Float, _ arg5: Path?)

  @JavaMethod
  open func getTextBounds(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32, _ arg3: Rect?)

  @JavaMethod
  open func getTextBounds(_ arg0: String, _ arg1: Int32, _ arg2: Int32, _ arg3: Rect?)

  @JavaMethod
  open func getTextBounds(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Rect?)

  @JavaMethod
  open func hasGlyph(_ arg0: String) -> Bool

  @JavaMethod
  open func getRunAdvance(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Bool, _ arg6: Int32) -> Float

  @JavaMethod
  open func getRunAdvance(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Bool, _ arg6: Int32) -> Float

  @JavaMethod
  open func getOffsetForAdvance(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Bool, _ arg6: Float) -> Int32

  @JavaMethod
  open func getOffsetForAdvance(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Bool, _ arg6: Float) -> Int32

  @JavaMethod
  open func equalsForTextMeasurement(_ arg0: Paint?) -> Bool

  @JavaMethod
  open func getAlpha() -> Int32

  @JavaMethod
  open func setAlpha(_ arg0: Int32)

  @JavaMethod
  open func getColorFilter() -> ColorFilter!

  @JavaMethod
  open func setColorFilter(_ arg0: ColorFilter?) -> ColorFilter!

  @JavaMethod
  open func setDither(_ arg0: Bool)

  @JavaMethod
  open func setFilterBitmap(_ arg0: Bool)

  @JavaMethod
  open func isFilterBitmap() -> Bool

  @JavaMethod
  open func reset()

  @JavaMethod
  open func set(_ arg0: Paint?)

  @JavaMethod
  open func setFlags(_ arg0: Int32)

  @JavaMethod
  open func getFlags() -> Int32

  @JavaMethod
  open func setColor(_ arg0: Int32)

  @JavaMethod
  open func setColor(_ arg0: Int64)
}
extension JavaClass<Paint> {
  @JavaStaticField(isFinal: true)
  public var ANTI_ALIAS_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var CURSOR_AFTER: Int32

  @JavaStaticField(isFinal: true)
  public var CURSOR_AT: Int32

  @JavaStaticField(isFinal: true)
  public var CURSOR_AT_OR_AFTER: Int32

  @JavaStaticField(isFinal: true)
  public var CURSOR_AT_OR_BEFORE: Int32

  @JavaStaticField(isFinal: true)
  public var CURSOR_BEFORE: Int32

  @JavaStaticField(isFinal: true)
  public var DEV_KERN_TEXT_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var DITHER_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var EMBEDDED_BITMAP_TEXT_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var END_HYPHEN_EDIT_INSERT_ARMENIAN_HYPHEN: Int32

  @JavaStaticField(isFinal: true)
  public var END_HYPHEN_EDIT_INSERT_HYPHEN: Int32

  @JavaStaticField(isFinal: true)
  public var END_HYPHEN_EDIT_INSERT_MAQAF: Int32

  @JavaStaticField(isFinal: true)
  public var END_HYPHEN_EDIT_INSERT_UCAS_HYPHEN: Int32

  @JavaStaticField(isFinal: true)
  public var END_HYPHEN_EDIT_INSERT_ZWJ_AND_HYPHEN: Int32

  @JavaStaticField(isFinal: true)
  public var END_HYPHEN_EDIT_NO_EDIT: Int32

  @JavaStaticField(isFinal: true)
  public var END_HYPHEN_EDIT_REPLACE_WITH_HYPHEN: Int32

  @JavaStaticField(isFinal: true)
  public var FAKE_BOLD_TEXT_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var FILTER_BITMAP_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var HINTING_OFF: Int32

  @JavaStaticField(isFinal: true)
  public var HINTING_ON: Int32

  @JavaStaticField(isFinal: true)
  public var LINEAR_TEXT_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var START_HYPHEN_EDIT_INSERT_HYPHEN: Int32

  @JavaStaticField(isFinal: true)
  public var START_HYPHEN_EDIT_INSERT_ZWJ: Int32

  @JavaStaticField(isFinal: true)
  public var START_HYPHEN_EDIT_NO_EDIT: Int32

  @JavaStaticField(isFinal: true)
  public var STRIKE_THRU_TEXT_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var SUBPIXEL_TEXT_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var UNDERLINE_TEXT_FLAG: Int32
}
