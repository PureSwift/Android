// Auto-generated by Java-to-Swift wrapper generator.
import JavaLang
import JavaKit
import JavaRuntime

extension Canvas {
  @JavaClass("android.graphics.Canvas$EdgeType")
  open class EdgeType: Enum {
    public enum EdgeTypeCases: Equatable {
      case BW
  case AA
    }

    public var enumValue: EdgeTypeCases! {
      let classObj = self.javaClass
      if self.equals(classObj.BW?.as(JavaObject.self)) {
        return EdgeTypeCases.BW
  } else if self.equals(classObj.AA?.as(JavaObject.self)) {
        return EdgeTypeCases.AA
  } else {
        return nil
      }
    }

  public convenience init(_ enumValue: EdgeTypeCases, environment: JNIEnvironment? = nil) {
    let _environment = if let environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    let classObj = try! JavaClass<EdgeType>(environment: _environment)
    switch enumValue {
      case .BW:
        if let BW = classObj.BW {
          self.init(javaHolder: BW.javaHolder)
        } else {
          fatalError("Enum value BW was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .AA:
        if let AA = classObj.AA {
          self.init(javaHolder: AA.javaHolder)
        } else {
          fatalError("Enum value AA was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
    }
  }
  }
}
extension JavaClass<Canvas.EdgeType> {
  @JavaStaticField(isFinal: true)
  public var BW: Canvas.EdgeType!

  @JavaStaticField(isFinal: true)
  public var AA: Canvas.EdgeType!

  @JavaStaticMethod
  public func values() -> [Canvas.EdgeType?]

  @JavaStaticMethod
  public func valueOf(_ arg0: String) -> Canvas.EdgeType!
}
