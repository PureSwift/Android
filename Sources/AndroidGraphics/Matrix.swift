// Auto-generated by Java-to-Swift wrapper generator.
import JavaIO
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.Matrix")
open class Matrix: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Matrix?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func setRotate(_ arg0: Float, _ arg1: Float, _ arg2: Float)

  @JavaMethod
  open func setRotate(_ arg0: Float)

  @JavaMethod
  open func setConcat(_ arg0: Matrix?, _ arg1: Matrix?) -> Bool

  @JavaMethod
  open func preConcat(_ arg0: Matrix?) -> Bool

  @JavaMethod
  open func postConcat(_ arg0: Matrix?) -> Bool

  @JavaMethod
  open func isAffine() -> Bool

  @JavaMethod
  open func rectStaysRect() -> Bool

  @JavaMethod
  open func setTranslate(_ arg0: Float, _ arg1: Float)

  @JavaMethod
  open func setSinCos(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float)

  @JavaMethod
  open func setSinCos(_ arg0: Float, _ arg1: Float)

  @JavaMethod
  open func setSkew(_ arg0: Float, _ arg1: Float)

  @JavaMethod
  open func setSkew(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float)

  @JavaMethod
  open func preTranslate(_ arg0: Float, _ arg1: Float) -> Bool

  @JavaMethod
  open func preScale(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float) -> Bool

  @JavaMethod
  open func preScale(_ arg0: Float, _ arg1: Float) -> Bool

  @JavaMethod
  open func preRotate(_ arg0: Float, _ arg1: Float, _ arg2: Float) -> Bool

  @JavaMethod
  open func preRotate(_ arg0: Float) -> Bool

  @JavaMethod
  open func preSkew(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float) -> Bool

  @JavaMethod
  open func preSkew(_ arg0: Float, _ arg1: Float) -> Bool

  @JavaMethod
  open func postTranslate(_ arg0: Float, _ arg1: Float) -> Bool

  @JavaMethod
  open func postScale(_ arg0: Float, _ arg1: Float) -> Bool

  @JavaMethod
  open func postScale(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float) -> Bool

  @JavaMethod
  open func postRotate(_ arg0: Float, _ arg1: Float, _ arg2: Float) -> Bool

  @JavaMethod
  open func postRotate(_ arg0: Float) -> Bool

  @JavaMethod
  open func postSkew(_ arg0: Float, _ arg1: Float) -> Bool

  @JavaMethod
  open func postSkew(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float) -> Bool

  @JavaMethod
  open func setRectToRect(_ arg0: RectF?, _ arg1: RectF?, _ arg2: Matrix.ScaleToFit?) -> Bool

  @JavaMethod
  open func setPolyToPoly(_ arg0: [Float], _ arg1: Int32, _ arg2: [Float], _ arg3: Int32, _ arg4: Int32) -> Bool

  @JavaMethod
  open func invert(_ arg0: Matrix?) -> Bool

  @JavaMethod
  open func mapPoints(_ arg0: [Float], _ arg1: [Float])

  @JavaMethod
  open func mapPoints(_ arg0: [Float], _ arg1: Int32, _ arg2: [Float], _ arg3: Int32, _ arg4: Int32)

  @JavaMethod
  open func mapPoints(_ arg0: [Float])

  @JavaMethod
  open func mapVectors(_ arg0: [Float], _ arg1: Int32, _ arg2: [Float], _ arg3: Int32, _ arg4: Int32)

  @JavaMethod
  open func mapVectors(_ arg0: [Float])

  @JavaMethod
  open func mapVectors(_ arg0: [Float], _ arg1: [Float])

  @JavaMethod
  open func mapRect(_ arg0: RectF?) -> Bool

  @JavaMethod
  open func mapRect(_ arg0: RectF?, _ arg1: RectF?) -> Bool

  @JavaMethod
  open func mapRadius(_ arg0: Float) -> Float

  @JavaMethod
  open func getValues(_ arg0: [Float])

  @JavaMethod
  open func setValues(_ arg0: [Float])

  @JavaMethod
  open func reset()

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func set(_ arg0: Matrix?)

  @JavaMethod
  open func toShortString() -> String

  @JavaMethod
  open func dump(_ arg0: PrintWriter?)

  @JavaMethod
  open func isIdentity() -> Bool

  @JavaMethod
  open func setScale(_ arg0: Float, _ arg1: Float, _ arg2: Float, _ arg3: Float)

  @JavaMethod
  open func setScale(_ arg0: Float, _ arg1: Float)
}
extension JavaClass<Matrix> {
  @JavaStaticField(isFinal: true)
  public var IDENTITY_MATRIX: Matrix!

  @JavaStaticField(isFinal: true)
  public var MPERSP_0: Int32

  @JavaStaticField(isFinal: true)
  public var MPERSP_1: Int32

  @JavaStaticField(isFinal: true)
  public var MPERSP_2: Int32

  @JavaStaticField(isFinal: true)
  public var MSCALE_X: Int32

  @JavaStaticField(isFinal: true)
  public var MSCALE_Y: Int32

  @JavaStaticField(isFinal: true)
  public var MSKEW_X: Int32

  @JavaStaticField(isFinal: true)
  public var MSKEW_Y: Int32

  @JavaStaticField(isFinal: true)
  public var MTRANS_X: Int32

  @JavaStaticField(isFinal: true)
  public var MTRANS_Y: Int32
}
