// Auto-generated by Java-to-Swift wrapper generator.
import JavaLang
import JavaKit
import JavaRuntime

extension Paint {
  @JavaClass("android.graphics.Paint$Join")
  open class Join: Enum {
    public enum JoinCases: Equatable {
      case MITER
  case ROUND
  case BEVEL
    }

    public var enumValue: JoinCases! {
      let classObj = self.javaClass
      if self.equals(classObj.MITER?.as(JavaObject.self)) {
        return JoinCases.MITER
  } else if self.equals(classObj.ROUND?.as(JavaObject.self)) {
        return JoinCases.ROUND
  } else if self.equals(classObj.BEVEL?.as(JavaObject.self)) {
        return JoinCases.BEVEL
  } else {
        return nil
      }
    }

  public convenience init(_ enumValue: JoinCases, environment: JNIEnvironment? = nil) {
    let _environment = if let environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    let classObj = try! JavaClass<Join>(environment: _environment)
    switch enumValue {
      case .MITER:
        if let MITER = classObj.MITER {
          self.init(javaHolder: MITER.javaHolder)
        } else {
          fatalError("Enum value MITER was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .ROUND:
        if let ROUND = classObj.ROUND {
          self.init(javaHolder: ROUND.javaHolder)
        } else {
          fatalError("Enum value ROUND was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .BEVEL:
        if let BEVEL = classObj.BEVEL {
          self.init(javaHolder: BEVEL.javaHolder)
        } else {
          fatalError("Enum value BEVEL was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
    }
  }
  }
}
extension Paint.Join {
  @JavaClass("java.lang.Enum$EnumDesc")
  open class EnumDesc<E: AnyJavaObject>: JavaObject {
  @JavaMethod
  open override func toString() -> String
  }
}
extension JavaClass<Paint.Join> {
  @JavaStaticField(isFinal: true)
  public var MITER: Paint.Join!

  @JavaStaticField(isFinal: true)
  public var ROUND: Paint.Join!

  @JavaStaticField(isFinal: true)
  public var BEVEL: Paint.Join!

  @JavaStaticMethod
  public func values() -> [Paint.Join?]

  @JavaStaticMethod
  public func valueOf(_ arg0: String) -> Paint.Join!
}
