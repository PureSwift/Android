// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("android.graphics.PathMeasure")
open class PathMeasure: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Path?, _ arg1: Bool, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getMatrix(_ arg0: Float, _ arg1: Matrix?, _ arg2: Int32) -> Bool

  @JavaMethod
  open func setPath(_ arg0: Path?, _ arg1: Bool)

  @JavaMethod
  open func getPosTan(_ arg0: Float, _ arg1: [Float], _ arg2: [Float]) -> Bool

  @JavaMethod
  open func getSegment(_ arg0: Float, _ arg1: Float, _ arg2: Path?, _ arg3: Bool) -> Bool

  @JavaMethod
  open func isClosed() -> Bool

  @JavaMethod
  open func nextContour() -> Bool

  @JavaMethod
  open override func finalize() throws

  @JavaMethod
  open func getLength() -> Float
}
extension JavaClass<PathMeasure> {
  @JavaStaticField(isFinal: true)
  public var POSITION_MATRIX_FLAG: Int32

  @JavaStaticField(isFinal: true)
  public var TANGENT_MATRIX_FLAG: Int32
}
