// Auto-generated by Java-to-Swift wrapper generator.
import AndroidContent
import AndroidOS
import AndroidUtil
import JavaKit
import JavaRuntime
import JavaUtil

@JavaClass("androidx.navigation.NavDestination")
open class NavDestination: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Navigator<NavDestination>?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getArguments() -> Map<JavaString, NavArgument>!

  @JavaMethod
  open func getNavigatorName() -> String

  @JavaMethod
  open func setLabel(_ arg0: CharSequence?)

  @JavaMethod
  open func onInflate(_ arg0: Context?, _ arg1: AttributeSet?)

  @JavaMethod
  open func setRoute(_ arg0: String)

  @JavaMethod
  open func setId(_ arg0: Int32)

  @JavaMethod
  open func getRoute() -> String

  @JavaMethod
  open func hasDeepLink(_ arg0: NavDeepLinkRequest?) -> Bool

  @JavaMethod
  open func matchDeepLink(_ arg0: NavDeepLinkRequest?) -> NavDestination.DeepLinkMatch!

  @JavaMethod
  open func addDeepLink(_ arg0: NavDeepLink?)

  @JavaMethod
  open func addDeepLink(_ arg0: String)

  @JavaMethod
  open func matchRoute(_ arg0: String) -> NavDestination.DeepLinkMatch!

  @JavaMethod
  open func getAction(_ arg0: Int32) -> NavAction!

  @JavaMethod
  open func buildDeepLinkIds() -> [Int32]

  @JavaMethod
  open func buildDeepLinkIds(_ arg0: NavDestination?) -> [Int32]

  @JavaMethod
  open func hasRoute(_ arg0: String, _ arg1: Bundle?) -> Bool

  @JavaMethod
  open func supportsActions() -> Bool

  @JavaMethod
  open func putAction(_ arg0: Int32, _ arg1: NavAction?)

  @JavaMethod
  open func putAction(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func removeAction(_ arg0: Int32)

  @JavaMethod
  open func addArgument(_ arg0: String, _ arg1: NavArgument?)

  @JavaMethod
  open func removeArgument(_ arg0: String)

  @JavaMethod
  open func addInDefaultArgs(_ arg0: Bundle?) -> Bundle!

  @JavaMethod
  open func fillInLabel(_ arg0: Context?, _ arg1: Bundle?) -> String

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func getParent() -> NavGraph!

  @JavaMethod
  open func getId() -> Int32

  @JavaMethod
  open func getLabel() -> CharSequence!

  @JavaMethod
  open func getDisplayName() -> String

  @JavaMethod
  open func setParent(_ arg0: NavGraph?)
}
extension JavaClass<NavDestination> {
  @JavaStaticField(isFinal: true)
  public var Companion: NavDestination.Companion!

  @JavaStaticMethod
  public func buildDeepLinkIds$default(_ arg0: NavDestination?, _ arg1: NavDestination?, _ arg2: Int32, _ arg3: JavaObject?) -> [Int32]

  @JavaStaticMethod
  public func parseClassFromName(_ arg0: Context?, _ arg1: String, _ arg2: JavaClass<JavaObject>?) -> JavaClass<JavaObject>!

  @JavaStaticMethod
  public func parseClassFromNameInternal(_ arg0: Context?, _ arg1: String, _ arg2: JavaClass<JavaObject>?) -> JavaClass<JavaObject>!

  @JavaStaticMethod
  public func access$get_arguments$p(_ arg0: NavDestination?) -> Map!

  @JavaStaticMethod
  public func access$getClasses$cp() -> Map!

  @JavaStaticMethod
  public func getDisplayName(_ arg0: Context?, _ arg1: Int32) -> String
}
