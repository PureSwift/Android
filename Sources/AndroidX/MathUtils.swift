// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("androidx.core.math.MathUtils")
open class MathUtils: JavaObject {

}
extension JavaClass<MathUtils> {
  @JavaStaticMethod
  public func addExact(_ arg0: Int64, _ arg1: Int64) -> Int64

  @JavaStaticMethod
  public func addExact(_ arg0: Int32, _ arg1: Int32) -> Int32

  @JavaStaticMethod
  public func decrementExact(_ arg0: Int64) -> Int64

  @JavaStaticMethod
  public func decrementExact(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public func incrementExact(_ arg0: Int64) -> Int64

  @JavaStaticMethod
  public func incrementExact(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public func multiplyExact(_ arg0: Int32, _ arg1: Int32) -> Int32

  @JavaStaticMethod
  public func multiplyExact(_ arg0: Int64, _ arg1: Int64) -> Int64

  @JavaStaticMethod
  public func negateExact(_ arg0: Int64) -> Int64

  @JavaStaticMethod
  public func negateExact(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public func subtractExact(_ arg0: Int32, _ arg1: Int32) -> Int32

  @JavaStaticMethod
  public func subtractExact(_ arg0: Int64, _ arg1: Int64) -> Int64

  @JavaStaticMethod
  public func clamp(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32) -> Int32

  @JavaStaticMethod
  public func clamp(_ arg0: Double, _ arg1: Double, _ arg2: Double) -> Double

  @JavaStaticMethod
  public func clamp(_ arg0: Int64, _ arg1: Int64, _ arg2: Int64) -> Int64

  @JavaStaticMethod
  public func clamp(_ arg0: Float, _ arg1: Float, _ arg2: Float) -> Float

  @JavaStaticMethod
  public func toIntExact(_ arg0: Int64) -> Int32
}
