// Auto-generated by Java-to-Swift wrapper generator.
import AndroidView
import JavaKit
import JavaRuntime

@JavaClass("androidx.customview.widget.ViewDragHelper")
open class ViewDragHelper: JavaObject {
  @JavaMethod
  open func canScroll(_ arg0: View?, _ arg1: Bool, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Int32) -> Bool

  @JavaMethod
  open func setMinVelocity(_ arg0: Float)

  @JavaMethod
  open func getMinVelocity() -> Float

  @JavaMethod
  open func getViewDragState() -> Int32

  @JavaMethod
  open func setEdgeTrackingEnabled(_ arg0: Int32)

  @JavaMethod
  open func getEdgeSize() -> Int32

  @JavaMethod
  open func setEdgeSize(_ arg0: Int32)

  @JavaMethod
  open func getDefaultEdgeSize() -> Int32

  @JavaMethod
  open func captureChildView(_ arg0: View?, _ arg1: Int32)

  @JavaMethod
  open func getCapturedView() -> View!

  @JavaMethod
  open func getActivePointerId() -> Int32

  @JavaMethod
  open func getTouchSlop() -> Int32

  @JavaMethod
  open func smoothSlideViewTo(_ arg0: View?, _ arg1: Int32, _ arg2: Int32) -> Bool

  @JavaMethod
  open func settleCapturedViewAt(_ arg0: Int32, _ arg1: Int32) -> Bool

  @JavaMethod
  open func flingCapturedView(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32)

  @JavaMethod
  open func continueSettling(_ arg0: Bool) -> Bool

  @JavaMethod
  open func isPointerDown(_ arg0: Int32) -> Bool

  @JavaMethod
  open func shouldInterceptTouchEvent(_ arg0: MotionEvent?) -> Bool

  @JavaMethod
  open func processTouchEvent(_ arg0: MotionEvent?)

  @JavaMethod
  open func checkTouchSlop(_ arg0: Int32, _ arg1: Int32) -> Bool

  @JavaMethod
  open func checkTouchSlop(_ arg0: Int32) -> Bool

  @JavaMethod
  open func isEdgeTouched(_ arg0: Int32, _ arg1: Int32) -> Bool

  @JavaMethod
  open func isEdgeTouched(_ arg0: Int32) -> Bool

  @JavaMethod
  open func isCapturedViewUnder(_ arg0: Int32, _ arg1: Int32) -> Bool

  @JavaMethod
  open func isViewUnder(_ arg0: View?, _ arg1: Int32, _ arg2: Int32) -> Bool

  @JavaMethod
  open func findTopChildUnder(_ arg0: Int32, _ arg1: Int32) -> View!

  @JavaMethod
  open func cancel()

  @JavaMethod
  open func abort()
}
extension JavaClass<ViewDragHelper> {
  @JavaStaticField(isFinal: true)
  public var INVALID_POINTER: Int32

  @JavaStaticField(isFinal: true)
  public var STATE_IDLE: Int32

  @JavaStaticField(isFinal: true)
  public var STATE_DRAGGING: Int32

  @JavaStaticField(isFinal: true)
  public var STATE_SETTLING: Int32

  @JavaStaticField(isFinal: true)
  public var EDGE_LEFT: Int32

  @JavaStaticField(isFinal: true)
  public var EDGE_RIGHT: Int32

  @JavaStaticField(isFinal: true)
  public var EDGE_TOP: Int32

  @JavaStaticField(isFinal: true)
  public var EDGE_BOTTOM: Int32

  @JavaStaticField(isFinal: true)
  public var EDGE_ALL: Int32

  @JavaStaticField(isFinal: true)
  public var DIRECTION_HORIZONTAL: Int32

  @JavaStaticField(isFinal: true)
  public var DIRECTION_VERTICAL: Int32

  @JavaStaticField(isFinal: true)
  public var DIRECTION_ALL: Int32

  @JavaStaticMethod
  public func create(_ arg0: ViewGroup?, _ arg1: Float, _ arg2: ViewDragHelper.Callback?) -> ViewDragHelper!

  @JavaStaticMethod
  public func create(_ arg0: ViewGroup?, _ arg1: ViewDragHelper.Callback?) -> ViewDragHelper!
}
