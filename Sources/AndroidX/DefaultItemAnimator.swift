// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("androidx.recyclerview.widget.DefaultItemAnimator")
open class DefaultItemAnimator: SimpleItemAnimator {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func animateRemove(_ arg0: RecyclerView.ViewHolder?) -> Bool

  @JavaMethod
  open override func isRunning() -> Bool

  @JavaMethod
  open override func endAnimation(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open override func endAnimations()

  @JavaMethod
  open override func animateChange(_ arg0: RecyclerView.ViewHolder?, _ arg1: RecyclerView.ViewHolder?, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Int32) -> Bool

  @JavaMethod
  open override func canReuseUpdatedViewHolder(_ arg0: RecyclerView.ViewHolder?, _ arg1: List<JavaObject>?) -> Bool

  @JavaMethod
  open override func animateMove(_ arg0: RecyclerView.ViewHolder?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32) -> Bool

  @JavaMethod
  open override func animateAdd(_ arg0: RecyclerView.ViewHolder?) -> Bool

  @JavaMethod
  open override func runPendingAnimations()
}
extension JavaClass<DefaultItemAnimator> {
  @JavaStaticField(isFinal: true)
  public var FLAG_CHANGED: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_REMOVED: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_INVALIDATED: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_MOVED: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_APPEARED_IN_PRE_LAYOUT: Int32
}
