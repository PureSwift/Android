// Auto-generated by Java-to-Swift wrapper generator.
import AndroidContent
import AndroidGraphics
import AndroidJavaLang
import AndroidOS
import AndroidUtil
import AndroidView
import AndroidWidget
import JavaKit
import JavaKitCollection
import JavaKitReflection
import JavaRuntime

@JavaClass("androidx.recyclerview.widget.RecyclerView")
open class RecyclerView: ViewGroup {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Context?, _ arg1: AttributeSet?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Context?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Context?, _ arg1: AttributeSet?, _ arg2: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func setNestedScrollingEnabled(_ arg0: Bool)

  @JavaMethod
  open func setLayoutManager(_ arg0: RecyclerView.LayoutManager?)

  @JavaMethod
  open override func setClipToPadding(_ arg0: Bool)

  @JavaMethod
  open override func requestLayout()

  @JavaMethod
  open func setLayoutFrozen(_ arg0: Bool)

  @JavaMethod
  open override func getBaseline() -> Int32

  @JavaMethod
  open func stopScroll()

  @JavaMethod
  open override func onSaveInstanceState() -> Parcelable!

  @JavaMethod
  open override func onRestoreInstanceState(_ arg0: Parcelable?)

  @JavaMethod
  open func getChildViewHolder(_ arg0: View?) -> RecyclerView.ViewHolder!

  @JavaMethod
  open func getRecycledViewPool() -> RecyclerView.RecycledViewPool!

  @JavaMethod
  open func setRecycledViewPool(_ arg0: RecyclerView.RecycledViewPool?)

  @JavaMethod
  open func setViewCacheExtension(_ arg0: RecyclerView.ViewCacheExtension?)

  @JavaMethod
  open func addItemDecoration(_ arg0: RecyclerView.ItemDecoration?)

  @JavaMethod
  open func addItemDecoration(_ arg0: RecyclerView.ItemDecoration?, _ arg1: Int32)

  @JavaMethod
  open func getItemDecorationCount() -> Int32

  @JavaMethod
  open func getItemDecorationAt(_ arg0: Int32) -> RecyclerView.ItemDecoration!

  @JavaMethod
  open func removeItemDecoration(_ arg0: RecyclerView.ItemDecoration?)

  @JavaMethod
  open func scrollToPosition(_ arg0: Int32)

  @JavaMethod
  open func smoothScrollToPosition(_ arg0: Int32)

  @JavaMethod
  open override func dispatchKeyEvent(_ arg0: KeyEvent?) -> Bool

  @JavaMethod
  open func getLayoutManager() -> RecyclerView.LayoutManager!

  @JavaMethod
  open func smoothScrollBy(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func smoothScrollBy(_ arg0: Int32, _ arg1: Int32, _ arg2: Interpolator?, _ arg3: Int32)

  @JavaMethod
  open func smoothScrollBy(_ arg0: Int32, _ arg1: Int32, _ arg2: Interpolator?)

  @JavaMethod
  open func startNestedScroll(_ arg0: Int32, _ arg1: Int32) -> Bool

  @JavaMethod
  open override func startNestedScroll(_ arg0: Int32) -> Bool

  @JavaMethod
  open func dispatchNestedPreScroll(_ arg0: Int32, _ arg1: Int32, _ arg2: [Int32], _ arg3: [Int32], _ arg4: Int32) -> Bool

  @JavaMethod
  open override func dispatchNestedPreScroll(_ arg0: Int32, _ arg1: Int32, _ arg2: [Int32], _ arg3: [Int32]) -> Bool

  @JavaMethod
  open func stopNestedScroll(_ arg0: Int32)

  @JavaMethod
  open override func stopNestedScroll()

  @JavaMethod
  open override func dispatchNestedScroll(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: [Int32]) -> Bool

  @JavaMethod
  open func dispatchNestedScroll(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: [Int32], _ arg5: Int32, _ arg6: [Int32])

  @JavaMethod
  open func dispatchNestedScroll(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: [Int32], _ arg5: Int32) -> Bool

  @JavaMethod
  open override func computeHorizontalScrollOffset() -> Int32

  @JavaMethod
  open override func computeHorizontalScrollExtent() -> Int32

  @JavaMethod
  open override func computeHorizontalScrollRange() -> Int32

  @JavaMethod
  open override func computeVerticalScrollOffset() -> Int32

  @JavaMethod
  open override func computeVerticalScrollExtent() -> Int32

  @JavaMethod
  open override func computeVerticalScrollRange() -> Int32

  @JavaMethod
  open override func onTouchEvent(_ arg0: MotionEvent?) -> Bool

  @JavaMethod
  open override func suppressLayout(_ arg0: Bool)

  @JavaMethod
  open override func isLayoutSuppressed() -> Bool

  @JavaMethod
  open override func scrollBy(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func fling(_ arg0: Int32, _ arg1: Int32) -> Bool

  @JavaMethod
  open override func dispatchNestedPreFling(_ arg0: Float, _ arg1: Float) -> Bool

  @JavaMethod
  open override func dispatchNestedFling(_ arg0: Float, _ arg1: Float, _ arg2: Bool) -> Bool

  @JavaMethod
  open func isComputingLayout() -> Bool

  @JavaMethod
  open func findContainingItemView(_ arg0: View?) -> View!

  @JavaMethod
  open override func focusSearch(_ arg0: View?, _ arg1: Int32) -> View!

  @JavaMethod
  open override func requestChildFocus(_ arg0: View?, _ arg1: View?)

  @JavaMethod
  open override func requestChildRectangleOnScreen(_ arg0: View?, _ arg1: Rect?, _ arg2: Bool) -> Bool

  @JavaMethod
  open override func addFocusables(_ arg0: ArrayList<View>?, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open override func onRequestFocusInDescendants(_ arg0: Int32, _ arg1: Rect?) -> Bool

  @JavaMethod
  open override func onAttachedToWindow()

  @JavaMethod
  open override func onDetachedFromWindow()

  @JavaMethod
  open override func onInterceptTouchEvent(_ arg0: MotionEvent?) -> Bool

  @JavaMethod
  open override func requestDisallowInterceptTouchEvent(_ arg0: Bool)

  @JavaMethod
  open override func onMeasure(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open override func onSizeChanged(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32)

  @JavaMethod
  open func findContainingViewHolder(_ arg0: View?) -> RecyclerView.ViewHolder!

  @JavaMethod
  open func findViewHolderForAdapterPosition(_ arg0: Int32) -> RecyclerView.ViewHolder!

  @JavaMethod
  open func findViewHolderForItemId(_ arg0: Int64) -> RecyclerView.ViewHolder!

  @JavaMethod
  open func getScrollState() -> Int32

  @JavaMethod
  open override func removeDetachedView(_ arg0: View?, _ arg1: Bool)

  @JavaMethod
  open override func draw(_ arg0: Canvas?)

  @JavaMethod
  open override func onDraw(_ arg0: Canvas?)

  @JavaMethod
  open override func checkLayoutParams(_ arg0: ViewGroup.LayoutParams?) -> Bool

  @JavaMethod
  open override func generateDefaultLayoutParams() -> ViewGroup.LayoutParams!

  @JavaMethod
  open override func generateLayoutParams(_ arg0: AttributeSet?) -> ViewGroup.LayoutParams!

  @JavaMethod
  open override func generateLayoutParams(_ arg0: ViewGroup.LayoutParams?) -> ViewGroup.LayoutParams!

  @JavaMethod
  open func getChildAdapterPosition(_ arg0: View?) -> Int32

  @JavaMethod
  open func findViewHolderForPosition(_ arg0: Int32) -> RecyclerView.ViewHolder!

  @JavaMethod
  open override func drawChild(_ arg0: Canvas?, _ arg1: View?, _ arg2: Int64) -> Bool

  @JavaMethod
  open func onScrolled(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func onScrollStateChanged(_ arg0: Int32)

  @JavaMethod
  open func onChildDetachedFromWindow(_ arg0: View?)

  @JavaMethod
  open func onChildAttachedToWindow(_ arg0: View?)

  @JavaMethod
  open override func isNestedScrollingEnabled() -> Bool

  @JavaMethod
  open override func hasNestedScrollingParent() -> Bool

  @JavaMethod
  open func hasNestedScrollingParent(_ arg0: Int32) -> Bool

  @JavaMethod
  open override func getChildDrawingOrder(_ arg0: Int32, _ arg1: Int32) -> Int32

  @JavaMethod
  open override func getAccessibilityClassName() -> CharSequence!

  @JavaMethod
  open func setHasFixedSize(_ arg0: Bool)

  @JavaMethod
  open func hasFixedSize() -> Bool

  @JavaMethod
  open override func getClipToPadding() -> Bool

  @JavaMethod
  open func setScrollingTouchSlop(_ arg0: Int32)

  @JavaMethod
  open func swapAdapter(_ arg0: RecyclerView.Adapter?, _ arg1: Bool)

  @JavaMethod
  open func setAdapter(_ arg0: RecyclerView.Adapter?)

  @JavaMethod
  open func setRecyclerListener(_ arg0: RecyclerView.RecyclerListener?)

  @JavaMethod
  open func addRecyclerListener(_ arg0: RecyclerView.RecyclerListener?)

  @JavaMethod
  open func removeRecyclerListener(_ arg0: RecyclerView.RecyclerListener?)

  @JavaMethod
  open func addOnChildAttachStateChangeListener(_ arg0: RecyclerView.OnChildAttachStateChangeListener?)

  @JavaMethod
  open func removeOnChildAttachStateChangeListener(_ arg0: RecyclerView.OnChildAttachStateChangeListener?)

  @JavaMethod
  open func clearOnChildAttachStateChangeListeners()

  @JavaMethod
  open func setOnFlingListener(_ arg0: RecyclerView.OnFlingListener?)

  @JavaMethod
  open func getOnFlingListener() -> RecyclerView.OnFlingListener!

  @JavaMethod
  open override func dispatchSaveInstanceState(_ arg0: SparseArray<Parcelable>?)

  @JavaMethod
  open override func dispatchRestoreInstanceState(_ arg0: SparseArray<Parcelable>?)

  @JavaMethod
  open func setItemViewCacheSize(_ arg0: Int32)

  @JavaMethod
  open func removeItemDecorationAt(_ arg0: Int32)

  @JavaMethod
  open func setChildDrawingOrderCallback(_ arg0: RecyclerView.ChildDrawingOrderCallback?)

  @JavaMethod
  open func setOnScrollListener(_ arg0: RecyclerView.OnScrollListener?)

  @JavaMethod
  open func addOnScrollListener(_ arg0: RecyclerView.OnScrollListener?)

  @JavaMethod
  open func removeOnScrollListener(_ arg0: RecyclerView.OnScrollListener?)

  @JavaMethod
  open func clearOnScrollListeners()

  @JavaMethod
  open override func scrollTo(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func nestedScrollBy(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func isLayoutFrozen() -> Bool

  @JavaMethod
  open func getMinFlingVelocity() -> Int32

  @JavaMethod
  open func getMaxFlingVelocity() -> Int32

  @JavaMethod
  open func setEdgeEffectFactory(_ arg0: RecyclerView.EdgeEffectFactory?)

  @JavaMethod
  open func getEdgeEffectFactory() -> RecyclerView.EdgeEffectFactory!

  @JavaMethod
  open override func isAttachedToWindow() -> Bool

  @JavaMethod
  open func addOnItemTouchListener(_ arg0: RecyclerView.OnItemTouchListener?)

  @JavaMethod
  open func removeOnItemTouchListener(_ arg0: RecyclerView.OnItemTouchListener?)

  @JavaMethod
  open override func onGenericMotionEvent(_ arg0: MotionEvent?) -> Bool

  @JavaMethod
  open func setItemAnimator(_ arg0: RecyclerView.ItemAnimator?)

  @JavaMethod
  open func getItemAnimator() -> RecyclerView.ItemAnimator!

  @JavaMethod
  open override func onLayout(_ arg0: Bool, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32)

  @JavaMethod
  open func isAnimating() -> Bool

  @JavaMethod
  open func invalidateItemDecorations()

  @JavaMethod
  open func getPreserveFocusAfterLayout() -> Bool

  @JavaMethod
  open func setPreserveFocusAfterLayout(_ arg0: Bool)

  @JavaMethod
  open func getChildPosition(_ arg0: View?) -> Int32

  @JavaMethod
  open func getChildLayoutPosition(_ arg0: View?) -> Int32

  @JavaMethod
  open func getChildItemId(_ arg0: View?) -> Int64

  @JavaMethod
  open func findViewHolderForLayoutPosition(_ arg0: Int32) -> RecyclerView.ViewHolder!

  @JavaMethod
  open func findChildViewUnder(_ arg0: Float, _ arg1: Float) -> View!

  @JavaMethod
  open func offsetChildrenVertical(_ arg0: Int32)

  @JavaMethod
  open func offsetChildrenHorizontal(_ arg0: Int32)

  @JavaMethod
  open func getDecoratedBoundsWithMargins(_ arg0: View?, _ arg1: Rect?)

  @JavaMethod
  open func hasPendingAdapterUpdates() -> Bool

  @JavaMethod
  open func getAdapter() -> RecyclerView.Adapter!
}
extension RecyclerView {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$Adapter")
  open class Adapter<VH: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func unregisterAdapterDataObserver(_ arg0: RecyclerView.AdapterDataObserver?)

  @JavaMethod
  open func onDetachedFromRecyclerView(_ arg0: RecyclerView?)

  @JavaMethod
  open func registerAdapterDataObserver(_ arg0: RecyclerView.AdapterDataObserver?)

  @JavaMethod
  open func onAttachedToRecyclerView(_ arg0: RecyclerView?)

  @JavaMethod
  open func getItemCount() -> Int32

  @JavaMethod
  open func hasStableIds() -> Bool

  @JavaMethod
  open func getItemId(_ arg0: Int32) -> Int64

  @JavaMethod
  open func onViewDetachedFromWindow(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func onViewAttachedToWindow(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func getItemViewType(_ arg0: Int32) -> Int32

  @JavaMethod
  open func bindViewHolder(_ arg0: RecyclerView.ViewHolder?, _ arg1: Int32)

  @JavaMethod
  open func createViewHolder(_ arg0: ViewGroup?, _ arg1: Int32) -> RecyclerView.ViewHolder!

  @JavaMethod
  open func onFailedToRecycleView(_ arg0: RecyclerView.ViewHolder?) -> Bool

  @JavaMethod
  open func onViewRecycled(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func onBindViewHolder(_ arg0: RecyclerView.ViewHolder?, _ arg1: Int32)

  @JavaMethod
  open func onBindViewHolder(_ arg0: RecyclerView.ViewHolder?, _ arg1: Int32, _ arg2: List<JavaObject>?)

  @JavaMethod
  open func onCreateViewHolder(_ arg0: ViewGroup?, _ arg1: Int32) -> RecyclerView.ViewHolder!

  @JavaMethod
  open func hasObservers() -> Bool

  @JavaMethod
  open func notifyItemRangeChanged(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func notifyItemRangeChanged(_ arg0: Int32, _ arg1: Int32, _ arg2: JavaObject?)

  @JavaMethod
  open func notifyItemRangeInserted(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func notifyItemMoved(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func notifyItemRangeRemoved(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func findRelativeAdapterPositionIn(_ arg0: RecyclerView.Adapter<RecyclerView.ViewHolder>?, _ arg1: RecyclerView.ViewHolder?, _ arg2: Int32) -> Int32

  @JavaMethod
  open func setHasStableIds(_ arg0: Bool)

  @JavaMethod
  open func notifyDataSetChanged()

  @JavaMethod
  open func notifyItemChanged(_ arg0: Int32)

  @JavaMethod
  open func notifyItemChanged(_ arg0: Int32, _ arg1: JavaObject?)

  @JavaMethod
  open func notifyItemInserted(_ arg0: Int32)

  @JavaMethod
  open func notifyItemRemoved(_ arg0: Int32)

  @JavaMethod
  open func setStateRestorationPolicy(_ arg0: RecyclerView.Adapter.StateRestorationPolicy?)

  @JavaMethod
  open func getStateRestorationPolicy() -> RecyclerView.Adapter.StateRestorationPolicy!
  }
}
extension RecyclerView.Adapter {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy")
  open class StateRestorationPolicy: Enum {
    public enum StateRestorationPolicyCases: Equatable {
      case ALLOW
  case PREVENT_WHEN_EMPTY
  case PREVENT
    }

    public var enumValue: StateRestorationPolicyCases! {
      let classObj = self.javaClass
      if self.equals(classObj.ALLOW?.as(JavaObject.self)) {
        return StateRestorationPolicyCases.ALLOW
  } else if self.equals(classObj.PREVENT_WHEN_EMPTY?.as(JavaObject.self)) {
        return StateRestorationPolicyCases.PREVENT_WHEN_EMPTY
  } else if self.equals(classObj.PREVENT?.as(JavaObject.self)) {
        return StateRestorationPolicyCases.PREVENT
  } else {
        return nil
      }
    }

  public convenience init(_ enumValue: StateRestorationPolicyCases, environment: JNIEnvironment? = nil) {
    let _environment = if let environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    let classObj = try! JavaClass<StateRestorationPolicy>(environment: _environment)
    switch enumValue {
      case .ALLOW:
        if let ALLOW = classObj.ALLOW {
          self.init(javaHolder: ALLOW.javaHolder)
        } else {
          fatalError("Enum value ALLOW was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .PREVENT_WHEN_EMPTY:
        if let PREVENT_WHEN_EMPTY = classObj.PREVENT_WHEN_EMPTY {
          self.init(javaHolder: PREVENT_WHEN_EMPTY.javaHolder)
        } else {
          fatalError("Enum value PREVENT_WHEN_EMPTY was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .PREVENT:
        if let PREVENT = classObj.PREVENT {
          self.init(javaHolder: PREVENT.javaHolder)
        } else {
          fatalError("Enum value PREVENT was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
    }
  }
  }
}
extension RecyclerView.Adapter.StateRestorationPolicy {
  @JavaClass("java.lang.Enum$EnumDesc")
  open class EnumDesc<E: AnyJavaObject>: JavaObject {
  @JavaMethod
  open override func toString() -> String
  }
}
extension JavaClass<RecyclerView.Adapter.StateRestorationPolicy> {
  @JavaStaticField(isFinal: true)
  public var ALLOW: RecyclerView.Adapter.StateRestorationPolicy!

  @JavaStaticField(isFinal: true)
  public var PREVENT_WHEN_EMPTY: RecyclerView.Adapter.StateRestorationPolicy!

  @JavaStaticField(isFinal: true)
  public var PREVENT: RecyclerView.Adapter.StateRestorationPolicy!

  @JavaStaticMethod
  public func values() -> [RecyclerView.Adapter.StateRestorationPolicy?]

  @JavaStaticMethod
  public func valueOf(_ arg0: String) -> RecyclerView.Adapter.StateRestorationPolicy!
}
extension RecyclerView {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$AdapterDataObserver")
  open class AdapterDataObserver: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func onItemRangeChanged(_ arg0: Int32, _ arg1: Int32, _ arg2: JavaObject?)

  @JavaMethod
  open func onItemRangeChanged(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func onItemRangeRemoved(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func onItemRangeMoved(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open func onItemRangeInserted(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func onChanged()

  @JavaMethod
  open func onStateRestorationPolicyChanged()
  }
}
extension RecyclerView {
  @JavaInterface("androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback")
  public struct ChildDrawingOrderCallback {
  @JavaMethod
  public func onGetChildDrawingOrder(_ arg0: Int32, _ arg1: Int32) -> Int32
  }
}
extension RecyclerView {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory")
  open class EdgeEffectFactory: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func createEdgeEffect(_ arg0: RecyclerView?, _ arg1: Int32) -> EdgeEffect!
  }
}
extension RecyclerView.EdgeEffectFactory {
  @JavaInterface("androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory$EdgeDirection", extends: Annotation.self)
  public struct EdgeDirection {
  @JavaMethod
  public func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func toString() -> String

  @JavaMethod
  public func hashCode() -> Int32

  @JavaMethod
  public func annotationType() -> JavaClass<Annotation>!
  }
}
extension JavaClass<RecyclerView.EdgeEffectFactory> {
  @JavaStaticField(isFinal: true)
  public var DIRECTION_LEFT: Int32

  @JavaStaticField(isFinal: true)
  public var DIRECTION_TOP: Int32

  @JavaStaticField(isFinal: true)
  public var DIRECTION_RIGHT: Int32

  @JavaStaticField(isFinal: true)
  public var DIRECTION_BOTTOM: Int32
}
extension RecyclerView {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$ItemAnimator")
  open class ItemAnimator: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func endAnimations()

  @JavaMethod
  open func recordPreLayoutInformation(_ arg0: RecyclerView.State?, _ arg1: RecyclerView.ViewHolder?, _ arg2: Int32, _ arg3: List<JavaObject>?) -> RecyclerView.ItemAnimator.ItemHolderInfo!

  @JavaMethod
  open func recordPostLayoutInformation(_ arg0: RecyclerView.State?, _ arg1: RecyclerView.ViewHolder?) -> RecyclerView.ItemAnimator.ItemHolderInfo!

  @JavaMethod
  open func animateChange(_ arg0: RecyclerView.ViewHolder?, _ arg1: RecyclerView.ViewHolder?, _ arg2: RecyclerView.ItemAnimator.ItemHolderInfo?, _ arg3: RecyclerView.ItemAnimator.ItemHolderInfo?) -> Bool

  @JavaMethod
  open func animateAppearance(_ arg0: RecyclerView.ViewHolder?, _ arg1: RecyclerView.ItemAnimator.ItemHolderInfo?, _ arg2: RecyclerView.ItemAnimator.ItemHolderInfo?) -> Bool

  @JavaMethod
  open func animateDisappearance(_ arg0: RecyclerView.ViewHolder?, _ arg1: RecyclerView.ItemAnimator.ItemHolderInfo?, _ arg2: RecyclerView.ItemAnimator.ItemHolderInfo?) -> Bool

  @JavaMethod
  open func isRunning() -> Bool

  @JavaMethod
  open func isRunning(_ arg0: RecyclerView.ItemAnimator.ItemAnimatorFinishedListener?) -> Bool

  @JavaMethod
  open func canReuseUpdatedViewHolder(_ arg0: RecyclerView.ViewHolder?, _ arg1: List<JavaObject>?) -> Bool

  @JavaMethod
  open func canReuseUpdatedViewHolder(_ arg0: RecyclerView.ViewHolder?) -> Bool

  @JavaMethod
  open func endAnimation(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func obtainHolderInfo() -> RecyclerView.ItemAnimator.ItemHolderInfo!

  @JavaMethod
  open func onAnimationFinished(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func onAnimationStarted(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func getMoveDuration() -> Int64

  @JavaMethod
  open func setMoveDuration(_ arg0: Int64)

  @JavaMethod
  open func getAddDuration() -> Int64

  @JavaMethod
  open func setAddDuration(_ arg0: Int64)

  @JavaMethod
  open func getRemoveDuration() -> Int64

  @JavaMethod
  open func setRemoveDuration(_ arg0: Int64)

  @JavaMethod
  open func getChangeDuration() -> Int64

  @JavaMethod
  open func setChangeDuration(_ arg0: Int64)

  @JavaMethod
  open func animatePersistence(_ arg0: RecyclerView.ViewHolder?, _ arg1: RecyclerView.ItemAnimator.ItemHolderInfo?, _ arg2: RecyclerView.ItemAnimator.ItemHolderInfo?) -> Bool

  @JavaMethod
  open func runPendingAnimations()

  @JavaMethod
  open func dispatchAnimationFinished(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func dispatchAnimationStarted(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func dispatchAnimationsFinished()
  }
}
extension RecyclerView.ItemAnimator {
  @JavaInterface("androidx.recyclerview.widget.RecyclerView$ItemAnimator$AdapterChanges", extends: Annotation.self)
  public struct AdapterChanges {
  @JavaMethod
  public func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func toString() -> String

  @JavaMethod
  public func hashCode() -> Int32

  @JavaMethod
  public func annotationType() -> JavaClass<Annotation>!
  }
}
extension RecyclerView.ItemAnimator {
  @JavaInterface("androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener")
  public struct ItemAnimatorFinishedListener {
  @JavaMethod
  public func onAnimationsFinished()
  }
}
extension RecyclerView.ItemAnimator {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo")
  open class ItemHolderInfo: JavaObject {
  @JavaField(isFinal: false)
  public var left: Int32

  @JavaField(isFinal: false)
  public var top: Int32

  @JavaField(isFinal: false)
  public var right: Int32

  @JavaField(isFinal: false)
  public var bottom: Int32

  @JavaField(isFinal: false)
  public var changeFlags: Int32

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func setFrom(_ arg0: RecyclerView.ViewHolder?) -> RecyclerView.ItemAnimator.ItemHolderInfo!

  @JavaMethod
  open func setFrom(_ arg0: RecyclerView.ViewHolder?, _ arg1: Int32) -> RecyclerView.ItemAnimator.ItemHolderInfo!
  }
}
extension JavaClass<RecyclerView.ItemAnimator> {
  @JavaStaticField(isFinal: true)
  public var FLAG_CHANGED: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_REMOVED: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_INVALIDATED: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_MOVED: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_APPEARED_IN_PRE_LAYOUT: Int32
}
extension RecyclerView {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$ItemDecoration")
  open class ItemDecoration: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func onDrawOver(_ arg0: Canvas?, _ arg1: RecyclerView?)

  @JavaMethod
  open func onDrawOver(_ arg0: Canvas?, _ arg1: RecyclerView?, _ arg2: RecyclerView.State?)

  @JavaMethod
  open func onDraw(_ arg0: Canvas?, _ arg1: RecyclerView?)

  @JavaMethod
  open func onDraw(_ arg0: Canvas?, _ arg1: RecyclerView?, _ arg2: RecyclerView.State?)

  @JavaMethod
  open func getItemOffsets(_ arg0: Rect?, _ arg1: Int32, _ arg2: RecyclerView?)

  @JavaMethod
  open func getItemOffsets(_ arg0: Rect?, _ arg1: View?, _ arg2: RecyclerView?, _ arg3: RecyclerView.State?)
  }
}
extension RecyclerView {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$LayoutManager")
  open class LayoutManager: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func removeView(_ arg0: View?)

  @JavaMethod
  open func removeViewAt(_ arg0: Int32)

  @JavaMethod
  open func removeAllViews()

  @JavaMethod
  open func measureChild(_ arg0: View?, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open func measureChildWithMargins(_ arg0: View?, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open func performAccessibilityAction(_ arg0: RecyclerView.Recycler?, _ arg1: RecyclerView.State?, _ arg2: Int32, _ arg3: Bundle?) -> Bool

  @JavaMethod
  open func getPaddingStart() -> Int32

  @JavaMethod
  open func getPaddingEnd() -> Int32

  @JavaMethod
  open func setMeasuredDimension(_ arg0: Rect?, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open func setMeasuredDimension(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func requestLayout()

  @JavaMethod
  open func removeAndRecycleAllViews(_ arg0: RecyclerView.Recycler?)

  @JavaMethod
  open func onAdapterChanged(_ arg0: RecyclerView.Adapter?, _ arg1: RecyclerView.Adapter?)

  @JavaMethod
  open func getBaseline() -> Int32

  @JavaMethod
  open func onSaveInstanceState() -> Parcelable!

  @JavaMethod
  open func onRestoreInstanceState(_ arg0: Parcelable?)

  @JavaMethod
  open func addView(_ arg0: View?, _ arg1: Int32)

  @JavaMethod
  open func addView(_ arg0: View?)

  @JavaMethod
  open func assertNotInLayoutOrScroll(_ arg0: String)

  @JavaMethod
  open func scrollToPosition(_ arg0: Int32)

  @JavaMethod
  open func smoothScrollToPosition(_ arg0: RecyclerView?, _ arg1: RecyclerView.State?, _ arg2: Int32)

  @JavaMethod
  open func canScrollVertically() -> Bool

  @JavaMethod
  open func isLayoutReversed() -> Bool

  @JavaMethod
  open func getItemCount() -> Int32

  @JavaMethod
  open func canScrollHorizontally() -> Bool

  @JavaMethod
  open func getHeight() -> Int32

  @JavaMethod
  open func getWidth() -> Int32

  @JavaMethod
  open func scrollHorizontallyBy(_ arg0: Int32, _ arg1: RecyclerView.Recycler?, _ arg2: RecyclerView.State?) -> Int32

  @JavaMethod
  open func scrollVerticallyBy(_ arg0: Int32, _ arg1: RecyclerView.Recycler?, _ arg2: RecyclerView.State?) -> Int32

  @JavaMethod
  open func getChildAt(_ arg0: Int32) -> View!

  @JavaMethod
  open func computeHorizontalScrollOffset(_ arg0: RecyclerView.State?) -> Int32

  @JavaMethod
  open func computeHorizontalScrollExtent(_ arg0: RecyclerView.State?) -> Int32

  @JavaMethod
  open func computeHorizontalScrollRange(_ arg0: RecyclerView.State?) -> Int32

  @JavaMethod
  open func computeVerticalScrollOffset(_ arg0: RecyclerView.State?) -> Int32

  @JavaMethod
  open func computeVerticalScrollExtent(_ arg0: RecyclerView.State?) -> Int32

  @JavaMethod
  open func computeVerticalScrollRange(_ arg0: RecyclerView.State?) -> Int32

  @JavaMethod
  open func getPaddingTop() -> Int32

  @JavaMethod
  open func getPaddingBottom() -> Int32

  @JavaMethod
  open func getPaddingLeft() -> Int32

  @JavaMethod
  open func getPaddingRight() -> Int32

  @JavaMethod
  open func onInterceptFocusSearch(_ arg0: View?, _ arg1: Int32) -> View!

  @JavaMethod
  open func getLayoutDirection() -> Int32

  @JavaMethod
  open func findContainingItemView(_ arg0: View?) -> View!

  @JavaMethod
  open func onFocusSearchFailed(_ arg0: View?, _ arg1: Int32, _ arg2: RecyclerView.Recycler?, _ arg3: RecyclerView.State?) -> View!

  @JavaMethod
  open func getFocusedChild() -> View!

  @JavaMethod
  open func onRequestChildFocus(_ arg0: RecyclerView?, _ arg1: RecyclerView.State?, _ arg2: View?, _ arg3: View?) -> Bool

  @JavaMethod
  open func onRequestChildFocus(_ arg0: RecyclerView?, _ arg1: View?, _ arg2: View?) -> Bool

  @JavaMethod
  open func requestChildRectangleOnScreen(_ arg0: RecyclerView?, _ arg1: View?, _ arg2: Rect?, _ arg3: Bool) -> Bool

  @JavaMethod
  open func requestChildRectangleOnScreen(_ arg0: RecyclerView?, _ arg1: View?, _ arg2: Rect?, _ arg3: Bool, _ arg4: Bool) -> Bool

  @JavaMethod
  open func onAddFocusables(_ arg0: RecyclerView?, _ arg1: ArrayList<View>?, _ arg2: Int32, _ arg3: Int32) -> Bool

  @JavaMethod
  open func onAttachedToWindow(_ arg0: RecyclerView?)

  @JavaMethod
  open func onDetachedFromWindow(_ arg0: RecyclerView?)

  @JavaMethod
  open func onDetachedFromWindow(_ arg0: RecyclerView?, _ arg1: RecyclerView.Recycler?)

  @JavaMethod
  open func removeCallbacks(_ arg0: Runnable?) -> Bool

  @JavaMethod
  open func isAutoMeasureEnabled() -> Bool

  @JavaMethod
  open func onMeasure(_ arg0: RecyclerView.Recycler?, _ arg1: RecyclerView.State?, _ arg2: Int32, _ arg3: Int32)

  @JavaMethod
  open func getMinimumWidth() -> Int32

  @JavaMethod
  open func getMinimumHeight() -> Int32

  @JavaMethod
  open func postOnAnimation(_ arg0: Runnable?)

  @JavaMethod
  open func supportsPredictiveItemAnimations() -> Bool

  @JavaMethod
  open func onItemsChanged(_ arg0: RecyclerView?)

  @JavaMethod
  open func hasFocus() -> Bool

  @JavaMethod
  open func isFocused() -> Bool

  @JavaMethod
  open func onLayoutChildren(_ arg0: RecyclerView.Recycler?, _ arg1: RecyclerView.State?)

  @JavaMethod
  open func onLayoutCompleted(_ arg0: RecyclerView.State?)

  @JavaMethod
  open func removeDetachedView(_ arg0: View?)

  @JavaMethod
  open func checkLayoutParams(_ arg0: RecyclerView.LayoutParams?) -> Bool

  @JavaMethod
  open func generateDefaultLayoutParams() -> RecyclerView.LayoutParams!

  @JavaMethod
  open func generateLayoutParams(_ arg0: Context?, _ arg1: AttributeSet?) -> RecyclerView.LayoutParams!

  @JavaMethod
  open func generateLayoutParams(_ arg0: ViewGroup.LayoutParams?) -> RecyclerView.LayoutParams!

  @JavaMethod
  open func onScrollStateChanged(_ arg0: Int32)

  @JavaMethod
  open func getClipToPadding() -> Bool

  @JavaMethod
  open func isAttachedToWindow() -> Bool

  @JavaMethod
  open func assertInLayoutOrScroll(_ arg0: String)

  @JavaMethod
  open func offsetChildrenVertical(_ arg0: Int32)

  @JavaMethod
  open func offsetChildrenHorizontal(_ arg0: Int32)

  @JavaMethod
  open func getDecoratedBoundsWithMargins(_ arg0: View?, _ arg1: Rect?)

  @JavaMethod
  open func getItemViewType(_ arg0: View?) -> Int32

  @JavaMethod
  open func endAnimation(_ arg0: View?)

  @JavaMethod
  open func addDisappearingView(_ arg0: View?)

  @JavaMethod
  open func addDisappearingView(_ arg0: View?, _ arg1: Int32)

  @JavaMethod
  open func moveView(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func attachView(_ arg0: View?)

  @JavaMethod
  open func attachView(_ arg0: View?, _ arg1: Int32)

  @JavaMethod
  open func attachView(_ arg0: View?, _ arg1: Int32, _ arg2: RecyclerView.LayoutParams?)

  @JavaMethod
  open func detachViewAt(_ arg0: Int32)

  @JavaMethod
  open func getWidthMode() -> Int32

  @JavaMethod
  open func getHeightMode() -> Int32

  @JavaMethod
  open func getLeftDecorationWidth(_ arg0: View?) -> Int32

  @JavaMethod
  open func getTopDecorationHeight(_ arg0: View?) -> Int32

  @JavaMethod
  open func getRightDecorationWidth(_ arg0: View?) -> Int32

  @JavaMethod
  open func getBottomDecorationHeight(_ arg0: View?) -> Int32

  @JavaMethod
  open func isSmoothScrolling() -> Bool

  @JavaMethod
  open func onItemsUpdated(_ arg0: RecyclerView?, _ arg1: Int32, _ arg2: Int32, _ arg3: JavaObject?)

  @JavaMethod
  open func onItemsUpdated(_ arg0: RecyclerView?, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open func removeAndRecycleViewAt(_ arg0: Int32, _ arg1: RecyclerView.Recycler?)

  @JavaMethod
  open func getRowCountForAccessibility(_ arg0: RecyclerView.Recycler?, _ arg1: RecyclerView.State?) -> Int32

  @JavaMethod
  open func getColumnCountForAccessibility(_ arg0: RecyclerView.Recycler?, _ arg1: RecyclerView.State?) -> Int32

  @JavaMethod
  open func isLayoutHierarchical(_ arg0: RecyclerView.Recycler?, _ arg1: RecyclerView.State?) -> Bool

  @JavaMethod
  open func getSelectionModeForAccessibility(_ arg0: RecyclerView.Recycler?, _ arg1: RecyclerView.State?) -> Int32

  @JavaMethod
  open func getPosition(_ arg0: View?) -> Int32

  @JavaMethod
  open func performAccessibilityActionForItem(_ arg0: RecyclerView.Recycler?, _ arg1: RecyclerView.State?, _ arg2: View?, _ arg3: Int32, _ arg4: Bundle?) -> Bool

  @JavaMethod
  open func setAutoMeasureEnabled(_ arg0: Bool)

  @JavaMethod
  open func setItemPrefetchEnabled(_ arg0: Bool)

  @JavaMethod
  open func isItemPrefetchEnabled() -> Bool

  @JavaMethod
  open func collectAdjacentPrefetchPositions(_ arg0: Int32, _ arg1: Int32, _ arg2: RecyclerView.State?, _ arg3: RecyclerView.LayoutManager.LayoutPrefetchRegistry?)

  @JavaMethod
  open func collectInitialPrefetchPositions(_ arg0: Int32, _ arg1: RecyclerView.LayoutManager.LayoutPrefetchRegistry?)

  @JavaMethod
  open func startSmoothScroll(_ arg0: RecyclerView.SmoothScroller?)

  @JavaMethod
  open func findViewByPosition(_ arg0: Int32) -> View!

  @JavaMethod
  open func detachView(_ arg0: View?)

  @JavaMethod
  open func detachAndScrapView(_ arg0: View?, _ arg1: RecyclerView.Recycler?)

  @JavaMethod
  open func detachAndScrapViewAt(_ arg0: Int32, _ arg1: RecyclerView.Recycler?)

  @JavaMethod
  open func removeAndRecycleView(_ arg0: View?, _ arg1: RecyclerView.Recycler?)

  @JavaMethod
  open func ignoreView(_ arg0: View?)

  @JavaMethod
  open func stopIgnoringView(_ arg0: View?)

  @JavaMethod
  open func detachAndScrapAttachedViews(_ arg0: RecyclerView.Recycler?)

  @JavaMethod
  open func isMeasurementCacheEnabled() -> Bool

  @JavaMethod
  open func setMeasurementCacheEnabled(_ arg0: Bool)

  @JavaMethod
  open func getDecoratedMeasuredWidth(_ arg0: View?) -> Int32

  @JavaMethod
  open func getDecoratedMeasuredHeight(_ arg0: View?) -> Int32

  @JavaMethod
  open func layoutDecorated(_ arg0: View?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32)

  @JavaMethod
  open func layoutDecoratedWithMargins(_ arg0: View?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32)

  @JavaMethod
  open func getTransformedBoundingBox(_ arg0: View?, _ arg1: Bool, _ arg2: Rect?)

  @JavaMethod
  open func getDecoratedLeft(_ arg0: View?) -> Int32

  @JavaMethod
  open func getDecoratedTop(_ arg0: View?) -> Int32

  @JavaMethod
  open func getDecoratedRight(_ arg0: View?) -> Int32

  @JavaMethod
  open func getDecoratedBottom(_ arg0: View?) -> Int32

  @JavaMethod
  open func calculateItemDecorationsForChild(_ arg0: View?, _ arg1: Rect?)

  @JavaMethod
  open func isViewPartiallyVisible(_ arg0: View?, _ arg1: Bool, _ arg2: Bool) -> Bool

  @JavaMethod
  open func onItemsAdded(_ arg0: RecyclerView?, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open func onItemsRemoved(_ arg0: RecyclerView?, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open func onItemsMoved(_ arg0: RecyclerView?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32)

  @JavaMethod
  open func requestSimpleAnimationsInNextLayout()

  @JavaMethod
  open func getChildCount() -> Int32
  }
}
extension RecyclerView.LayoutManager {
  @JavaInterface("androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry")
  public struct LayoutPrefetchRegistry {
  @JavaMethod
  public func addPosition(_ arg0: Int32, _ arg1: Int32)
  }
}
extension RecyclerView.LayoutManager {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties")
  open class Properties: JavaObject {
  @JavaField(isFinal: false)
  public var orientation: Int32

  @JavaField(isFinal: false)
  public var spanCount: Int32

  @JavaField(isFinal: false)
  public var reverseLayout: Bool

  @JavaField(isFinal: false)
  public var stackFromEnd: Bool

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)
  }
}
extension JavaClass<RecyclerView.LayoutManager> {
  @JavaStaticMethod
  public func getChildMeasureSpec(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Bool) -> Int32

  @JavaStaticMethod
  public func getChildMeasureSpec(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Bool) -> Int32

  @JavaStaticMethod
  public func chooseSize(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32) -> Int32

  @JavaStaticMethod
  public func getProperties(_ arg0: Context?, _ arg1: AttributeSet?, _ arg2: Int32, _ arg3: Int32) -> RecyclerView.LayoutManager.Properties!
}
extension RecyclerView {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$LayoutParams")
  open class LayoutParams: ViewGroup.MarginLayoutParams {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, _ arg1: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Context?, _ arg1: AttributeSet?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: ViewGroup.MarginLayoutParams?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: ViewGroup.LayoutParams?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: RecyclerView.LayoutParams?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getAbsoluteAdapterPosition() -> Int32

  @JavaMethod
  open func isItemChanged() -> Bool

  @JavaMethod
  open func isViewInvalid() -> Bool

  @JavaMethod
  open func getViewLayoutPosition() -> Int32

  @JavaMethod
  open func getBindingAdapterPosition() -> Int32

  @JavaMethod
  open func viewNeedsUpdate() -> Bool

  @JavaMethod
  open func isItemRemoved() -> Bool

  @JavaMethod
  open func getViewPosition() -> Int32

  @JavaMethod
  open func getViewAdapterPosition() -> Int32
  }
}
extension JavaClass<RecyclerView.LayoutParams> {
  @JavaStaticField(isFinal: true)
  public var FILL_PARENT: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_PARENT: Int32

  @JavaStaticField(isFinal: true)
  public var WRAP_CONTENT: Int32
}
extension RecyclerView {
  @JavaInterface("androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener")
  public struct OnChildAttachStateChangeListener {
  @JavaMethod
  public func onChildViewDetachedFromWindow(_ arg0: View?)

  @JavaMethod
  public func onChildViewAttachedToWindow(_ arg0: View?)
  }
}
extension RecyclerView {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$OnFlingListener")
  open class OnFlingListener: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func onFling(_ arg0: Int32, _ arg1: Int32) -> Bool
  }
}
extension RecyclerView {
  @JavaInterface("androidx.recyclerview.widget.RecyclerView$OnItemTouchListener")
  public struct OnItemTouchListener {
  @JavaMethod
  public func onTouchEvent(_ arg0: RecyclerView?, _ arg1: MotionEvent?)

  @JavaMethod
  public func onInterceptTouchEvent(_ arg0: RecyclerView?, _ arg1: MotionEvent?) -> Bool

  @JavaMethod
  public func onRequestDisallowInterceptTouchEvent(_ arg0: Bool)
  }
}
extension RecyclerView {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$OnScrollListener")
  open class OnScrollListener: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func onScrolled(_ arg0: RecyclerView?, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open func onScrollStateChanged(_ arg0: RecyclerView?, _ arg1: Int32)
  }
}
extension RecyclerView {
  @JavaInterface("androidx.recyclerview.widget.RecyclerView$Orientation", extends: Annotation.self)
  public struct Orientation {
  @JavaMethod
  public func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func toString() -> String

  @JavaMethod
  public func hashCode() -> Int32

  @JavaMethod
  public func annotationType() -> JavaClass<Annotation>!
  }
}
extension RecyclerView {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$RecycledViewPool")
  open class RecycledViewPool: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getRecycledView(_ arg0: Int32) -> RecyclerView.ViewHolder!

  @JavaMethod
  open func putRecycledView(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func setMaxRecycledViews(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func getRecycledViewCount(_ arg0: Int32) -> Int32

  @JavaMethod
  open func clear()
  }
}
extension RecyclerView {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$Recycler")
  open class Recycler: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: RecyclerView?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func setViewCacheSize(_ arg0: Int32)

  @JavaMethod
  open func getViewForPosition(_ arg0: Int32) -> View!

  @JavaMethod
  open func getScrapList() -> List<RecyclerView.ViewHolder>!

  @JavaMethod
  open func bindViewToPosition(_ arg0: View?, _ arg1: Int32)

  @JavaMethod
  open func convertPreLayoutPositionToPostLayout(_ arg0: Int32) -> Int32

  @JavaMethod
  open func recycleView(_ arg0: View?)

  @JavaMethod
  open func clear()
  }
}
extension RecyclerView {
  @JavaInterface("androidx.recyclerview.widget.RecyclerView$RecyclerListener")
  public struct RecyclerListener {
  @JavaMethod
  public func onViewRecycled(_ arg0: RecyclerView.ViewHolder?)
  }
}
extension RecyclerView {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$SavedState")
  open class SavedState: JavaObject {
  @JavaMethod
  open func writeToParcel(_ arg0: Parcel?, _ arg1: Int32)
  }
}
extension JavaClass<RecyclerView.SavedState> {
  @JavaStaticField(isFinal: true)
  public var CREATOR: Parcelable.Creator<RecyclerView.SavedState>!

  @JavaStaticField(isFinal: true)
  public var CONTENTS_FILE_DESCRIPTOR: Int32

  @JavaStaticField(isFinal: true)
  public var PARCELABLE_WRITE_RETURN_VALUE: Int32
}
extension RecyclerView {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener", implements: RecyclerView.OnItemTouchListener.self)
  open class SimpleOnItemTouchListener: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func onTouchEvent(_ arg0: RecyclerView?, _ arg1: MotionEvent?)

  @JavaMethod
  open func onInterceptTouchEvent(_ arg0: RecyclerView?, _ arg1: MotionEvent?) -> Bool

  @JavaMethod
  open func onRequestDisallowInterceptTouchEvent(_ arg0: Bool)
  }
}
extension RecyclerView {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$SmoothScroller")
  open class SmoothScroller: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func computeScrollVectorForPosition(_ arg0: Int32) -> PointF!

  @JavaMethod
  open func onStop()

  @JavaMethod
  open func onTargetFound(_ arg0: View?, _ arg1: RecyclerView.State?, _ arg2: RecyclerView.SmoothScroller.Action?)

  @JavaMethod
  open func onSeekTargetStep(_ arg0: Int32, _ arg1: Int32, _ arg2: RecyclerView.State?, _ arg3: RecyclerView.SmoothScroller.Action?)

  @JavaMethod
  open func instantScrollToPosition(_ arg0: Int32)

  @JavaMethod
  open func getLayoutManager() -> RecyclerView.LayoutManager!

  @JavaMethod
  open func isRunning() -> Bool

  @JavaMethod
  open func onChildAttachedToWindow(_ arg0: View?)

  @JavaMethod
  open func getChildPosition(_ arg0: View?) -> Int32

  @JavaMethod
  open func isPendingInitialRun() -> Bool

  @JavaMethod
  open func getTargetPosition() -> Int32

  @JavaMethod
  open func setTargetPosition(_ arg0: Int32)

  @JavaMethod
  open func findViewByPosition(_ arg0: Int32) -> View!

  @JavaMethod
  open func onStart()

  @JavaMethod
  open func stop()

  @JavaMethod
  open func normalize(_ arg0: PointF?)

  @JavaMethod
  open func getChildCount() -> Int32
  }
}
extension RecyclerView.SmoothScroller {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action")
  open class Action: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Interpolator?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, _ arg1: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func jumpTo(_ arg0: Int32)

  @JavaMethod
  open func getDx() -> Int32

  @JavaMethod
  open func setDx(_ arg0: Int32)

  @JavaMethod
  open func getDy() -> Int32

  @JavaMethod
  open func setDy(_ arg0: Int32)

  @JavaMethod
  open func setDuration(_ arg0: Int32)

  @JavaMethod
  open func getInterpolator() -> Interpolator!

  @JavaMethod
  open func setInterpolator(_ arg0: Interpolator?)

  @JavaMethod
  open func update(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Interpolator?)

  @JavaMethod
  open func getDuration() -> Int32
  }
}
extension JavaClass<RecyclerView.SmoothScroller.Action> {
  @JavaStaticField(isFinal: true)
  public var UNDEFINED_DURATION: Int32
}
extension RecyclerView.SmoothScroller {
  @JavaInterface("androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider")
  public struct ScrollVectorProvider {
  @JavaMethod
  public func computeScrollVectorForPosition(_ arg0: Int32) -> PointF!
  }
}
extension RecyclerView {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$State")
  open class State: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getItemCount() -> Int32

  @JavaMethod
  open func isPreLayout() -> Bool

  @JavaMethod
  open func didStructureChange() -> Bool

  @JavaMethod
  open func isMeasuring() -> Bool

  @JavaMethod
  open func willRunPredictiveAnimations() -> Bool

  @JavaMethod
  open func willRunSimpleAnimations() -> Bool

  @JavaMethod
  open func getTargetScrollPosition() -> Int32

  @JavaMethod
  open func hasTargetScrollPosition() -> Bool

  @JavaMethod
  open func getRemainingScrollHorizontal() -> Int32

  @JavaMethod
  open func getRemainingScrollVertical() -> Int32

  @JavaMethod
  open func remove(_ arg0: Int32)

  @JavaMethod
  open func get(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open func put(_ arg0: Int32, _ arg1: JavaObject?)

  @JavaMethod
  open override func toString() -> String
  }
}
extension RecyclerView {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$ViewCacheExtension")
  open class ViewCacheExtension: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getViewForPositionAndType(_ arg0: RecyclerView.Recycler?, _ arg1: Int32, _ arg2: Int32) -> View!
  }
}
extension RecyclerView {
  @JavaClass("androidx.recyclerview.widget.RecyclerView$ViewHolder")
  open class ViewHolder: JavaObject {
  @JavaField(isFinal: true)
  public var itemView: View!

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: View?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getItemId() -> Int64

  @JavaMethod
  open func getAbsoluteAdapterPosition() -> Int32

  @JavaMethod
  open func getLayoutPosition() -> Int32

  @JavaMethod
  open func setIsRecyclable(_ arg0: Bool)

  @JavaMethod
  open func getItemViewType() -> Int32

  @JavaMethod
  open func isRecyclable() -> Bool

  @JavaMethod
  open func getOldPosition() -> Int32

  @JavaMethod
  open func getPosition() -> Int32

  @JavaMethod
  open func getBindingAdapterPosition() -> Int32

  @JavaMethod
  open func getAdapterPosition() -> Int32

  @JavaMethod
  open func getBindingAdapter() -> RecyclerView.Adapter<RecyclerView.ViewHolder>!

  @JavaMethod
  open override func toString() -> String
  }
}
extension JavaClass<RecyclerView> {
  @JavaStaticField(isFinal: true)
  public var HORIZONTAL: Int32

  @JavaStaticField(isFinal: true)
  public var VERTICAL: Int32

  @JavaStaticField(isFinal: true)
  public var NO_POSITION: Int32

  @JavaStaticField(isFinal: true)
  public var NO_ID: Int64

  @JavaStaticField(isFinal: true)
  public var INVALID_TYPE: Int32

  @JavaStaticField(isFinal: true)
  public var TOUCH_SLOP_DEFAULT: Int32

  @JavaStaticField(isFinal: true)
  public var TOUCH_SLOP_PAGING: Int32

  @JavaStaticField(isFinal: true)
  public var UNDEFINED_DURATION: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLL_STATE_IDLE: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLL_STATE_DRAGGING: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLL_STATE_SETTLING: Int32

  @JavaStaticField(isFinal: true)
  public var FOCUS_AFTER_DESCENDANTS: Int32

  @JavaStaticField(isFinal: true)
  public var FOCUS_BEFORE_DESCENDANTS: Int32

  @JavaStaticField(isFinal: true)
  public var FOCUS_BLOCK_DESCENDANTS: Int32

  @JavaStaticField(isFinal: true)
  public var LAYOUT_MODE_CLIP_BOUNDS: Int32

  @JavaStaticField(isFinal: true)
  public var LAYOUT_MODE_OPTICAL_BOUNDS: Int32

  @JavaStaticField(isFinal: true)
  public var PERSISTENT_ALL_CACHES: Int32

  @JavaStaticField(isFinal: true)
  public var PERSISTENT_ANIMATION_CACHE: Int32

  @JavaStaticField(isFinal: true)
  public var PERSISTENT_NO_CACHE: Int32

  @JavaStaticField(isFinal: true)
  public var PERSISTENT_SCROLLING_CACHE: Int32

  @JavaStaticField(isFinal: true)
  public var ACCESSIBILITY_DATA_SENSITIVE_AUTO: Int32

  @JavaStaticField(isFinal: true)
  public var ACCESSIBILITY_DATA_SENSITIVE_NO: Int32

  @JavaStaticField(isFinal: true)
  public var ACCESSIBILITY_DATA_SENSITIVE_YES: Int32

  @JavaStaticField(isFinal: true)
  public var ACCESSIBILITY_LIVE_REGION_ASSERTIVE: Int32

  @JavaStaticField(isFinal: true)
  public var ACCESSIBILITY_LIVE_REGION_NONE: Int32

  @JavaStaticField(isFinal: true)
  public var ACCESSIBILITY_LIVE_REGION_POLITE: Int32

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS: Int32

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DATE: String

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DAY: String

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_MONTH: String

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_YEAR: String

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_HINT_CREDIT_CARD_NUMBER: String

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_HINT_CREDIT_CARD_SECURITY_CODE: String

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_HINT_EMAIL_ADDRESS: String

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_HINT_NAME: String

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_HINT_PASSWORD: String

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_HINT_PHONE: String

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_HINT_POSTAL_ADDRESS: String

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_HINT_POSTAL_CODE: String

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_HINT_USERNAME: String

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_TYPE_DATE: Int32

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_TYPE_LIST: Int32

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_TYPE_NONE: Int32

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_TYPE_TEXT: Int32

  @JavaStaticField(isFinal: true)
  public var AUTOFILL_TYPE_TOGGLE: Int32

  @JavaStaticField(isFinal: true)
  public var CONTENT_SENSITIVITY_AUTO: Int32

  @JavaStaticField(isFinal: true)
  public var CONTENT_SENSITIVITY_NOT_SENSITIVE: Int32

  @JavaStaticField(isFinal: true)
  public var CONTENT_SENSITIVITY_SENSITIVE: Int32

  @JavaStaticField(isFinal: true)
  public var DRAG_FLAG_ACCESSIBILITY_ACTION: Int32

  @JavaStaticField(isFinal: true)
  public var DRAG_FLAG_GLOBAL: Int32

  @JavaStaticField(isFinal: true)
  public var DRAG_FLAG_GLOBAL_PERSISTABLE_URI_PERMISSION: Int32

  @JavaStaticField(isFinal: true)
  public var DRAG_FLAG_GLOBAL_PREFIX_URI_PERMISSION: Int32

  @JavaStaticField(isFinal: true)
  public var DRAG_FLAG_GLOBAL_SAME_APPLICATION: Int32

  @JavaStaticField(isFinal: true)
  public var DRAG_FLAG_GLOBAL_URI_READ: Int32

  @JavaStaticField(isFinal: true)
  public var DRAG_FLAG_GLOBAL_URI_WRITE: Int32

  @JavaStaticField(isFinal: true)
  public var DRAG_FLAG_OPAQUE: Int32

  @JavaStaticField(isFinal: true)
  public var DRAG_FLAG_START_INTENT_SENDER_ON_UNHANDLED_DRAG: Int32

  @JavaStaticField(isFinal: true)
  public var DRAWING_CACHE_QUALITY_AUTO: Int32

  @JavaStaticField(isFinal: true)
  public var DRAWING_CACHE_QUALITY_HIGH: Int32

  @JavaStaticField(isFinal: true)
  public var DRAWING_CACHE_QUALITY_LOW: Int32

  @JavaStaticField(isFinal: true)
  public var FIND_VIEWS_WITH_CONTENT_DESCRIPTION: Int32

  @JavaStaticField(isFinal: true)
  public var FIND_VIEWS_WITH_TEXT: Int32

  @JavaStaticField(isFinal: true)
  public var FOCUSABLE: Int32

  @JavaStaticField(isFinal: true)
  public var FOCUSABLES_ALL: Int32

  @JavaStaticField(isFinal: true)
  public var FOCUSABLES_TOUCH_MODE: Int32

  @JavaStaticField(isFinal: true)
  public var FOCUSABLE_AUTO: Int32

  @JavaStaticField(isFinal: true)
  public var FOCUS_BACKWARD: Int32

  @JavaStaticField(isFinal: true)
  public var FOCUS_DOWN: Int32

  @JavaStaticField(isFinal: true)
  public var FOCUS_FORWARD: Int32

  @JavaStaticField(isFinal: true)
  public var FOCUS_LEFT: Int32

  @JavaStaticField(isFinal: true)
  public var FOCUS_RIGHT: Int32

  @JavaStaticField(isFinal: true)
  public var FOCUS_UP: Int32

  @JavaStaticField(isFinal: true)
  public var GONE: Int32

  @JavaStaticField(isFinal: true)
  public var HAPTIC_FEEDBACK_ENABLED: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANT_FOR_ACCESSIBILITY_AUTO: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANT_FOR_ACCESSIBILITY_NO: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANT_FOR_ACCESSIBILITY_YES: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANT_FOR_AUTOFILL_AUTO: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANT_FOR_AUTOFILL_NO: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANT_FOR_AUTOFILL_YES: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANT_FOR_CONTENT_CAPTURE_AUTO: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANT_FOR_CONTENT_CAPTURE_NO: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANT_FOR_CONTENT_CAPTURE_NO_EXCLUDE_DESCENDANTS: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANT_FOR_CONTENT_CAPTURE_YES: Int32

  @JavaStaticField(isFinal: true)
  public var IMPORTANT_FOR_CONTENT_CAPTURE_YES_EXCLUDE_DESCENDANTS: Int32

  @JavaStaticField(isFinal: true)
  public var INVISIBLE: Int32

  @JavaStaticField(isFinal: true)
  public var KEEP_SCREEN_ON: Int32

  @JavaStaticField(isFinal: true)
  public var LAYER_TYPE_HARDWARE: Int32

  @JavaStaticField(isFinal: true)
  public var LAYER_TYPE_NONE: Int32

  @JavaStaticField(isFinal: true)
  public var LAYER_TYPE_SOFTWARE: Int32

  @JavaStaticField(isFinal: true)
  public var LAYOUT_DIRECTION_INHERIT: Int32

  @JavaStaticField(isFinal: true)
  public var LAYOUT_DIRECTION_LOCALE: Int32

  @JavaStaticField(isFinal: true)
  public var LAYOUT_DIRECTION_LTR: Int32

  @JavaStaticField(isFinal: true)
  public var LAYOUT_DIRECTION_RTL: Int32

  @JavaStaticField(isFinal: true)
  public var MEASURED_HEIGHT_STATE_SHIFT: Int32

  @JavaStaticField(isFinal: true)
  public var MEASURED_SIZE_MASK: Int32

  @JavaStaticField(isFinal: true)
  public var MEASURED_STATE_MASK: Int32

  @JavaStaticField(isFinal: true)
  public var MEASURED_STATE_TOO_SMALL: Int32

  @JavaStaticField(isFinal: true)
  public var NOT_FOCUSABLE: Int32

  @JavaStaticField(isFinal: true)
  public var NO_ID: Int32

  @JavaStaticField(isFinal: true)
  public var OVER_SCROLL_ALWAYS: Int32

  @JavaStaticField(isFinal: true)
  public var OVER_SCROLL_IF_CONTENT_SCROLLS: Int32

  @JavaStaticField(isFinal: true)
  public var OVER_SCROLL_NEVER: Int32

  @JavaStaticField(isFinal: true)
  public var REQUESTED_FRAME_RATE_CATEGORY_DEFAULT: Float

  @JavaStaticField(isFinal: true)
  public var REQUESTED_FRAME_RATE_CATEGORY_HIGH: Float

  @JavaStaticField(isFinal: true)
  public var REQUESTED_FRAME_RATE_CATEGORY_LOW: Float

  @JavaStaticField(isFinal: true)
  public var REQUESTED_FRAME_RATE_CATEGORY_NORMAL: Float

  @JavaStaticField(isFinal: true)
  public var REQUESTED_FRAME_RATE_CATEGORY_NO_PREFERENCE: Float

  @JavaStaticField(isFinal: true)
  public var SCREEN_STATE_OFF: Int32

  @JavaStaticField(isFinal: true)
  public var SCREEN_STATE_ON: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLLBARS_INSIDE_INSET: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLLBARS_INSIDE_OVERLAY: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLLBARS_OUTSIDE_INSET: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLLBARS_OUTSIDE_OVERLAY: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLLBAR_POSITION_DEFAULT: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLLBAR_POSITION_LEFT: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLLBAR_POSITION_RIGHT: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLL_AXIS_HORIZONTAL: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLL_AXIS_NONE: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLL_AXIS_VERTICAL: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLL_CAPTURE_HINT_AUTO: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLL_CAPTURE_HINT_EXCLUDE: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLL_CAPTURE_HINT_EXCLUDE_DESCENDANTS: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLL_CAPTURE_HINT_INCLUDE: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLL_INDICATOR_BOTTOM: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLL_INDICATOR_END: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLL_INDICATOR_LEFT: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLL_INDICATOR_RIGHT: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLL_INDICATOR_START: Int32

  @JavaStaticField(isFinal: true)
  public var SCROLL_INDICATOR_TOP: Int32

  @JavaStaticField(isFinal: true)
  public var SOUND_EFFECTS_ENABLED: Int32

  @JavaStaticField(isFinal: true)
  public var STATUS_BAR_HIDDEN: Int32

  @JavaStaticField(isFinal: true)
  public var STATUS_BAR_VISIBLE: Int32

  @JavaStaticField(isFinal: true)
  public var SYSTEM_UI_FLAG_FULLSCREEN: Int32

  @JavaStaticField(isFinal: true)
  public var SYSTEM_UI_FLAG_HIDE_NAVIGATION: Int32

  @JavaStaticField(isFinal: true)
  public var SYSTEM_UI_FLAG_IMMERSIVE: Int32

  @JavaStaticField(isFinal: true)
  public var SYSTEM_UI_FLAG_IMMERSIVE_STICKY: Int32

  @JavaStaticField(isFinal: true)
  public var SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN: Int32

  @JavaStaticField(isFinal: true)
  public var SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION: Int32

  @JavaStaticField(isFinal: true)
  public var SYSTEM_UI_FLAG_LAYOUT_STABLE: Int32

  @JavaStaticField(isFinal: true)
  public var SYSTEM_UI_FLAG_LIGHT_NAVIGATION_BAR: Int32

  @JavaStaticField(isFinal: true)
  public var SYSTEM_UI_FLAG_LIGHT_STATUS_BAR: Int32

  @JavaStaticField(isFinal: true)
  public var SYSTEM_UI_FLAG_LOW_PROFILE: Int32

  @JavaStaticField(isFinal: true)
  public var SYSTEM_UI_FLAG_VISIBLE: Int32

  @JavaStaticField(isFinal: true)
  public var SYSTEM_UI_LAYOUT_FLAGS: Int32

  @JavaStaticField(isFinal: true)
  public var TEXT_ALIGNMENT_CENTER: Int32

  @JavaStaticField(isFinal: true)
  public var TEXT_ALIGNMENT_GRAVITY: Int32

  @JavaStaticField(isFinal: true)
  public var TEXT_ALIGNMENT_INHERIT: Int32

  @JavaStaticField(isFinal: true)
  public var TEXT_ALIGNMENT_TEXT_END: Int32

  @JavaStaticField(isFinal: true)
  public var TEXT_ALIGNMENT_TEXT_START: Int32

  @JavaStaticField(isFinal: true)
  public var TEXT_ALIGNMENT_VIEW_END: Int32

  @JavaStaticField(isFinal: true)
  public var TEXT_ALIGNMENT_VIEW_START: Int32

  @JavaStaticField(isFinal: true)
  public var TEXT_DIRECTION_ANY_RTL: Int32

  @JavaStaticField(isFinal: true)
  public var TEXT_DIRECTION_FIRST_STRONG: Int32

  @JavaStaticField(isFinal: true)
  public var TEXT_DIRECTION_FIRST_STRONG_LTR: Int32

  @JavaStaticField(isFinal: true)
  public var TEXT_DIRECTION_FIRST_STRONG_RTL: Int32

  @JavaStaticField(isFinal: true)
  public var TEXT_DIRECTION_INHERIT: Int32

  @JavaStaticField(isFinal: true)
  public var TEXT_DIRECTION_LOCALE: Int32

  @JavaStaticField(isFinal: true)
  public var TEXT_DIRECTION_LTR: Int32

  @JavaStaticField(isFinal: true)
  public var TEXT_DIRECTION_RTL: Int32

  @JavaStaticField(isFinal: true)
  public var VISIBLE: Int32

  @JavaStaticMethod
  public func setDebugAssertionsEnabled(_ arg0: Bool)

  @JavaStaticMethod
  public func setVerboseLoggingEnabled(_ arg0: Bool)
}
