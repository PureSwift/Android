// Auto-generated by Java-to-Swift wrapper generator.
import AndroidApp
import AndroidContent
import AndroidOS
import AndroidView
import JavaKit
import JavaKitReflection
import JavaRuntime

@JavaClass("androidx.core.app.ActivityCompat")
open class ActivityCompat: JavaObject {

}
extension ActivityCompat {
  @JavaInterface("androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback")
  public struct OnRequestPermissionsResultCallback {
  @JavaMethod
  public func onRequestPermissionsResult(_ arg0: Int32, _ arg1: [String], _ arg2: [Int32])
  }
}
extension ActivityCompat {
  @JavaInterface("androidx.core.app.ActivityCompat$PermissionCompatDelegate")
  public struct PermissionCompatDelegate {
  @JavaMethod
  public func requestPermissions(_ arg0: Activity?, _ arg1: [String], _ arg2: Int32) -> Bool

  @JavaMethod
  public func onActivityResult(_ arg0: Activity?, _ arg1: Int32, _ arg2: Int32, _ arg3: Intent?) -> Bool
  }
}
extension ActivityCompat {
  @JavaInterface("androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator")
  public struct RequestPermissionsRequestCodeValidator {
  @JavaMethod
  public func validateRequestPermissionsRequestCode(_ arg0: Int32)
  }
}
extension ActivityCompat {
  @JavaInterface("androidx.core.content.ContextCompat$RegisterReceiverFlags", extends: Annotation.self)
  public struct RegisterReceiverFlags {
  @JavaMethod
  public func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func toString() -> String

  @JavaMethod
  public func hashCode() -> Int32

  @JavaMethod
  public func annotationType() -> JavaClass<Annotation>!
  }
}
extension JavaClass<ActivityCompat> {
  @JavaStaticField(isFinal: true)
  public var RECEIVER_VISIBLE_TO_INSTANT_APPS: Int32

  @JavaStaticField(isFinal: true)
  public var RECEIVER_EXPORTED: Int32

  @JavaStaticField(isFinal: true)
  public var RECEIVER_NOT_EXPORTED: Int32

  @JavaStaticMethod
  public func invalidateOptionsMenu(_ arg0: Activity?) -> Bool

  @JavaStaticMethod
  public func startActivityForResult(_ arg0: Activity?, _ arg1: Intent?, _ arg2: Int32, _ arg3: Bundle?)

  @JavaStaticMethod
  public func startIntentSenderForResult(_ arg0: Activity?, _ arg1: IntentSender?, _ arg2: Int32, _ arg3: Intent?, _ arg4: Int32, _ arg5: Int32, _ arg6: Int32, _ arg7: Bundle?) throws

  @JavaStaticMethod
  public func finishAffinity(_ arg0: Activity?)

  @JavaStaticMethod
  public func finishAfterTransition(_ arg0: Activity?)

  @JavaStaticMethod
  public func requireViewById(_ arg0: Activity?, _ arg1: Int32) -> View!

  @JavaStaticMethod
  public func postponeEnterTransition(_ arg0: Activity?)

  @JavaStaticMethod
  public func startPostponedEnterTransition(_ arg0: Activity?)

  @JavaStaticMethod
  public func requestPermissions(_ arg0: Activity?, _ arg1: [String], _ arg2: Int32)

  @JavaStaticMethod
  public func shouldShowRequestPermissionRationale(_ arg0: Activity?, _ arg1: String) -> Bool

  @JavaStaticMethod
  public func isLaunchedFromBubble(_ arg0: Activity?) -> Bool

  @JavaStaticMethod
  public func recreate(_ arg0: Activity?)

  @JavaStaticMethod
  public func setPermissionCompatDelegate(_ arg0: ActivityCompat.PermissionCompatDelegate?)

  @JavaStaticMethod
  public func getPermissionCompatDelegate() -> ActivityCompat.PermissionCompatDelegate!
}
