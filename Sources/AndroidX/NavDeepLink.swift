// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime
import JavaUtil

@JavaClass("androidx.navigation.NavDeepLink")
open class NavDeepLink: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: String, _ arg2: String, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getUriPattern() -> String

  @JavaMethod
  open func getAction() -> String

  @JavaMethod
  open func getMimeType() -> String

  @JavaMethod
  open func isExactDeepLink() -> Bool

  @JavaMethod
  open func getMimeTypeMatchRating(_ arg0: String) -> Int32

  @JavaMethod
  open func getArgumentsNames$navigation_common_release() -> List<JavaString>!

  @JavaMethod
  open func setExactDeepLink$navigation_common_release(_ arg0: Bool)

  @JavaMethod
  open func matches$navigation_common_release(_ arg0: NavDeepLinkRequest?) -> Bool

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func hashCode() -> Int32
}
extension JavaClass<NavDeepLink> {
  @JavaStaticMethod
  public func access$getPathRegex$p(_ arg0: NavDeepLink?) -> String

  @JavaStaticMethod
  public func access$parseQuery(_ arg0: NavDeepLink?) -> Map!

  @JavaStaticMethod
  public func access$getFragRegex(_ arg0: NavDeepLink?) -> String

  @JavaStaticMethod
  public func access$getMimeTypeRegex$p(_ arg0: NavDeepLink?) -> String
}
