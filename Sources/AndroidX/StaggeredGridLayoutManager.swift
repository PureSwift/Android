// Auto-generated by Java-to-Swift wrapper generator.
import AndroidContent
import AndroidGraphics
import AndroidOS
import AndroidUtil
import AndroidView
import JavaKit
import JavaRuntime

@JavaClass("androidx.recyclerview.widget.StaggeredGridLayoutManager", implements: RecyclerView.SmoothScroller.ScrollVectorProvider.self)
open class StaggeredGridLayoutManager: RecyclerView.LayoutManager {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, _ arg1: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Context?, _ arg1: AttributeSet?, _ arg2: Int32, _ arg3: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func setMeasuredDimension(_ arg0: Rect?, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open override func onAdapterChanged(_ arg0: RecyclerView.Adapter?, _ arg1: RecyclerView.Adapter?)

  @JavaMethod
  open override func onSaveInstanceState() -> Parcelable!

  @JavaMethod
  open override func onRestoreInstanceState(_ arg0: Parcelable?)

  @JavaMethod
  open override func assertNotInLayoutOrScroll(_ arg0: String)

  @JavaMethod
  open override func smoothScrollToPosition(_ arg0: RecyclerView?, _ arg1: RecyclerView.State?, _ arg2: Int32)

  @JavaMethod
  open override func isLayoutReversed() -> Bool

  @JavaMethod
  open override func scrollHorizontallyBy(_ arg0: Int32, _ arg1: RecyclerView.Recycler?, _ arg2: RecyclerView.State?) -> Int32

  @JavaMethod
  open override func scrollVerticallyBy(_ arg0: Int32, _ arg1: RecyclerView.Recycler?, _ arg2: RecyclerView.State?) -> Int32

  @JavaMethod
  open override func computeHorizontalScrollOffset(_ arg0: RecyclerView.State?) -> Int32

  @JavaMethod
  open override func computeHorizontalScrollExtent(_ arg0: RecyclerView.State?) -> Int32

  @JavaMethod
  open override func computeHorizontalScrollRange(_ arg0: RecyclerView.State?) -> Int32

  @JavaMethod
  open override func computeVerticalScrollOffset(_ arg0: RecyclerView.State?) -> Int32

  @JavaMethod
  open override func computeVerticalScrollExtent(_ arg0: RecyclerView.State?) -> Int32

  @JavaMethod
  open override func computeVerticalScrollRange(_ arg0: RecyclerView.State?) -> Int32

  @JavaMethod
  open override func onFocusSearchFailed(_ arg0: View?, _ arg1: Int32, _ arg2: RecyclerView.Recycler?, _ arg3: RecyclerView.State?) -> View!

  @JavaMethod
  open override func onDetachedFromWindow(_ arg0: RecyclerView?, _ arg1: RecyclerView.Recycler?)

  @JavaMethod
  open func setSpanCount(_ arg0: Int32)

  @JavaMethod
  open func getSpanCount() -> Int32

  @JavaMethod
  open func invalidateSpanAssignments()

  @JavaMethod
  open func getGapStrategy() -> Int32

  @JavaMethod
  open func setGapStrategy(_ arg0: Int32)

  @JavaMethod
  open func findFirstVisibleItemPositions(_ arg0: [Int32]) -> [Int32]

  @JavaMethod
  open func findFirstCompletelyVisibleItemPositions(_ arg0: [Int32]) -> [Int32]

  @JavaMethod
  open func findLastVisibleItemPositions(_ arg0: [Int32]) -> [Int32]

  @JavaMethod
  open func findLastCompletelyVisibleItemPositions(_ arg0: [Int32]) -> [Int32]

  @JavaMethod
  open override func isAutoMeasureEnabled() -> Bool

  @JavaMethod
  open override func supportsPredictiveItemAnimations() -> Bool

  @JavaMethod
  open override func onItemsChanged(_ arg0: RecyclerView?)

  @JavaMethod
  open override func onLayoutChildren(_ arg0: RecyclerView.Recycler?, _ arg1: RecyclerView.State?)

  @JavaMethod
  open override func onLayoutCompleted(_ arg0: RecyclerView.State?)

  @JavaMethod
  open override func checkLayoutParams(_ arg0: RecyclerView.LayoutParams?) -> Bool

  @JavaMethod
  open override func generateDefaultLayoutParams() -> RecyclerView.LayoutParams!

  @JavaMethod
  open override func generateLayoutParams(_ arg0: ViewGroup.LayoutParams?) -> RecyclerView.LayoutParams!

  @JavaMethod
  open override func generateLayoutParams(_ arg0: Context?, _ arg1: AttributeSet?) -> RecyclerView.LayoutParams!

  @JavaMethod
  open override func onScrollStateChanged(_ arg0: Int32)

  @JavaMethod
  open override func offsetChildrenVertical(_ arg0: Int32)

  @JavaMethod
  open override func offsetChildrenHorizontal(_ arg0: Int32)

  @JavaMethod
  open func computeScrollVectorForPosition(_ arg0: Int32) -> PointF!

  @JavaMethod
  open override func canScrollVertically() -> Bool

  @JavaMethod
  open override func canScrollHorizontally() -> Bool

  @JavaMethod
  open override func scrollToPosition(_ arg0: Int32)

  @JavaMethod
  open func setOrientation(_ arg0: Int32)

  @JavaMethod
  open func setReverseLayout(_ arg0: Bool)

  @JavaMethod
  open override func getRowCountForAccessibility(_ arg0: RecyclerView.Recycler?, _ arg1: RecyclerView.State?) -> Int32

  @JavaMethod
  open override func getColumnCountForAccessibility(_ arg0: RecyclerView.Recycler?, _ arg1: RecyclerView.State?) -> Int32

  @JavaMethod
  open func scrollToPositionWithOffset(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func getOrientation() -> Int32

  @JavaMethod
  open func getReverseLayout() -> Bool

  @JavaMethod
  open override func collectAdjacentPrefetchPositions(_ arg0: Int32, _ arg1: Int32, _ arg2: RecyclerView.State?, _ arg3: RecyclerView.LayoutManager.LayoutPrefetchRegistry?)

  @JavaMethod
  open override func onItemsUpdated(_ arg0: RecyclerView?, _ arg1: Int32, _ arg2: Int32, _ arg3: JavaObject?)

  @JavaMethod
  open override func onItemsAdded(_ arg0: RecyclerView?, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open override func onItemsRemoved(_ arg0: RecyclerView?, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open override func onItemsMoved(_ arg0: RecyclerView?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32)
}
extension JavaClass<StaggeredGridLayoutManager> {
  @JavaStaticField(isFinal: true)
  public var HORIZONTAL: Int32

  @JavaStaticField(isFinal: true)
  public var VERTICAL: Int32

  @JavaStaticField(isFinal: true)
  public var GAP_HANDLING_NONE: Int32

  @JavaStaticField(isFinal: true)
  public var GAP_HANDLING_LAZY: Int32

  @JavaStaticField(isFinal: true)
  public var GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS: Int32
}
