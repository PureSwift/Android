// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("androidx.recyclerview.widget.SimpleItemAnimator")
open class SimpleItemAnimator: RecyclerView.ItemAnimator {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func dispatchMoveFinished(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func animateMove(_ arg0: RecyclerView.ViewHolder?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32) -> Bool

  @JavaMethod
  open func dispatchChangeFinished(_ arg0: RecyclerView.ViewHolder?, _ arg1: Bool)

  @JavaMethod
  open func dispatchRemoveFinished(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func dispatchAddFinished(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func animateRemove(_ arg0: RecyclerView.ViewHolder?) -> Bool

  @JavaMethod
  open func animateAdd(_ arg0: RecyclerView.ViewHolder?) -> Bool

  @JavaMethod
  open override func animateChange(_ arg0: RecyclerView.ViewHolder?, _ arg1: RecyclerView.ViewHolder?, _ arg2: RecyclerView.ItemAnimator.ItemHolderInfo?, _ arg3: RecyclerView.ItemAnimator.ItemHolderInfo?) -> Bool

  @JavaMethod
  open func animateChange(_ arg0: RecyclerView.ViewHolder?, _ arg1: RecyclerView.ViewHolder?, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Int32) -> Bool

  @JavaMethod
  open override func animateAppearance(_ arg0: RecyclerView.ViewHolder?, _ arg1: RecyclerView.ItemAnimator.ItemHolderInfo?, _ arg2: RecyclerView.ItemAnimator.ItemHolderInfo?) -> Bool

  @JavaMethod
  open override func animateDisappearance(_ arg0: RecyclerView.ViewHolder?, _ arg1: RecyclerView.ItemAnimator.ItemHolderInfo?, _ arg2: RecyclerView.ItemAnimator.ItemHolderInfo?) -> Bool

  @JavaMethod
  open override func canReuseUpdatedViewHolder(_ arg0: RecyclerView.ViewHolder?) -> Bool

  @JavaMethod
  open func onRemoveFinished(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func onMoveFinished(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func onAddFinished(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func onChangeFinished(_ arg0: RecyclerView.ViewHolder?, _ arg1: Bool)

  @JavaMethod
  open func onRemoveStarting(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func onMoveStarting(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func onAddStarting(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func onChangeStarting(_ arg0: RecyclerView.ViewHolder?, _ arg1: Bool)

  @JavaMethod
  open func getSupportsChangeAnimations() -> Bool

  @JavaMethod
  open func setSupportsChangeAnimations(_ arg0: Bool)

  @JavaMethod
  open override func animatePersistence(_ arg0: RecyclerView.ViewHolder?, _ arg1: RecyclerView.ItemAnimator.ItemHolderInfo?, _ arg2: RecyclerView.ItemAnimator.ItemHolderInfo?) -> Bool

  @JavaMethod
  open func dispatchRemoveStarting(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func dispatchMoveStarting(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func dispatchAddStarting(_ arg0: RecyclerView.ViewHolder?)

  @JavaMethod
  open func dispatchChangeStarting(_ arg0: RecyclerView.ViewHolder?, _ arg1: Bool)
}
extension JavaClass<SimpleItemAnimator> {
  @JavaStaticField(isFinal: true)
  public var FLAG_CHANGED: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_REMOVED: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_INVALIDATED: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_MOVED: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_APPEARED_IN_PRE_LAYOUT: Int32
}
