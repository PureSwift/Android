// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("android.app.FragmentManager")
open class FragmentManager: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func beginTransaction() -> FragmentTransaction!

  @JavaMethod
  open func executePendingTransactions() -> Bool

  @JavaMethod
  open func findFragmentById(_ arg0: Int32) -> Fragment!

  @JavaMethod
  open func findFragmentByTag(_ arg0: String) -> Fragment!

  @JavaMethod
  open func popBackStack(_ arg0: String, _ arg1: Int32)

  @JavaMethod
  open func popBackStack()

  @JavaMethod
  open func popBackStack(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func popBackStackImmediate(_ arg0: String, _ arg1: Int32) -> Bool

  @JavaMethod
  open func popBackStackImmediate() -> Bool

  @JavaMethod
  open func popBackStackImmediate(_ arg0: Int32, _ arg1: Int32) -> Bool

  @JavaMethod
  open func getBackStackEntryCount() -> Int32

  @JavaMethod
  open func getBackStackEntryAt(_ arg0: Int32) -> FragmentManager.BackStackEntry!

  @JavaMethod
  open func addOnBackStackChangedListener(_ arg0: FragmentManager.OnBackStackChangedListener?)

  @JavaMethod
  open func removeOnBackStackChangedListener(_ arg0: FragmentManager.OnBackStackChangedListener?)

  @JavaMethod
  open func getFragments() -> List<Fragment>!

  @JavaMethod
  open func saveFragmentInstanceState(_ arg0: Fragment?) -> Fragment.SavedState!

  @JavaMethod
  open func registerFragmentLifecycleCallbacks(_ arg0: FragmentManager.FragmentLifecycleCallbacks?, _ arg1: Bool)

  @JavaMethod
  open func unregisterFragmentLifecycleCallbacks(_ arg0: FragmentManager.FragmentLifecycleCallbacks?)

  @JavaMethod
  open func getPrimaryNavigationFragment() -> Fragment!

  @JavaMethod
  open func isStateSaved() -> Bool

  @JavaMethod
  open func invalidateOptionsMenu()

  @JavaMethod
  open func isDestroyed() -> Bool

  @JavaMethod
  open func dump(_ arg0: String, _ arg1: FileDescriptor?, _ arg2: PrintWriter?, _ arg3: [String])
}
extension JavaClass<FragmentManager> {
  @JavaStaticField(isFinal: true)
  public var POP_BACK_STACK_INCLUSIVE: Int32

  @JavaStaticMethod
  public func enableDebugLogging(_ arg0: Bool)
}
