// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

extension Notification {
  @JavaClass("android.app.Notification$Builder")
  open class Builder: JavaObject {
  @JavaMethod
  open func setShortcutId(_ arg0: String) -> Notification.Builder!

  @JavaMethod
  open func setBadgeIconType(_ arg0: Int32) -> Notification.Builder!

  @JavaMethod
  open func setGroupAlertBehavior(_ arg0: Int32) -> Notification.Builder!

  @JavaMethod
  open func setBubbleMetadata(_ arg0: Notification.BubbleMetadata?) -> Notification.Builder!

  @JavaMethod
  open func setChannelId(_ arg0: String) -> Notification.Builder!

  @JavaMethod
  open func setTimeoutAfter(_ arg0: Int64) -> Notification.Builder!

  @JavaMethod
  open func setWhen(_ arg0: Int64) -> Notification.Builder!

  @JavaMethod
  open func setShowWhen(_ arg0: Bool) -> Notification.Builder!

  @JavaMethod
  open func setUsesChronometer(_ arg0: Bool) -> Notification.Builder!

  @JavaMethod
  open func setChronometerCountDown(_ arg0: Bool) -> Notification.Builder!

  @JavaMethod
  open func setSmallIcon(_ arg0: Int32) -> Notification.Builder!

  @JavaMethod
  open func setSmallIcon(_ arg0: Int32, _ arg1: Int32) -> Notification.Builder!

  @JavaMethod
  open func setContentTitle(_ arg0: CharSequence?) -> Notification.Builder!

  @JavaMethod
  open func setContentText(_ arg0: CharSequence?) -> Notification.Builder!

  @JavaMethod
  open func setSubText(_ arg0: CharSequence?) -> Notification.Builder!

  @JavaMethod
  open func setSettingsText(_ arg0: CharSequence?) -> Notification.Builder!

  @JavaMethod
  open func setRemoteInputHistory(_ arg0: [CharSequence?]) -> Notification.Builder!

  @JavaMethod
  open func setNumber(_ arg0: Int32) -> Notification.Builder!

  @JavaMethod
  open func setContentInfo(_ arg0: CharSequence?) -> Notification.Builder!

  @JavaMethod
  open func setProgress(_ arg0: Int32, _ arg1: Int32, _ arg2: Bool) -> Notification.Builder!

  @JavaMethod
  open func setContentIntent(_ arg0: PendingIntent?) -> Notification.Builder!

  @JavaMethod
  open func setDeleteIntent(_ arg0: PendingIntent?) -> Notification.Builder!

  @JavaMethod
  open func setFullScreenIntent(_ arg0: PendingIntent?, _ arg1: Bool) -> Notification.Builder!

  @JavaMethod
  open func setTicker(_ arg0: CharSequence?) -> Notification.Builder!

  @JavaMethod
  open func setVibrate(_ arg0: [Int64]) -> Notification.Builder!

  @JavaMethod
  open func setLights(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32) -> Notification.Builder!

  @JavaMethod
  open func setOngoing(_ arg0: Bool) -> Notification.Builder!

  @JavaMethod
  open func setColorized(_ arg0: Bool) -> Notification.Builder!

  @JavaMethod
  open func setOnlyAlertOnce(_ arg0: Bool) -> Notification.Builder!

  @JavaMethod
  open func setForegroundServiceBehavior(_ arg0: Int32) -> Notification.Builder!

  @JavaMethod
  open func setAutoCancel(_ arg0: Bool) -> Notification.Builder!

  @JavaMethod
  open func setLocalOnly(_ arg0: Bool) -> Notification.Builder!

  @JavaMethod
  open func setDefaults(_ arg0: Int32) -> Notification.Builder!

  @JavaMethod
  open func setCategory(_ arg0: String) -> Notification.Builder!

  @JavaMethod
  open func addPerson(_ arg0: String) -> Notification.Builder!

  @JavaMethod
  open func addPerson(_ arg0: Person?) -> Notification.Builder!

  @JavaMethod
  open func setGroup(_ arg0: String) -> Notification.Builder!

  @JavaMethod
  open func setGroupSummary(_ arg0: Bool) -> Notification.Builder!

  @JavaMethod
  open func setSortKey(_ arg0: String) -> Notification.Builder!

  @JavaMethod
  open func addAction(_ arg0: Notification.Action?) -> Notification.Builder!

  @JavaMethod
  open func addAction(_ arg0: Int32, _ arg1: CharSequence?, _ arg2: PendingIntent?) -> Notification.Builder!

  @JavaMethod
  open func setActions(_ arg0: [Notification.Action?]) -> Notification.Builder!

  @JavaMethod
  open func setStyle(_ arg0: Notification.Style?) -> Notification.Builder!

  @JavaMethod
  open func getStyle() -> Notification.Style!

  @JavaMethod
  open func setVisibility(_ arg0: Int32) -> Notification.Builder!

  @JavaMethod
  open func setPublicVersion(_ arg0: Notification?) -> Notification.Builder!

  @JavaMethod
  open func extend(_ arg0: Notification.Extender?) -> Notification.Builder!

  @JavaMethod
  open func setFlag(_ arg0: Int32, _ arg1: Bool) -> Notification.Builder!

  @JavaMethod
  open func setAllowSystemGeneratedContextualActions(_ arg0: Bool) -> Notification.Builder!

  @JavaMethod
  open func getNotification() -> Notification!

  @JavaMethod
  open func setPriority(_ arg0: Int32) -> Notification.Builder!

  @JavaMethod
  open func build() -> Notification!

  @JavaMethod
  open func setColor(_ arg0: Int32) -> Notification.Builder!
  }
}
