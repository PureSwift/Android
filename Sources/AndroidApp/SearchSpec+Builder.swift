// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

extension SearchSpec {
  @JavaClass("android.app.appsearch.SearchSpec$Builder")
  open class Builder: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func setTermMatch(_ arg0: Int32) -> SearchSpec.Builder!

  @JavaMethod
  open func addFilterSchemas(_ arg0: [String]) -> SearchSpec.Builder!

  @JavaMethod
  open func addFilterSchemas(_ arg0: JavaCollection<JavaString>?) -> SearchSpec.Builder!

  @JavaMethod
  open func addFilterNamespaces(_ arg0: JavaCollection<JavaString>?) -> SearchSpec.Builder!

  @JavaMethod
  open func addFilterNamespaces(_ arg0: [String]) -> SearchSpec.Builder!

  @JavaMethod
  open func addFilterPackageNames(_ arg0: [String]) -> SearchSpec.Builder!

  @JavaMethod
  open func addFilterPackageNames(_ arg0: JavaCollection<JavaString>?) -> SearchSpec.Builder!

  @JavaMethod
  open func setResultCountPerPage(_ arg0: Int32) -> SearchSpec.Builder!

  @JavaMethod
  open func setRankingStrategy(_ arg0: Int32) -> SearchSpec.Builder!

  @JavaMethod
  open func setOrder(_ arg0: Int32) -> SearchSpec.Builder!

  @JavaMethod
  open func setSnippetCount(_ arg0: Int32) -> SearchSpec.Builder!

  @JavaMethod
  open func setMaxSnippetSize(_ arg0: Int32) -> SearchSpec.Builder!

  @JavaMethod
  open func setSnippetCountPerProperty(_ arg0: Int32) -> SearchSpec.Builder!

  @JavaMethod
  open func addProjection(_ arg0: String, _ arg1: JavaCollection<JavaString>?) -> SearchSpec.Builder!

  @JavaMethod
  open func setResultGrouping(_ arg0: Int32, _ arg1: Int32) -> SearchSpec.Builder!

  @JavaMethod
  open func build() -> SearchSpec!
  }
}
