// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

extension Notification {
  @JavaClass("android.app.Notification$MessagingStyle")
  open class MessagingStyle: Notification.Style {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: CharSequence?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Person?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getUser() -> Person!

  @JavaMethod
  open func getUserDisplayName() -> CharSequence!

  @JavaMethod
  open func setConversationTitle(_ arg0: CharSequence?) -> Notification.MessagingStyle!

  @JavaMethod
  open func getConversationTitle() -> CharSequence!

  @JavaMethod
  open func addMessage(_ arg0: Notification.MessagingStyle.Message?) -> Notification.MessagingStyle!

  @JavaMethod
  open func addMessage(_ arg0: CharSequence?, _ arg1: Int64, _ arg2: CharSequence?) -> Notification.MessagingStyle!

  @JavaMethod
  open func addMessage(_ arg0: CharSequence?, _ arg1: Int64, _ arg2: Person?) -> Notification.MessagingStyle!

  @JavaMethod
  open func addHistoricMessage(_ arg0: Notification.MessagingStyle.Message?) -> Notification.MessagingStyle!

  @JavaMethod
  open func getHistoricMessages() -> List<Notification.MessagingStyle.Message>!

  @JavaMethod
  open func setGroupConversation(_ arg0: Bool) -> Notification.MessagingStyle!

  @JavaMethod
  open func isGroupConversation() -> Bool

  @JavaMethod
  open func getMessages() -> List<Notification.MessagingStyle.Message>!
  }
}
extension JavaClass<Notification.MessagingStyle> {
  @JavaStaticField(isFinal: true)
  public var MAXIMUM_RETAINED_MESSAGES: Int32
}
