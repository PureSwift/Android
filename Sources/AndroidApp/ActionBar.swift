// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("android.app.ActionBar")
open class ActionBar: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getHeight() -> Int32

  @JavaMethod
  open func getElevation() -> Float

  @JavaMethod
  open func setTitle(_ arg0: CharSequence?)

  @JavaMethod
  open func setTitle(_ arg0: Int32)

  @JavaMethod
  open func setLogo(_ arg0: Int32)

  @JavaMethod
  open func setSelectedNavigationItem(_ arg0: Int32)

  @JavaMethod
  open func getSelectedNavigationIndex() -> Int32

  @JavaMethod
  open func getNavigationItemCount() -> Int32

  @JavaMethod
  open func setDisplayOptions(_ arg0: Int32)

  @JavaMethod
  open func setDisplayOptions(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func setDisplayUseLogoEnabled(_ arg0: Bool)

  @JavaMethod
  open func setDisplayShowHomeEnabled(_ arg0: Bool)

  @JavaMethod
  open func setDisplayHomeAsUpEnabled(_ arg0: Bool)

  @JavaMethod
  open func setDisplayShowTitleEnabled(_ arg0: Bool)

  @JavaMethod
  open func setDisplayShowCustomEnabled(_ arg0: Bool)

  @JavaMethod
  open func getNavigationMode() -> Int32

  @JavaMethod
  open func setNavigationMode(_ arg0: Int32)

  @JavaMethod
  open func getDisplayOptions() -> Int32

  @JavaMethod
  open func addTab(_ arg0: ActionBar.Tab?, _ arg1: Int32, _ arg2: Bool)

  @JavaMethod
  open func addTab(_ arg0: ActionBar.Tab?, _ arg1: Int32)

  @JavaMethod
  open func addTab(_ arg0: ActionBar.Tab?, _ arg1: Bool)

  @JavaMethod
  open func addTab(_ arg0: ActionBar.Tab?)

  @JavaMethod
  open func removeTab(_ arg0: ActionBar.Tab?)

  @JavaMethod
  open func removeTabAt(_ arg0: Int32)

  @JavaMethod
  open func removeAllTabs()

  @JavaMethod
  open func selectTab(_ arg0: ActionBar.Tab?)

  @JavaMethod
  open func getSelectedTab() -> ActionBar.Tab!

  @JavaMethod
  open func getTabAt(_ arg0: Int32) -> ActionBar.Tab!

  @JavaMethod
  open func getTabCount() -> Int32

  @JavaMethod
  open func addOnMenuVisibilityListener(_ arg0: ActionBar.OnMenuVisibilityListener?)

  @JavaMethod
  open func removeOnMenuVisibilityListener(_ arg0: ActionBar.OnMenuVisibilityListener?)

  @JavaMethod
  open func setHomeButtonEnabled(_ arg0: Bool)

  @JavaMethod
  open func setHomeAsUpIndicator(_ arg0: Int32)

  @JavaMethod
  open func setHomeActionContentDescription(_ arg0: CharSequence?)

  @JavaMethod
  open func setHomeActionContentDescription(_ arg0: Int32)

  @JavaMethod
  open func setHideOnContentScrollEnabled(_ arg0: Bool)

  @JavaMethod
  open func isHideOnContentScrollEnabled() -> Bool

  @JavaMethod
  open func getHideOffset() -> Int32

  @JavaMethod
  open func setHideOffset(_ arg0: Int32)

  @JavaMethod
  open func setElevation(_ arg0: Float)

  @JavaMethod
  open func getTitle() -> CharSequence!

  @JavaMethod
  open func setIcon(_ arg0: Int32)

  @JavaMethod
  open func setCustomView(_ arg0: Int32)

  @JavaMethod
  open func setSubtitle(_ arg0: Int32)

  @JavaMethod
  open func setSubtitle(_ arg0: CharSequence?)

  @JavaMethod
  open func getSubtitle() -> CharSequence!

  @JavaMethod
  open func show()

  @JavaMethod
  open func isShowing() -> Bool

  @JavaMethod
  open func hide()

  @JavaMethod
  open func newTab() -> ActionBar.Tab!
}
extension JavaClass<ActionBar> {
  @JavaStaticField(isFinal: true)
  public var DISPLAY_HOME_AS_UP: Int32

  @JavaStaticField(isFinal: true)
  public var DISPLAY_SHOW_CUSTOM: Int32

  @JavaStaticField(isFinal: true)
  public var DISPLAY_SHOW_HOME: Int32

  @JavaStaticField(isFinal: true)
  public var DISPLAY_SHOW_TITLE: Int32

  @JavaStaticField(isFinal: true)
  public var DISPLAY_USE_LOGO: Int32

  @JavaStaticField(isFinal: true)
  public var NAVIGATION_MODE_LIST: Int32

  @JavaStaticField(isFinal: true)
  public var NAVIGATION_MODE_STANDARD: Int32

  @JavaStaticField(isFinal: true)
  public var NAVIGATION_MODE_TABS: Int32
}
