// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

extension Slice {
  @JavaClass("android.app.slice.Slice$Builder")
  open class Builder: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Slice.Builder?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func addRemoteInput(_ arg0: RemoteInput?, _ arg1: String, _ arg2: List<JavaString>?) -> Slice.Builder!

  @JavaMethod
  open func setCallerNeeded(_ arg0: Bool) -> Slice.Builder!

  @JavaMethod
  open func addHints(_ arg0: List<JavaString>?) -> Slice.Builder!

  @JavaMethod
  open func addSubSlice(_ arg0: Slice?, _ arg1: String) -> Slice.Builder!

  @JavaMethod
  open func addText(_ arg0: CharSequence?, _ arg1: String, _ arg2: List<JavaString>?) -> Slice.Builder!

  @JavaMethod
  open func addInt(_ arg0: Int32, _ arg1: String, _ arg2: List<JavaString>?) -> Slice.Builder!

  @JavaMethod
  open func addLong(_ arg0: Int64, _ arg1: String, _ arg2: List<JavaString>?) -> Slice.Builder!

  @JavaMethod
  open func addAction(_ arg0: PendingIntent?, _ arg1: Slice?, _ arg2: String) -> Slice.Builder!

  @JavaMethod
  open func build() -> Slice!
  }
}
