// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("android.app.ApplicationErrorReport")
open class ApplicationErrorReport: JavaObject {
  @JavaField(isFinal: false)
  public var anrInfo: ApplicationErrorReport.AnrInfo!

  @JavaField(isFinal: false)
  public var batteryInfo: ApplicationErrorReport.BatteryInfo!

  @JavaField(isFinal: false)
  public var crashInfo: ApplicationErrorReport.CrashInfo!

  @JavaField(isFinal: false)
  public var installerPackageName: String

  @JavaField(isFinal: false)
  public var packageName: String

  @JavaField(isFinal: false)
  public var processName: String

  @JavaField(isFinal: false)
  public var runningServiceInfo: ApplicationErrorReport.RunningServiceInfo!

  @JavaField(isFinal: false)
  public var systemApp: Bool

  @JavaField(isFinal: false)
  public var time: Int64

  @JavaField(isFinal: false)
  public var type: Int32

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func describeContents() -> Int32
}
extension JavaClass<ApplicationErrorReport> {
  @JavaStaticField(isFinal: true)
  public var TYPE_ANR: Int32

  @JavaStaticField(isFinal: true)
  public var TYPE_BATTERY: Int32

  @JavaStaticField(isFinal: true)
  public var TYPE_CRASH: Int32

  @JavaStaticField(isFinal: true)
  public var TYPE_NONE: Int32

  @JavaStaticField(isFinal: true)
  public var TYPE_RUNNING_SERVICE: Int32

  @JavaStaticField(isFinal: true)
  public var CONTENTS_FILE_DESCRIPTOR: Int32

  @JavaStaticField(isFinal: true)
  public var PARCELABLE_WRITE_RETURN_VALUE: Int32
}
