// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

extension DownloadManager {
  @JavaClass("android.app.DownloadManager$Request")
  open class Request: JavaObject {
  @JavaMethod
  open func setTitle(_ arg0: CharSequence?) -> DownloadManager.Request!

  @JavaMethod
  open func setDescription(_ arg0: CharSequence?) -> DownloadManager.Request!

  @JavaMethod
  open func setRequiresCharging(_ arg0: Bool) -> DownloadManager.Request!

  @JavaMethod
  open func setRequiresDeviceIdle(_ arg0: Bool) -> DownloadManager.Request!

  @JavaMethod
  open func setDestinationInExternalPublicDir(_ arg0: String, _ arg1: String) -> DownloadManager.Request!

  @JavaMethod
  open func allowScanningByMediaScanner()

  @JavaMethod
  open func addRequestHeader(_ arg0: String, _ arg1: String) -> DownloadManager.Request!

  @JavaMethod
  open func setMimeType(_ arg0: String) -> DownloadManager.Request!

  @JavaMethod
  open func setShowRunningNotification(_ arg0: Bool) -> DownloadManager.Request!

  @JavaMethod
  open func setNotificationVisibility(_ arg0: Int32) -> DownloadManager.Request!

  @JavaMethod
  open func setAllowedNetworkTypes(_ arg0: Int32) -> DownloadManager.Request!

  @JavaMethod
  open func setAllowedOverRoaming(_ arg0: Bool) -> DownloadManager.Request!

  @JavaMethod
  open func setAllowedOverMetered(_ arg0: Bool) -> DownloadManager.Request!

  @JavaMethod
  open func setVisibleInDownloadsUi(_ arg0: Bool) -> DownloadManager.Request!
  }
}
extension JavaClass<DownloadManager.Request> {
  @JavaStaticField(isFinal: true)
  public var NETWORK_MOBILE: Int32

  @JavaStaticField(isFinal: true)
  public var NETWORK_WIFI: Int32

  @JavaStaticField(isFinal: true)
  public var VISIBILITY_HIDDEN: Int32

  @JavaStaticField(isFinal: true)
  public var VISIBILITY_VISIBLE: Int32

  @JavaStaticField(isFinal: true)
  public var VISIBILITY_VISIBLE_NOTIFY_COMPLETED: Int32

  @JavaStaticField(isFinal: true)
  public var VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION: Int32
}
