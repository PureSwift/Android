// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

extension JobInfo {
  @JavaClass("android.app.job.JobInfo$Builder")
  open class Builder: JavaObject {
  @JavaMethod
  open func setRequiredNetworkType(_ arg0: Int32) -> JobInfo.Builder!

  @JavaMethod
  open func setEstimatedNetworkBytes(_ arg0: Int64, _ arg1: Int64) -> JobInfo.Builder!

  @JavaMethod
  open func setMinimumNetworkChunkBytes(_ arg0: Int64) -> JobInfo.Builder!

  @JavaMethod
  open func setRequiresCharging(_ arg0: Bool) -> JobInfo.Builder!

  @JavaMethod
  open func setRequiresBatteryNotLow(_ arg0: Bool) -> JobInfo.Builder!

  @JavaMethod
  open func setRequiresDeviceIdle(_ arg0: Bool) -> JobInfo.Builder!

  @JavaMethod
  open func setRequiresStorageNotLow(_ arg0: Bool) -> JobInfo.Builder!

  @JavaMethod
  open func addTriggerContentUri(_ arg0: JobInfo.TriggerContentUri?) -> JobInfo.Builder!

  @JavaMethod
  open func setTriggerContentUpdateDelay(_ arg0: Int64) -> JobInfo.Builder!

  @JavaMethod
  open func setTriggerContentMaxDelay(_ arg0: Int64) -> JobInfo.Builder!

  @JavaMethod
  open func setPeriodic(_ arg0: Int64) -> JobInfo.Builder!

  @JavaMethod
  open func setPeriodic(_ arg0: Int64, _ arg1: Int64) -> JobInfo.Builder!

  @JavaMethod
  open func setMinimumLatency(_ arg0: Int64) -> JobInfo.Builder!

  @JavaMethod
  open func setOverrideDeadline(_ arg0: Int64) -> JobInfo.Builder!

  @JavaMethod
  open func setBackoffCriteria(_ arg0: Int64, _ arg1: Int32) -> JobInfo.Builder!

  @JavaMethod
  open func setExpedited(_ arg0: Bool) -> JobInfo.Builder!

  @JavaMethod
  open func setImportantWhileForeground(_ arg0: Bool) -> JobInfo.Builder!

  @JavaMethod
  open func setPrefetch(_ arg0: Bool) -> JobInfo.Builder!

  @JavaMethod
  open func setPersisted(_ arg0: Bool) -> JobInfo.Builder!

  @JavaMethod
  open func setPriority(_ arg0: Int32) -> JobInfo.Builder!

  @JavaMethod
  open func build() -> JobInfo!
  }
}
