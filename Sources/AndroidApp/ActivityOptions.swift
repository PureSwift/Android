// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("android.app.ActivityOptions")
open class ActivityOptions: JavaObject {
  @JavaMethod
  open func getLockTaskMode() -> Bool

  @JavaMethod
  open func getSplashScreenStyle() -> Int32

  @JavaMethod
  open func setSplashScreenStyle(_ arg0: Int32) -> ActivityOptions!

  @JavaMethod
  open func setLockTaskEnabled(_ arg0: Bool) -> ActivityOptions!

  @JavaMethod
  open func getLaunchDisplayId() -> Int32

  @JavaMethod
  open func setLaunchDisplayId(_ arg0: Int32) -> ActivityOptions!

  @JavaMethod
  open func requestUsageTimeReport(_ arg0: PendingIntent?)

  @JavaMethod
  open func isPendingIntentBackgroundActivityLaunchAllowed() -> Bool

  @JavaMethod
  open func setPendingIntentBackgroundActivityLaunchAllowed(_ arg0: Bool)

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open func update(_ arg0: ActivityOptions?)
}
extension JavaClass<ActivityOptions> {
  @JavaStaticField(isFinal: true)
  public var EXTRA_USAGE_TIME_REPORT: String

  @JavaStaticField(isFinal: true)
  public var EXTRA_USAGE_TIME_REPORT_PACKAGES: String

  @JavaStaticMethod
  public func makeTaskLaunchBehind() -> ActivityOptions!

  @JavaStaticMethod
  public func makeBasic() -> ActivityOptions!

  @JavaStaticMethod
  public func makeLaunchIntoPip(_ arg0: PictureInPictureParams?) -> ActivityOptions!
}
