// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("android.app.slice.SliceItem")
open class SliceItem: JavaObject {
  @JavaMethod
  open func describeContents() -> Int32

  @JavaMethod
  open func getSubType() -> String

  @JavaMethod
  open func getAction() -> PendingIntent!

  @JavaMethod
  open func getSlice() -> Slice!

  @JavaMethod
  open func hasHint(_ arg0: String) -> Bool

  @JavaMethod
  open func getRemoteInput() -> RemoteInput!

  @JavaMethod
  open func getHints() -> List<JavaString>!

  @JavaMethod
  open func getInt() -> Int32

  @JavaMethod
  open func getLong() -> Int64

  @JavaMethod
  open func getText() -> CharSequence!

  @JavaMethod
  open func getFormat() -> String
}
extension JavaClass<SliceItem> {
  @JavaStaticField(isFinal: true)
  public var FORMAT_ACTION: String

  @JavaStaticField(isFinal: true)
  public var FORMAT_BUNDLE: String

  @JavaStaticField(isFinal: true)
  public var FORMAT_IMAGE: String

  @JavaStaticField(isFinal: true)
  public var FORMAT_INT: String

  @JavaStaticField(isFinal: true)
  public var FORMAT_LONG: String

  @JavaStaticField(isFinal: true)
  public var FORMAT_REMOTE_INPUT: String

  @JavaStaticField(isFinal: true)
  public var FORMAT_SLICE: String

  @JavaStaticField(isFinal: true)
  public var FORMAT_TEXT: String

  @JavaStaticField(isFinal: true)
  public var CONTENTS_FILE_DESCRIPTOR: Int32

  @JavaStaticField(isFinal: true)
  public var PARCELABLE_WRITE_RETURN_VALUE: Int32
}
