// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

extension ActivityManager {
  @JavaClass("android.app.ActivityManager$TaskDescription")
  open class TaskDescription: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: Int32, _ arg2: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: ActivityManager.TaskDescription?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func describeContents() -> Int32

  @JavaMethod
  open func getPrimaryColor() -> Int32

  @JavaMethod
  open func getBackgroundColor() -> Int32

  @JavaMethod
  open func getStatusBarColor() -> Int32

  @JavaMethod
  open func getNavigationBarColor() -> Int32

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open func getLabel() -> String
  }
}
extension JavaClass<ActivityManager.TaskDescription> {
  @JavaStaticField(isFinal: true)
  public var CONTENTS_FILE_DESCRIPTOR: Int32

  @JavaStaticField(isFinal: true)
  public var PARCELABLE_WRITE_RETURN_VALUE: Int32
}
