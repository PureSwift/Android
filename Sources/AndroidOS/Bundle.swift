// Auto-generated by Java-to-Swift wrapper generator.
import JavaIO
import JavaLang
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("android.os.Bundle", implements: Cloneable.self, Parcelable.self)
open class Bundle: BaseBundle {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaClassLoader?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Bundle?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: PersistableBundle?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func describeContents() -> Int32

  @JavaMethod
  open func writeToParcel(_ arg0: Parcel?, _ arg1: Int32)

  @JavaMethod
  open func setClassLoader(_ arg0: JavaClassLoader?)

  @JavaMethod
  open func deepCopy() -> Bundle!

  @JavaMethod
  open func hasFileDescriptors() -> Bool

  @JavaMethod
  open func putCharSequence(_ arg0: String, _ arg1: CharSequence?)

  @JavaMethod
  open func putParcelable(_ arg0: String, _ arg1: Parcelable?)

  @JavaMethod
  open func putParcelableArray(_ arg0: String, _ arg1: [Parcelable?])

  @JavaMethod
  open func putParcelableArrayList(_ arg0: String, _ arg1: ArrayList<Parcelable>?)

  @JavaMethod
  open func putIntegerArrayList(_ arg0: String, _ arg1: ArrayList<JavaInteger>?)

  @JavaMethod
  open func putStringArrayList(_ arg0: String, _ arg1: ArrayList<JavaString>?)

  @JavaMethod
  open func putCharSequenceArrayList(_ arg0: String, _ arg1: ArrayList<CharSequence>?)

  @JavaMethod
  open func putSerializable(_ arg0: String, _ arg1: Serializable?)

  @JavaMethod
  open func putByteArray(_ arg0: String, _ arg1: [Int8])

  @JavaMethod
  open func putShortArray(_ arg0: String, _ arg1: [Int16])

  @JavaMethod
  open func putCharArray(_ arg0: String, _ arg1: [UInt16])

  @JavaMethod
  open func putFloatArray(_ arg0: String, _ arg1: [Float])

  @JavaMethod
  open func putCharSequenceArray(_ arg0: String, _ arg1: [CharSequence?])

  @JavaMethod
  open func putBundle(_ arg0: String, _ arg1: Bundle?)

  @JavaMethod
  open func putBinder(_ arg0: String, _ arg1: IBinder?)

  @JavaMethod
  open func getCharSequence(_ arg0: String) -> CharSequence!

  @JavaMethod
  open func getCharSequence(_ arg0: String, _ arg1: CharSequence?) -> CharSequence!

  @JavaMethod
  open func getParcelable(_ arg0: String, _ arg1: JavaClass<JavaObject>?) -> JavaObject!

  @JavaMethod
  open func getParcelable(_ arg0: String) -> Parcelable!

  @JavaMethod
  open func getParcelableArray(_ arg0: String, _ arg1: JavaClass<JavaObject>?) -> [JavaObject?]

  @JavaMethod
  open func getParcelableArray(_ arg0: String) -> [Parcelable?]

  @JavaMethod
  open func getParcelableArrayList(_ arg0: String, _ arg1: JavaClass<JavaObject>?) -> ArrayList<JavaObject>!

  @JavaMethod
  open func getParcelableArrayList(_ arg0: String) -> ArrayList<Parcelable>!

  @JavaMethod
  open func getSerializable(_ arg0: String) -> Serializable!

  @JavaMethod
  open func getSerializable(_ arg0: String, _ arg1: JavaClass<Serializable>?) -> Serializable!

  @JavaMethod
  open func getIntegerArrayList(_ arg0: String) -> ArrayList<JavaInteger>!

  @JavaMethod
  open func getStringArrayList(_ arg0: String) -> ArrayList<JavaString>!

  @JavaMethod
  open func getCharSequenceArrayList(_ arg0: String) -> ArrayList<CharSequence>!

  @JavaMethod
  open func getByteArray(_ arg0: String) -> [Int8]

  @JavaMethod
  open func getShortArray(_ arg0: String) -> [Int16]

  @JavaMethod
  open func getCharArray(_ arg0: String) -> [UInt16]

  @JavaMethod
  open func getFloatArray(_ arg0: String) -> [Float]

  @JavaMethod
  open func getCharSequenceArray(_ arg0: String) -> [CharSequence?]

  @JavaMethod
  open func getBinder(_ arg0: String) -> IBinder!

  @JavaMethod
  open func readFromParcel(_ arg0: Parcel?)

  @JavaMethod
  open override func remove(_ arg0: String)

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func clone() -> JavaObject!

  @JavaMethod
  open func getByte(_ arg0: String, _ arg1: Int8) -> JavaByte!

  @JavaMethod
  open func getByte(_ arg0: String) -> Int8

  @JavaMethod
  open func putByte(_ arg0: String, _ arg1: Int8)

  @JavaMethod
  open func getShort(_ arg0: String, _ arg1: Int16) -> Int16

  @JavaMethod
  open func getShort(_ arg0: String) -> Int16

  @JavaMethod
  open func putShort(_ arg0: String, _ arg1: Int16)

  @JavaMethod
  open func getChar(_ arg0: String) -> UInt16

  @JavaMethod
  open func getChar(_ arg0: String, _ arg1: UInt16) -> UInt16

  @JavaMethod
  open func putChar(_ arg0: String, _ arg1: UInt16)

  @JavaMethod
  open func getFloat(_ arg0: String, _ arg1: Float) -> Float

  @JavaMethod
  open func getFloat(_ arg0: String) -> Float

  @JavaMethod
  open func putFloat(_ arg0: String, _ arg1: Float)

  @JavaMethod
  open override func clear()

  @JavaMethod
  open func getClassLoader() -> JavaClassLoader!

  @JavaMethod
  open func putAll(_ arg0: Bundle?)

  @JavaMethod
  open func getBundle(_ arg0: String) -> Bundle!
}
extension JavaClass<Bundle> {
  @JavaStaticField(isFinal: true)
  public var CREATOR: Parcelable.Creator<Bundle>!

  @JavaStaticField(isFinal: true)
  public var EMPTY: Bundle!

  @JavaStaticField(isFinal: true)
  public var CONTENTS_FILE_DESCRIPTOR: Int32

  @JavaStaticField(isFinal: true)
  public var PARCELABLE_WRITE_RETURN_VALUE: Int32
}
