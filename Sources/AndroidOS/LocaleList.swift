// Auto-generated by Java-to-Swift wrapper generator.
import JavaUtil
import JavaKit
import JavaRuntime

@JavaClass("android.os.LocaleList", implements: Parcelable.self)
open class LocaleList: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: [Locale?], environment: JNIEnvironment? = nil)

  @JavaMethod
  open func describeContents() -> Int32

  @JavaMethod
  open func writeToParcel(_ arg0: Parcel?, _ arg1: Int32)

  @JavaMethod
  open func toLanguageTags() -> String

  @JavaMethod
  open func getFirstMatch(_ arg0: [String]) -> Locale!

  @JavaMethod
  open func size() -> Int32

  @JavaMethod
  open func get(_ arg0: Int32) -> Locale!

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func indexOf(_ arg0: Locale?) -> Int32

  @JavaMethod
  open func isEmpty() -> Bool
}
extension JavaClass<LocaleList> {
  @JavaStaticField(isFinal: true)
  public var CREATOR: Parcelable.Creator<LocaleList>!

  @JavaStaticField(isFinal: true)
  public var CONTENTS_FILE_DESCRIPTOR: Int32

  @JavaStaticField(isFinal: true)
  public var PARCELABLE_WRITE_RETURN_VALUE: Int32

  @JavaStaticMethod
  public func getEmptyLocaleList() -> LocaleList!

  @JavaStaticMethod
  public func forLanguageTags(_ arg0: String) -> LocaleList!

  @JavaStaticMethod
  public func matchesLanguageAndScript(_ arg0: Locale?, _ arg1: Locale?) -> Bool

  @JavaStaticMethod
  public func getAdjustedDefault() -> LocaleList!

  @JavaStaticMethod
  public func getDefault() -> LocaleList!

  @JavaStaticMethod
  public func setDefault(_ arg0: LocaleList?)
}
