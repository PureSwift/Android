// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

extension VibrationEffect {
  @JavaClass("android.os.VibrationEffect$Composition")
  open class Composition: JavaObject {
  @JavaMethod
  open func addPrimitive(_ arg0: Int32, _ arg1: Float) -> VibrationEffect.Composition!

  @JavaMethod
  open func addPrimitive(_ arg0: Int32) -> VibrationEffect.Composition!

  @JavaMethod
  open func addPrimitive(_ arg0: Int32, _ arg1: Float, _ arg2: Int32) -> VibrationEffect.Composition!

  @JavaMethod
  open func compose() -> VibrationEffect!
  }
}
extension JavaClass<VibrationEffect.Composition> {
  @JavaStaticField(isFinal: true)
  public var PRIMITIVE_CLICK: Int32

  @JavaStaticField(isFinal: true)
  public var PRIMITIVE_LOW_TICK: Int32

  @JavaStaticField(isFinal: true)
  public var PRIMITIVE_QUICK_FALL: Int32

  @JavaStaticField(isFinal: true)
  public var PRIMITIVE_QUICK_RISE: Int32

  @JavaStaticField(isFinal: true)
  public var PRIMITIVE_SLOW_RISE: Int32

  @JavaStaticField(isFinal: true)
  public var PRIMITIVE_SPIN: Int32

  @JavaStaticField(isFinal: true)
  public var PRIMITIVE_THUD: Int32

  @JavaStaticField(isFinal: true)
  public var PRIMITIVE_TICK: Int32
}
