// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import AndroidJavaLang
import JavaKit
import JavaKitCollection
import JavaKitFunction
import JavaRuntime

@JavaClass("java.nio.file.Files")
open class Files: JavaObject {

}
extension JavaClass<Files> {
  @JavaStaticMethod
  public func size(_ arg0: Path?) throws -> Int64

  @JavaStaticMethod
  public func isHidden(_ arg0: Path?) throws -> Bool

  @JavaStaticMethod
  public func copy(_ arg0: Path?, _ arg1: OutputStream?) throws -> Int64

  @JavaStaticMethod
  public func copy(_ arg0: Path?, _ arg1: Path?, _ arg2: [CopyOption?]) throws -> Path!

  @JavaStaticMethod
  public func copy(_ arg0: InputStream?, _ arg1: Path?, _ arg2: [CopyOption?]) throws -> Int64

  @JavaStaticMethod
  public func mismatch(_ arg0: Path?, _ arg1: Path?) throws -> Int64

  @JavaStaticMethod
  public func readAllBytes(_ arg0: Path?) throws -> [Int8]

  @JavaStaticMethod
  public func write(_ arg0: Path?, _ arg1: Iterable<CharSequence>?, _ arg2: Charset?, _ arg3: [OpenOption?]) throws -> Path!

  @JavaStaticMethod
  public func write(_ arg0: Path?, _ arg1: Iterable<CharSequence>?, _ arg2: [OpenOption?]) throws -> Path!

  @JavaStaticMethod
  public func write(_ arg0: Path?, _ arg1: [Int8], _ arg2: [OpenOption?]) throws -> Path!

  @JavaStaticMethod
  public func delete(_ arg0: Path?) throws

  @JavaStaticMethod
  public func exists(_ arg0: Path?, _ arg1: [LinkOption?]) -> Bool

  @JavaStaticMethod
  public func isDirectory(_ arg0: Path?, _ arg1: [LinkOption?]) -> Bool

  @JavaStaticMethod
  public func getOwner(_ arg0: Path?, _ arg1: [LinkOption?]) throws -> UserPrincipal!

  @JavaStaticMethod
  public func isRegularFile(_ arg0: Path?, _ arg1: [LinkOption?]) -> Bool

  @JavaStaticMethod
  public func createDirectories(_ arg0: Path?, _ arg1: [FileAttribute<JavaObject>?]) throws -> Path!

  @JavaStaticMethod
  public func notExists(_ arg0: Path?, _ arg1: [LinkOption?]) -> Bool

  @JavaStaticMethod
  public func isWritable(_ arg0: Path?) -> Bool

  @JavaStaticMethod
  public func getLastModifiedTime(_ arg0: Path?, _ arg1: [LinkOption?]) throws -> FileTime!

  @JavaStaticMethod
  public func createDirectory(_ arg0: Path?, _ arg1: [FileAttribute<JavaObject>?]) throws -> Path!

  @JavaStaticMethod
  public func setLastModifiedTime(_ arg0: Path?, _ arg1: FileTime?) throws -> Path!

  @JavaStaticMethod
  public func createTempFile(_ arg0: String, _ arg1: String, _ arg2: [FileAttribute<JavaObject>?]) throws -> Path!

  @JavaStaticMethod
  public func createTempFile(_ arg0: Path?, _ arg1: String, _ arg2: String, _ arg3: [FileAttribute<JavaObject>?]) throws -> Path!

  @JavaStaticMethod
  public func readAttributes(_ arg0: Path?, _ arg1: JavaClass<BasicFileAttributes>?, _ arg2: [LinkOption?]) throws -> BasicFileAttributes!

  @JavaStaticMethod
  public func newInputStream(_ arg0: Path?, _ arg1: [OpenOption?]) throws -> InputStream!

  @JavaStaticMethod
  public func newOutputStream(_ arg0: Path?, _ arg1: [OpenOption?]) throws -> OutputStream!

  @JavaStaticMethod
  public func newByteChannel(_ arg0: Path?, _ arg1: [OpenOption?]) throws -> SeekableByteChannel!

  @JavaStaticMethod
  public func newByteChannel(_ arg0: Path?, _ arg1: JavaSet<OpenOption>?, _ arg2: [FileAttribute<JavaObject>?]) throws -> SeekableByteChannel!

  @JavaStaticMethod
  public func newDirectoryStream(_ arg0: Path?, _ arg1: String) throws -> DirectoryStream<Path>!

  @JavaStaticMethod
  public func newDirectoryStream(_ arg0: Path?, _ arg1: DirectoryStream.Filter<JavaObject>?) throws -> DirectoryStream<Path>!

  @JavaStaticMethod
  public func newDirectoryStream(_ arg0: Path?) throws -> DirectoryStream<Path>!

  @JavaStaticMethod
  public func createTempDirectory(_ arg0: Path?, _ arg1: String, _ arg2: [FileAttribute<JavaObject>?]) throws -> Path!

  @JavaStaticMethod
  public func createTempDirectory(_ arg0: String, _ arg1: [FileAttribute<JavaObject>?]) throws -> Path!

  @JavaStaticMethod
  public func createSymbolicLink(_ arg0: Path?, _ arg1: Path?, _ arg2: [FileAttribute<JavaObject>?]) throws -> Path!

  @JavaStaticMethod
  public func createLink(_ arg0: Path?, _ arg1: Path?) throws -> Path!

  @JavaStaticMethod
  public func deleteIfExists(_ arg0: Path?) throws -> Bool

  @JavaStaticMethod
  public func move(_ arg0: Path?, _ arg1: Path?, _ arg2: [CopyOption?]) throws -> Path!

  @JavaStaticMethod
  public func readSymbolicLink(_ arg0: Path?) throws -> Path!

  @JavaStaticMethod
  public func getFileStore(_ arg0: Path?) throws -> FileStore!

  @JavaStaticMethod
  public func isSameFile(_ arg0: Path?, _ arg1: Path?) throws -> Bool

  @JavaStaticMethod
  public func probeContentType(_ arg0: Path?) throws -> String

  @JavaStaticMethod
  public func getFileAttributeView(_ arg0: Path?, _ arg1: JavaClass<FileAttributeView>?, _ arg2: [LinkOption?]) -> FileAttributeView!

  @JavaStaticMethod
  public func setAttribute(_ arg0: Path?, _ arg1: String, _ arg2: JavaObject?, _ arg3: [LinkOption?]) throws -> Path!

  @JavaStaticMethod
  public func setOwner(_ arg0: Path?, _ arg1: UserPrincipal?) throws -> Path!

  @JavaStaticMethod
  public func isSymbolicLink(_ arg0: Path?) -> Bool

  @JavaStaticMethod
  public func isReadable(_ arg0: Path?) -> Bool

  @JavaStaticMethod
  public func isExecutable(_ arg0: Path?) -> Bool

  @JavaStaticMethod
  public func walkFileTree(_ arg0: Path?, _ arg1: JavaSet<FileVisitOption>?, _ arg2: Int32, _ arg3: FileVisitor<JavaObject>?) throws -> Path!

  @JavaStaticMethod
  public func walkFileTree(_ arg0: Path?, _ arg1: FileVisitor<JavaObject>?) throws -> Path!

  @JavaStaticMethod
  public func newBufferedReader(_ arg0: Path?, _ arg1: Charset?) throws -> BufferedReader!

  @JavaStaticMethod
  public func newBufferedReader(_ arg0: Path?) throws -> BufferedReader!

  @JavaStaticMethod
  public func newBufferedWriter(_ arg0: Path?, _ arg1: [OpenOption?]) throws -> BufferedWriter!

  @JavaStaticMethod
  public func newBufferedWriter(_ arg0: Path?, _ arg1: Charset?, _ arg2: [OpenOption?]) throws -> BufferedWriter!

  @JavaStaticMethod
  public func readString(_ arg0: Path?) throws -> String

  @JavaStaticMethod
  public func readString(_ arg0: Path?, _ arg1: Charset?) throws -> String

  @JavaStaticMethod
  public func readAllLines(_ arg0: Path?, _ arg1: Charset?) throws -> List<JavaString>!

  @JavaStaticMethod
  public func readAllLines(_ arg0: Path?) throws -> List<JavaString>!

  @JavaStaticMethod
  public func writeString(_ arg0: Path?, _ arg1: CharSequence?, _ arg2: Charset?, _ arg3: [OpenOption?]) throws -> Path!

  @JavaStaticMethod
  public func writeString(_ arg0: Path?, _ arg1: CharSequence?, _ arg2: [OpenOption?]) throws -> Path!

  @JavaStaticMethod
  public func createFile(_ arg0: Path?, _ arg1: [FileAttribute<JavaObject>?]) throws -> Path!

  @JavaStaticMethod
  public func getAttribute(_ arg0: Path?, _ arg1: String, _ arg2: [LinkOption?]) throws -> JavaObject!

  @JavaStaticMethod
  public func getPosixFilePermissions(_ arg0: Path?, _ arg1: [LinkOption?]) throws -> JavaSet<PosixFilePermission>!

  @JavaStaticMethod
  public func setPosixFilePermissions(_ arg0: Path?, _ arg1: JavaSet<PosixFilePermission>?) throws -> Path!
}
