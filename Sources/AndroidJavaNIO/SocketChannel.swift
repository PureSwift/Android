// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.nio.channels.SocketChannel", implements: ByteChannel.self, ScatteringByteChannel.self, GatheringByteChannel.self, NetworkChannel.self)
open class SocketChannel: AbstractSelectableChannel {
  @JavaMethod
  open override func validOps() -> Int32

  @JavaMethod
  open func isConnected() -> Bool

  @JavaMethod
  open func shutdownInput() throws -> SocketChannel!

  @JavaMethod
  open func shutdownOutput() throws -> SocketChannel!

  @JavaMethod
  open func isConnectionPending() -> Bool

  @JavaMethod
  open func finishConnect() throws -> Bool

  @JavaMethod
  open func write(_ arg0: ByteBuffer?) throws -> Int32

  @JavaMethod
  open func write(_ arg0: [ByteBuffer?], _ arg1: Int32, _ arg2: Int32) throws -> Int64

  @JavaMethod
  open func write(_ arg0: [ByteBuffer?]) throws -> Int64

  @JavaMethod
  open func read(_ arg0: [ByteBuffer?]) throws -> Int64

  @JavaMethod
  open func read(_ arg0: ByteBuffer?) throws -> Int32

  @JavaMethod
  open func read(_ arg0: [ByteBuffer?], _ arg1: Int32, _ arg2: Int32) throws -> Int64
}
extension JavaClass<SocketChannel> {
  @JavaStaticMethod
  public func open() throws -> SocketChannel!
}
