// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaLang
import JavaKit
import JavaRuntime

@JavaClass("java.nio.ShortBuffer", implements: Comparable.self)
open class ShortBuffer: Buffer {
  @JavaMethod
  open override func reset() -> ShortBuffer!

  @JavaMethod
  open func get() -> Int16

  @JavaMethod
  open func get(_ arg0: Int32, _ arg1: [Int16]) -> ShortBuffer!

  @JavaMethod
  open func get(_ arg0: Int32) -> Int16

  @JavaMethod
  open func get(_ arg0: [Int16], _ arg1: Int32, _ arg2: Int32) -> ShortBuffer!

  @JavaMethod
  open func get(_ arg0: [Int16]) -> ShortBuffer!

  @JavaMethod
  open func get(_ arg0: Int32, _ arg1: [Int16], _ arg2: Int32, _ arg3: Int32) -> ShortBuffer!

  @JavaMethod
  open func put(_ arg0: ShortBuffer?) -> ShortBuffer!

  @JavaMethod
  open func put(_ arg0: [Int16], _ arg1: Int32, _ arg2: Int32) -> ShortBuffer!

  @JavaMethod
  open func put(_ arg0: [Int16]) -> ShortBuffer!

  @JavaMethod
  open func put(_ arg0: Int32, _ arg1: ShortBuffer?, _ arg2: Int32, _ arg3: Int32) -> ShortBuffer!

  @JavaMethod
  open func put(_ arg0: Int32, _ arg1: [Int16]) -> ShortBuffer!

  @JavaMethod
  open func put(_ arg0: Int32, _ arg1: [Int16], _ arg2: Int32, _ arg3: Int32) -> ShortBuffer!

  @JavaMethod
  open func put(_ arg0: Int32, _ arg1: Int16) -> ShortBuffer!

  @JavaMethod
  open func put(_ arg0: Int16) -> ShortBuffer!

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func compareTo(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open func compareTo(_ arg0: ShortBuffer?) -> Int32

  @JavaMethod
  open override func clear() -> ShortBuffer!

  @JavaMethod
  open override func position(_ arg0: Int32) -> ShortBuffer!

  @JavaMethod
  open func mismatch(_ arg0: ShortBuffer?) -> Int32

  @JavaMethod
  open override func limit(_ arg0: Int32) -> ShortBuffer!

  @JavaMethod
  open override func isDirect() -> Bool

  @JavaMethod
  open override func hasArray() -> Bool

  @JavaMethod
  open func array() -> [Int16]

  @JavaMethod
  open override func arrayOffset() -> Int32

  @JavaMethod
  open override func mark() -> ShortBuffer!

  @JavaMethod
  open override func flip() -> ShortBuffer!

  @JavaMethod
  open override func rewind() -> ShortBuffer!

  @JavaMethod
  open override func slice() -> ShortBuffer!

  @JavaMethod
  open override func slice(_ arg0: Int32, _ arg1: Int32) -> ShortBuffer!

  @JavaMethod
  open override func duplicate() -> ShortBuffer!

  @JavaMethod
  open func asReadOnlyBuffer() -> ShortBuffer!

  @JavaMethod
  open func compact() -> ShortBuffer!

  @JavaMethod
  open func order() -> ByteOrder!
}
extension JavaClass<ShortBuffer> {
  @JavaStaticMethod
  public func wrap(_ arg0: [Int16]) -> ShortBuffer!

  @JavaStaticMethod
  public func wrap(_ arg0: [Int16], _ arg1: Int32, _ arg2: Int32) -> ShortBuffer!

  @JavaStaticMethod
  public func allocate(_ arg0: Int32) -> ShortBuffer!
}
