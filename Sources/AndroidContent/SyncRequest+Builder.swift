// Auto-generated by Java-to-Swift wrapper generator.
import AndroidOS
import JavaKit
import JavaRuntime

extension SyncRequest {
  @JavaClass("android.content.SyncRequest$Builder")
  open class Builder: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func setExtras(_ arg0: Bundle?) -> SyncRequest.Builder!

  @JavaMethod
  open func syncOnce() -> SyncRequest.Builder!

  @JavaMethod
  open func syncPeriodic(_ arg0: Int64, _ arg1: Int64) -> SyncRequest.Builder!

  @JavaMethod
  open func setDisallowMetered(_ arg0: Bool) -> SyncRequest.Builder!

  @JavaMethod
  open func setRequiresCharging(_ arg0: Bool) -> SyncRequest.Builder!

  @JavaMethod
  open func setNoRetry(_ arg0: Bool) -> SyncRequest.Builder!

  @JavaMethod
  open func setIgnoreSettings(_ arg0: Bool) -> SyncRequest.Builder!

  @JavaMethod
  open func setIgnoreBackoff(_ arg0: Bool) -> SyncRequest.Builder!

  @JavaMethod
  open func setManual(_ arg0: Bool) -> SyncRequest.Builder!

  @JavaMethod
  open func setExpedited(_ arg0: Bool) -> SyncRequest.Builder!

  @JavaMethod
  open func setScheduleAsExpeditedJob(_ arg0: Bool) -> SyncRequest.Builder!

  @JavaMethod
  open func build() -> SyncRequest!
  }
}
