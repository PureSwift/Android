// Auto-generated by Java-to-Swift wrapper generator.
import AndroidOS
import JavaKit
import JavaRuntime

@JavaClass("android.content.ClipData", implements: Parcelable.self)
open class ClipData: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: ClipDescription?, _ arg1: ClipData.Item?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: ClipData?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: CharSequence?, _ arg1: [String], _ arg2: ClipData.Item?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func describeContents() -> Int32

  @JavaMethod
  open func writeToParcel(_ arg0: Parcel?, _ arg1: Int32)

  @JavaMethod
  open func getDescription() -> ClipDescription!

  @JavaMethod
  open func addItem(_ arg0: ContentResolver?, _ arg1: ClipData.Item?)

  @JavaMethod
  open func addItem(_ arg0: ClipData.Item?)

  @JavaMethod
  open func getItemCount() -> Int32

  @JavaMethod
  open func getItemAt(_ arg0: Int32) -> ClipData.Item!

  @JavaMethod
  open override func toString() -> String
}
extension JavaClass<ClipData> {
  @JavaStaticField(isFinal: true)
  public var CREATOR: Parcelable.Creator<ClipData>!

  @JavaStaticField(isFinal: true)
  public var CONTENTS_FILE_DESCRIPTOR: Int32

  @JavaStaticField(isFinal: true)
  public var PARCELABLE_WRITE_RETURN_VALUE: Int32

  @JavaStaticMethod
  public func newPlainText(_ arg0: CharSequence?, _ arg1: CharSequence?) -> ClipData!

  @JavaStaticMethod
  public func newHtmlText(_ arg0: CharSequence?, _ arg1: CharSequence?, _ arg2: String) -> ClipData!

  @JavaStaticMethod
  public func newIntent(_ arg0: CharSequence?, _ arg1: Intent?) -> ClipData!
}
