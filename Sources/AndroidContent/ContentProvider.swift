// Auto-generated by Java-to-Swift wrapper generator.
import JavaIO
import AndroidOS
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("android.content.ContentProvider", implements: ComponentCallbacks2.self)
open class ContentProvider: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getReadPermission() -> String

  @JavaMethod
  open func getWritePermission() -> String

  @JavaMethod
  open func onConfigurationChanged(_ arg0: Configuration?)

  @JavaMethod
  open func onLowMemory()

  @JavaMethod
  open func applyBatch(_ arg0: String, _ arg1: ArrayList<ContentProviderOperation>?) throws -> [ContentProviderResult?]

  @JavaMethod
  open func applyBatch(_ arg0: ArrayList<ContentProviderOperation>?) throws -> [ContentProviderResult?]

  @JavaMethod
  open func onCreate() -> Bool

  @JavaMethod
  open func requireContext() -> Context!

  @JavaMethod
  open func getCallingPackage() -> String

  @JavaMethod
  open func getCallingAttributionSource() -> AttributionSource!

  @JavaMethod
  open func getCallingAttributionTag() -> String

  @JavaMethod
  open func getCallingPackageUnchecked() -> String

  @JavaMethod
  open func onCallingPackageChanged()

  @JavaMethod
  open func clearCallingIdentity() -> ContentProvider.CallingIdentity!

  @JavaMethod
  open func restoreCallingIdentity(_ arg0: ContentProvider.CallingIdentity?)

  @JavaMethod
  open func setReadPermission(_ arg0: String)

  @JavaMethod
  open func setWritePermission(_ arg0: String)

  @JavaMethod
  open func setPathPermissions(_ arg0: [PathPermission?])

  @JavaMethod
  open func getPathPermissions() -> [PathPermission?]

  @JavaMethod
  open func onTrimMemory(_ arg0: Int32)

  @JavaMethod
  open func isTemporary() -> Bool

  @JavaMethod
  open func attachInfo(_ arg0: Context?, _ arg1: ProviderInfo?)

  @JavaMethod
  open func shutdown()

  @JavaMethod
  open func dump(_ arg0: FileDescriptor?, _ arg1: PrintWriter?, _ arg2: [String])

  @JavaMethod
  open func call(_ arg0: String, _ arg1: String, _ arg2: Bundle?) -> Bundle!

  @JavaMethod
  open func call(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: Bundle?) -> Bundle!

  @JavaMethod
  open func getContext() -> Context!
}
extension JavaClass<ContentProvider> {
  @JavaStaticField(isFinal: true)
  public var TRIM_MEMORY_BACKGROUND: Int32

  @JavaStaticField(isFinal: true)
  public var TRIM_MEMORY_COMPLETE: Int32

  @JavaStaticField(isFinal: true)
  public var TRIM_MEMORY_MODERATE: Int32

  @JavaStaticField(isFinal: true)
  public var TRIM_MEMORY_RUNNING_CRITICAL: Int32

  @JavaStaticField(isFinal: true)
  public var TRIM_MEMORY_RUNNING_LOW: Int32

  @JavaStaticField(isFinal: true)
  public var TRIM_MEMORY_RUNNING_MODERATE: Int32

  @JavaStaticField(isFinal: true)
  public var TRIM_MEMORY_UI_HIDDEN: Int32
}
