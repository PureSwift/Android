// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import AndroidOS
import AndroidUtil
import JavaKit
import JavaRuntime

@JavaClass("android.content.res.Resources")
open class Resources: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: AssetManager?, _ arg1: DisplayMetrics?, _ arg2: Configuration?, environment: JNIEnvironment? = nil)

  /// Return a resource identifier for the given resource name. A fully qualified resource name is of the form "package:type/entry".
  /// The first two components (package and type) are optional if defType and defPackage, respectively, are specified here.
  @JavaMethod
  open func getIdentifier(_ name: String, _ defType: String, _ defPackage: String) -> Int32
  
  @JavaMethod
  open func getQuantityString(_ arg0: Int32, _ arg1: Int32, _ arg2: [JavaObject?]) throws -> String

  @JavaMethod
  open func getQuantityString(_ arg0: Int32, _ arg1: Int32) throws -> String

  @JavaMethod
  open func getIntArray(_ arg0: Int32) throws -> [Int32]

  @JavaMethod
  open func obtainTypedArray(_ arg0: Int32) throws -> TypedArray!

  @JavaMethod
  open func getQuantityText(_ arg0: Int32, _ arg1: Int32) throws -> CharSequence!

  @JavaMethod
  open func getLayout(_ arg0: Int32) throws -> XmlResourceParser!

  @JavaMethod
  open func getAnimation(_ arg0: Int32) throws -> XmlResourceParser!

  @JavaMethod
  open func getXml(_ arg0: Int32) throws -> XmlResourceParser!

  @JavaMethod
  open func openRawResource(_ arg0: Int32, _ arg1: TypedValue?) throws -> InputStream!

  @JavaMethod
  open func openRawResource(_ arg0: Int32) throws -> InputStream!

  @JavaMethod
  open func openRawResourceFd(_ arg0: Int32) throws -> AssetFileDescriptor!

  @JavaMethod
  open func getValueForDensity(_ arg0: Int32, _ arg1: Int32, _ arg2: TypedValue?, _ arg3: Bool) throws

  @JavaMethod
  open func newTheme() -> Resources.Theme!

  @JavaMethod
  open func obtainAttributes(_ arg0: AttributeSet?, _ arg1: [Int32]) -> TypedArray!

  @JavaMethod
  open func getDisplayMetrics() -> DisplayMetrics!

  @JavaMethod
  open func getConfiguration() -> Configuration!

  @JavaMethod
  open func getResourceName(_ arg0: Int32) throws -> String

  @JavaMethod
  open func getResourcePackageName(_ arg0: Int32) throws -> String

  @JavaMethod
  open func getResourceTypeName(_ arg0: Int32) throws -> String

  @JavaMethod
  open func getResourceEntryName(_ arg0: Int32) throws -> String

  @JavaMethod
  open func parseBundleExtras(_ arg0: XmlResourceParser?, _ arg1: Bundle?) throws

  @JavaMethod
  open func parseBundleExtra(_ arg0: String, _ arg1: AttributeSet?, _ arg2: Bundle?) throws

  @JavaMethod
  open func flushLayoutCache()

  @JavaMethod
  open func finishPreloading()

  @JavaMethod
  open func addLoaders(_ arg0: [ResourcesLoader?])

  @JavaMethod
  open func removeLoaders(_ arg0: [ResourcesLoader?])

  @JavaMethod
  open func getAssets() -> AssetManager!

  @JavaMethod
  open func getColor(_ arg0: Int32) throws -> Int32

  @JavaMethod
  open func getColor(_ arg0: Int32, _ arg1: Resources.Theme?) throws -> Int32

  @JavaMethod
  open func getColorStateList(_ arg0: Int32, _ arg1: Resources.Theme?) throws -> ColorStateList!

  @JavaMethod
  open func getColorStateList(_ arg0: Int32) throws -> ColorStateList!

  @JavaMethod
  open func getDimension(_ arg0: Int32) throws -> Float

  @JavaMethod
  open func getDimensionPixelOffset(_ arg0: Int32) throws -> Int32

  @JavaMethod
  open func getDimensionPixelSize(_ arg0: Int32) throws -> Int32

  @JavaMethod
  open func getFraction(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32) -> Float

  @JavaMethod
  open func getTextArray(_ arg0: Int32) throws -> [CharSequence?]

  @JavaMethod
  open func getBoolean(_ arg0: Int32) throws -> Bool

  @JavaMethod
  open func getFloat(_ arg0: Int32) -> Float

  @JavaMethod
  open func getValue(_ arg0: String, _ arg1: TypedValue?, _ arg2: Bool) throws

  @JavaMethod
  open func getValue(_ arg0: Int32, _ arg1: TypedValue?, _ arg2: Bool) throws

  @JavaMethod
  open func getInteger(_ arg0: Int32) throws -> Int32

  @JavaMethod
  open func getStringArray(_ arg0: Int32) throws -> [String]

  @JavaMethod
  open func getString(_ arg0: Int32) throws -> String

  @JavaMethod
  open func getString(_ arg0: Int32, _ arg1: [JavaObject?]) throws -> String

  @JavaMethod
  open func getText(_ arg0: Int32) throws -> CharSequence!

  @JavaMethod
  open func getText(_ arg0: Int32, _ arg1: CharSequence?) -> CharSequence!

  @JavaMethod
  open func updateConfiguration(_ arg0: Configuration?, _ arg1: DisplayMetrics?)
}
extension JavaClass<Resources> {
  @JavaStaticField(isFinal: true)
  public var ID_NULL: Int32

  @JavaStaticMethod
  public func getSystem() -> Resources!

  @JavaStaticMethod
  public func getAttributeSetSourceResId(_ arg0: AttributeSet?) -> Int32
}
