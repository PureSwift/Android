// Auto-generated by Java-to-Swift wrapper generator.
import AndroidOS
import JavaKit
import JavaRuntime

@JavaClass("android.content.pm.InstrumentationInfo", implements: Parcelable.self)
open class InstrumentationInfo: PackageItemInfo {
  @JavaField(isFinal: false)
  public var dataDir: String

  @JavaField(isFinal: false)
  public var functionalTest: Bool

  @JavaField(isFinal: false)
  public var handleProfiling: Bool

  @JavaField(isFinal: false)
  public var publicSourceDir: String

  @JavaField(isFinal: false)
  public var sourceDir: String

  @JavaField(isFinal: false)
  public var splitNames: [String]

  @JavaField(isFinal: false)
  public var splitPublicSourceDirs: [String]

  @JavaField(isFinal: false)
  public var splitSourceDirs: [String]

  @JavaField(isFinal: false)
  public var targetPackage: String

  @JavaField(isFinal: false)
  public var targetProcesses: String

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: InstrumentationInfo?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func describeContents() -> Int32

  @JavaMethod
  open override func writeToParcel(_ arg0: Parcel?, _ arg1: Int32)

  @JavaMethod
  open override func toString() -> String
}
extension JavaClass<InstrumentationInfo> {
  @JavaStaticField(isFinal: true)
  public var CREATOR: Parcelable.Creator<InstrumentationInfo>!

  @JavaStaticField(isFinal: true)
  public var CONTENTS_FILE_DESCRIPTOR: Int32

  @JavaStaticField(isFinal: true)
  public var PARCELABLE_WRITE_RETURN_VALUE: Int32
}
