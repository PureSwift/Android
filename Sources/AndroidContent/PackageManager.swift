// Auto-generated by Java-to-Swift wrapper generator.
import AndroidOS
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("android.content.pm.PackageManager")
open class PackageManager: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func resolveActivity(_ arg0: Intent?, _ arg1: PackageManager.ResolveInfoFlags?) -> ResolveInfo!

  @JavaMethod
  open func resolveActivity(_ arg0: Intent?, _ arg1: Int32) -> ResolveInfo!

  @JavaMethod
  open func getApplicationInfo(_ arg0: String, _ arg1: PackageManager.ApplicationInfoFlags?) throws -> ApplicationInfo!

  @JavaMethod
  open func getApplicationInfo(_ arg0: String, _ arg1: Int32) throws -> ApplicationInfo!

  @JavaMethod
  open func getXml(_ arg0: String, _ arg1: Int32, _ arg2: ApplicationInfo?) -> XmlResourceParser!

  @JavaMethod
  open func currentToCanonicalPackageNames(_ arg0: [String]) -> [String]

  @JavaMethod
  open func canonicalToCurrentPackageNames(_ arg0: [String]) -> [String]

  @JavaMethod
  open func getLaunchIntentForPackage(_ arg0: String) -> Intent!

  @JavaMethod
  open func getLeanbackLaunchIntentForPackage(_ arg0: String) -> Intent!

  @JavaMethod
  open func getLaunchIntentSenderForPackage(_ arg0: String) -> IntentSender!

  @JavaMethod
  open func getPackageGids(_ arg0: String, _ arg1: Int32) throws -> [Int32]

  @JavaMethod
  open func getPackageGids(_ arg0: String, _ arg1: PackageManager.PackageInfoFlags?) throws -> [Int32]

  @JavaMethod
  open func getPackageGids(_ arg0: String) throws -> [Int32]

  @JavaMethod
  open func getPackageUid(_ arg0: String, _ arg1: Int32) throws -> Int32

  @JavaMethod
  open func getPackageUid(_ arg0: String, _ arg1: PackageManager.PackageInfoFlags?) throws -> Int32

  @JavaMethod
  open func getPermissionInfo(_ arg0: String, _ arg1: Int32) throws -> PermissionInfo!

  @JavaMethod
  open func queryPermissionsByGroup(_ arg0: String, _ arg1: Int32) throws -> List<PermissionInfo>!

  @JavaMethod
  open func getPermissionGroupInfo(_ arg0: String, _ arg1: Int32) throws -> PermissionGroupInfo!

  @JavaMethod
  open func getAllPermissionGroups(_ arg0: Int32) -> List<PermissionGroupInfo>!

  @JavaMethod
  open func getTargetSdkVersion(_ arg0: String) throws -> Int32

  @JavaMethod
  open func getReceiverInfo(_ arg0: ComponentName?, _ arg1: Int32) throws -> ActivityInfo!

  @JavaMethod
  open func getReceiverInfo(_ arg0: ComponentName?, _ arg1: PackageManager.ComponentInfoFlags?) throws -> ActivityInfo!

  @JavaMethod
  open func getServiceInfo(_ arg0: ComponentName?, _ arg1: Int32) throws -> ServiceInfo!

  @JavaMethod
  open func getServiceInfo(_ arg0: ComponentName?, _ arg1: PackageManager.ComponentInfoFlags?) throws -> ServiceInfo!

  @JavaMethod
  open func getProviderInfo(_ arg0: ComponentName?, _ arg1: PackageManager.ComponentInfoFlags?) throws -> ProviderInfo!

  @JavaMethod
  open func getProviderInfo(_ arg0: ComponentName?, _ arg1: Int32) throws -> ProviderInfo!

  @JavaMethod
  open func getModuleInfo(_ arg0: String, _ arg1: Int32) throws -> ModuleInfo!

  @JavaMethod
  open func getInstalledModules(_ arg0: Int32) -> List<ModuleInfo>!

  @JavaMethod
  open func getInstalledPackages(_ arg0: Int32) -> List<PackageInfo>!

  @JavaMethod
  open func getInstalledPackages(_ arg0: PackageManager.PackageInfoFlags?) -> List<PackageInfo>!

  @JavaMethod
  open func getPackagesHoldingPermissions(_ arg0: [String], _ arg1: PackageManager.PackageInfoFlags?) -> List<PackageInfo>!

  @JavaMethod
  open func getPackagesHoldingPermissions(_ arg0: [String], _ arg1: Int32) -> List<PackageInfo>!

  @JavaMethod
  open func isPermissionRevokedByPolicy(_ arg0: String, _ arg1: String) -> Bool

  @JavaMethod
  open func addPermission(_ arg0: PermissionInfo?) -> Bool

  @JavaMethod
  open func addPermissionAsync(_ arg0: PermissionInfo?) -> Bool

  @JavaMethod
  open func removePermission(_ arg0: String)

  @JavaMethod
  open func getWhitelistedRestrictedPermissions(_ arg0: String, _ arg1: Int32) -> JavaSet<JavaString>!

  @JavaMethod
  open func addWhitelistedRestrictedPermission(_ arg0: String, _ arg1: String, _ arg2: Int32) -> Bool

  @JavaMethod
  open func removeWhitelistedRestrictedPermission(_ arg0: String, _ arg1: String, _ arg2: Int32) -> Bool

  @JavaMethod
  open func setAutoRevokeWhitelisted(_ arg0: String, _ arg1: Bool) -> Bool

  @JavaMethod
  open func isAutoRevokeWhitelisted(_ arg0: String) -> Bool

  @JavaMethod
  open func isAutoRevokeWhitelisted() -> Bool

  @JavaMethod
  open func getBackgroundPermissionOptionLabel() -> CharSequence!

  @JavaMethod
  open func checkSignatures(_ arg0: String, _ arg1: String) -> Int32

  @JavaMethod
  open func checkSignatures(_ arg0: Int32, _ arg1: Int32) -> Int32

  @JavaMethod
  open func getPackagesForUid(_ arg0: Int32) -> [String]

  @JavaMethod
  open func getNameForUid(_ arg0: Int32) -> String

  @JavaMethod
  open func getInstalledApplications(_ arg0: Int32) -> List<ApplicationInfo>!

  @JavaMethod
  open func getInstalledApplications(_ arg0: PackageManager.ApplicationInfoFlags?) -> List<ApplicationInfo>!

  @JavaMethod
  open func isInstantApp() -> Bool

  @JavaMethod
  open func isInstantApp(_ arg0: String) -> Bool

  @JavaMethod
  open func getInstantAppCookieMaxBytes() -> Int32

  @JavaMethod
  open func getInstantAppCookie() -> [Int8]

  @JavaMethod
  open func clearInstantAppCookie()

  @JavaMethod
  open func updateInstantAppCookie(_ arg0: [Int8])

  @JavaMethod
  open func getSystemSharedLibraryNames() -> [String]

  @JavaMethod
  open func getSharedLibraries(_ arg0: Int32) -> List<SharedLibraryInfo>!

  @JavaMethod
  open func getSharedLibraries(_ arg0: PackageManager.PackageInfoFlags?) -> List<SharedLibraryInfo>!

  @JavaMethod
  open func getChangedPackages(_ arg0: Int32) -> ChangedPackages!

  @JavaMethod
  open func getSystemAvailableFeatures() -> [FeatureInfo?]

  @JavaMethod
  open func hasSystemFeature(_ arg0: String, _ arg1: Int32) -> Bool

  @JavaMethod
  open func hasSystemFeature(_ arg0: String) -> Bool

  @JavaMethod
  open func queryIntentActivities(_ arg0: Intent?, _ arg1: Int32) -> List<ResolveInfo>!

  @JavaMethod
  open func queryIntentActivities(_ arg0: Intent?, _ arg1: PackageManager.ResolveInfoFlags?) -> List<ResolveInfo>!

  @JavaMethod
  open func queryIntentActivityOptions(_ arg0: ComponentName?, _ arg1: List<Intent>?, _ arg2: Intent?, _ arg3: PackageManager.ResolveInfoFlags?) -> List<ResolveInfo>!

  @JavaMethod
  open func queryIntentActivityOptions(_ arg0: ComponentName?, _ arg1: [Intent?], _ arg2: Intent?, _ arg3: Int32) -> List<ResolveInfo>!

  @JavaMethod
  open func queryBroadcastReceivers(_ arg0: Intent?, _ arg1: PackageManager.ResolveInfoFlags?) -> List<ResolveInfo>!

  @JavaMethod
  open func queryBroadcastReceivers(_ arg0: Intent?, _ arg1: Int32) -> List<ResolveInfo>!

  @JavaMethod
  open func resolveService(_ arg0: Intent?, _ arg1: Int32) -> ResolveInfo!

  @JavaMethod
  open func resolveService(_ arg0: Intent?, _ arg1: PackageManager.ResolveInfoFlags?) -> ResolveInfo!

  @JavaMethod
  open func queryIntentServices(_ arg0: Intent?, _ arg1: Int32) -> List<ResolveInfo>!

  @JavaMethod
  open func queryIntentServices(_ arg0: Intent?, _ arg1: PackageManager.ResolveInfoFlags?) -> List<ResolveInfo>!

  @JavaMethod
  open func queryIntentContentProviders(_ arg0: Intent?, _ arg1: PackageManager.ResolveInfoFlags?) -> List<ResolveInfo>!

  @JavaMethod
  open func queryIntentContentProviders(_ arg0: Intent?, _ arg1: Int32) -> List<ResolveInfo>!

  @JavaMethod
  open func resolveContentProvider(_ arg0: String, _ arg1: Int32) -> ProviderInfo!

  @JavaMethod
  open func resolveContentProvider(_ arg0: String, _ arg1: PackageManager.ComponentInfoFlags?) -> ProviderInfo!

  @JavaMethod
  open func queryContentProviders(_ arg0: String, _ arg1: Int32, _ arg2: PackageManager.ComponentInfoFlags?) -> List<ProviderInfo>!

  @JavaMethod
  open func queryContentProviders(_ arg0: String, _ arg1: Int32, _ arg2: Int32) -> List<ProviderInfo>!

  @JavaMethod
  open func getInstrumentationInfo(_ arg0: ComponentName?, _ arg1: Int32) throws -> InstrumentationInfo!

  @JavaMethod
  open func queryInstrumentation(_ arg0: String, _ arg1: Int32) -> List<InstrumentationInfo>!

  @JavaMethod
  open func getUserBadgedLabel(_ arg0: CharSequence?, _ arg1: UserHandle?) -> CharSequence!

  @JavaMethod
  open func getApplicationLabel(_ arg0: ApplicationInfo?) -> CharSequence!

  @JavaMethod
  open func getResourcesForActivity(_ arg0: ComponentName?) throws -> Resources!

  @JavaMethod
  open func getResourcesForApplication(_ arg0: String) throws -> Resources!

  @JavaMethod
  open func getResourcesForApplication(_ arg0: ApplicationInfo?) throws -> Resources!

  @JavaMethod
  open func getResourcesForApplication(_ arg0: ApplicationInfo?, _ arg1: Configuration?) throws -> Resources!

  @JavaMethod
  open func getPackageArchiveInfo(_ arg0: String, _ arg1: Int32) -> PackageInfo!

  @JavaMethod
  open func getPackageArchiveInfo(_ arg0: String, _ arg1: PackageManager.PackageInfoFlags?) -> PackageInfo!

  @JavaMethod
  open func verifyPendingInstall(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func extendVerificationTimeout(_ arg0: Int32, _ arg1: Int32, _ arg2: Int64)

  @JavaMethod
  open func setInstallerPackageName(_ arg0: String, _ arg1: String)

  @JavaMethod
  open func getInstallSourceInfo(_ arg0: String) throws -> InstallSourceInfo!

  @JavaMethod
  open func addPackageToPreferred(_ arg0: String)

  @JavaMethod
  open func removePackageFromPreferred(_ arg0: String)

  @JavaMethod
  open func getPreferredPackages(_ arg0: Int32) -> List<PackageInfo>!

  @JavaMethod
  open func addPreferredActivity(_ arg0: IntentFilter?, _ arg1: Int32, _ arg2: [ComponentName?], _ arg3: ComponentName?)

  @JavaMethod
  open func clearPackagePreferredActivities(_ arg0: String)

  @JavaMethod
  open func getPreferredActivities(_ arg0: List<IntentFilter>?, _ arg1: List<ComponentName>?, _ arg2: String) -> Int32

  @JavaMethod
  open func setComponentEnabledSetting(_ arg0: ComponentName?, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open func setComponentEnabledSettings(_ arg0: List<PackageManager.ComponentEnabledSetting>?)

  @JavaMethod
  open func getComponentEnabledSetting(_ arg0: ComponentName?) -> Int32

  @JavaMethod
  open func getSyntheticAppDetailsActivityEnabled(_ arg0: String) -> Bool

  @JavaMethod
  open func setApplicationEnabledSetting(_ arg0: String, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open func getApplicationEnabledSetting(_ arg0: String) -> Int32

  @JavaMethod
  open func isSafeMode() -> Bool

  @JavaMethod
  open func isPackageSuspended() -> Bool

  @JavaMethod
  open func isPackageSuspended(_ arg0: String) throws -> Bool

  @JavaMethod
  open func getSuspendedPackageAppExtras() -> Bundle!

  @JavaMethod
  open func setApplicationCategoryHint(_ arg0: String, _ arg1: Int32)

  @JavaMethod
  open func isDeviceUpgrading() -> Bool

  @JavaMethod
  open func getPackageInstaller() -> PackageInstaller!

  @JavaMethod
  open func canRequestPackageInstalls() -> Bool

  @JavaMethod
  open func hasSigningCertificate(_ arg0: String, _ arg1: [Int8], _ arg2: Int32) -> Bool

  @JavaMethod
  open func hasSigningCertificate(_ arg0: Int32, _ arg1: [Int8], _ arg2: Int32) -> Bool

  @JavaMethod
  open func setMimeGroup(_ arg0: String, _ arg1: JavaSet<JavaString>?)

  @JavaMethod
  open func getMimeGroup(_ arg0: String) -> JavaSet<JavaString>!

  @JavaMethod
  open func queryApplicationProperty(_ arg0: String) -> List<PackageManager.Property>!

  @JavaMethod
  open func queryActivityProperty(_ arg0: String) -> List<PackageManager.Property>!

  @JavaMethod
  open func queryProviderProperty(_ arg0: String) -> List<PackageManager.Property>!

  @JavaMethod
  open func queryReceiverProperty(_ arg0: String) -> List<PackageManager.Property>!

  @JavaMethod
  open func queryServiceProperty(_ arg0: String) -> List<PackageManager.Property>!

  @JavaMethod
  open func canPackageQuery(_ arg0: String, _ arg1: String) throws -> Bool

  @JavaMethod
  open func getInstallerPackageName(_ arg0: String) -> String

  @JavaMethod
  open func getActivityInfo(_ arg0: ComponentName?, _ arg1: PackageManager.ComponentInfoFlags?) throws -> ActivityInfo!

  @JavaMethod
  open func getActivityInfo(_ arg0: ComponentName?, _ arg1: Int32) throws -> ActivityInfo!

  @JavaMethod
  open func getProperty(_ arg0: String, _ arg1: ComponentName?) throws -> PackageManager.Property!

  @JavaMethod
  open func getProperty(_ arg0: String, _ arg1: String) throws -> PackageManager.Property!

  @JavaMethod
  open func getPackageInfo(_ arg0: String, _ arg1: PackageManager.PackageInfoFlags?) throws -> PackageInfo!

  @JavaMethod
  open func getPackageInfo(_ arg0: VersionedPackage?, _ arg1: Int32) throws -> PackageInfo!

  @JavaMethod
  open func getPackageInfo(_ arg0: String, _ arg1: Int32) throws -> PackageInfo!

  @JavaMethod
  open func getPackageInfo(_ arg0: VersionedPackage?, _ arg1: PackageManager.PackageInfoFlags?) throws -> PackageInfo!

  @JavaMethod
  open func checkPermission(_ arg0: String, _ arg1: String) -> Int32

  @JavaMethod
  open func getText(_ arg0: String, _ arg1: Int32, _ arg2: ApplicationInfo?) -> CharSequence!
}
extension JavaClass<PackageManager> {
  @JavaStaticField(isFinal: true)
  public var CERT_INPUT_RAW_X509: Int32

  @JavaStaticField(isFinal: true)
  public var CERT_INPUT_SHA256: Int32

  @JavaStaticField(isFinal: true)
  public var COMPONENT_ENABLED_STATE_DEFAULT: Int32

  @JavaStaticField(isFinal: true)
  public var COMPONENT_ENABLED_STATE_DISABLED: Int32

  @JavaStaticField(isFinal: true)
  public var COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED: Int32

  @JavaStaticField(isFinal: true)
  public var COMPONENT_ENABLED_STATE_DISABLED_USER: Int32

  @JavaStaticField(isFinal: true)
  public var COMPONENT_ENABLED_STATE_ENABLED: Int32

  @JavaStaticField(isFinal: true)
  public var DONT_KILL_APP: Int32

  @JavaStaticField(isFinal: true)
  public var EXTRA_VERIFICATION_ID: String

  @JavaStaticField(isFinal: true)
  public var EXTRA_VERIFICATION_RESULT: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_ACTIVITIES_ON_SECONDARY_DISPLAYS: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_APP_WIDGETS: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_AUDIO_LOW_LATENCY: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_AUDIO_OUTPUT: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_AUDIO_PRO: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_AUTOFILL: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_AUTOMOTIVE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_BACKUP: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_BLUETOOTH: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_BLUETOOTH_LE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_CAMERA: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_CAMERA_ANY: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_CAMERA_AR: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_CAMERA_AUTOFOCUS: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_CAMERA_CAPABILITY_MANUAL_POST_PROCESSING: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_CAMERA_CAPABILITY_MANUAL_SENSOR: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_CAMERA_CAPABILITY_RAW: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_CAMERA_CONCURRENT: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_CAMERA_EXTERNAL: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_CAMERA_FLASH: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_CAMERA_FRONT: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_CAMERA_LEVEL_FULL: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_CANT_SAVE_STATE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_COMPANION_DEVICE_SETUP: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_CONNECTION_SERVICE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_CONSUMER_IR: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_CONTROLS: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_DEVICE_ADMIN: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_EMBEDDED: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_ETHERNET: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_EXPANDED_PICTURE_IN_PICTURE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_FACE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_FAKETOUCH: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_FAKETOUCH_MULTITOUCH_DISTINCT: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_FAKETOUCH_MULTITOUCH_JAZZHAND: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_FINGERPRINT: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_FREEFORM_WINDOW_MANAGEMENT: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_GAMEPAD: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_HARDWARE_KEYSTORE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_HIFI_SENSORS: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_HOME_SCREEN: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_IDENTITY_CREDENTIAL_HARDWARE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_IDENTITY_CREDENTIAL_HARDWARE_DIRECT_ACCESS: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_INPUT_METHODS: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_IPSEC_TUNNELS: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_IRIS: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_KEYSTORE_APP_ATTEST_KEY: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_KEYSTORE_LIMITED_USE_KEY: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_KEYSTORE_SINGLE_USE_KEY: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_LEANBACK: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_LEANBACK_ONLY: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_LIVE_TV: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_LIVE_WALLPAPER: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_LOCATION: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_LOCATION_GPS: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_LOCATION_NETWORK: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_MANAGED_USERS: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_MICROPHONE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_MIDI: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_NFC: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_NFC_BEAM: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_NFC_HOST_CARD_EMULATION: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_NFC_HOST_CARD_EMULATION_NFCF: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_NFC_OFF_HOST_CARD_EMULATION_ESE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_NFC_OFF_HOST_CARD_EMULATION_UICC: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_OPENGLES_DEQP_LEVEL: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_OPENGLES_EXTENSION_PACK: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_PC: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_PICTURE_IN_PICTURE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_PRINTING: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_RAM_LOW: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_RAM_NORMAL: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SCREEN_LANDSCAPE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SCREEN_PORTRAIT: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SECURELY_REMOVES_USERS: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SECURE_LOCK_SCREEN: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SECURITY_MODEL_COMPATIBLE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_ACCELEROMETER: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_ACCELEROMETER_LIMITED_AXES: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_ACCELEROMETER_LIMITED_AXES_UNCALIBRATED: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_AMBIENT_TEMPERATURE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_BAROMETER: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_COMPASS: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_DYNAMIC_HEAD_TRACKER: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_GYROSCOPE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_GYROSCOPE_LIMITED_AXES: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_GYROSCOPE_LIMITED_AXES_UNCALIBRATED: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_HEADING: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_HEART_RATE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_HEART_RATE_ECG: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_HINGE_ANGLE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_LIGHT: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_PROXIMITY: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_RELATIVE_HUMIDITY: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_STEP_COUNTER: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SENSOR_STEP_DETECTOR: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SE_OMAPI_ESE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SE_OMAPI_SD: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SE_OMAPI_UICC: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SIP: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_SIP_VOIP: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_STRONGBOX_KEYSTORE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_TELECOM: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_TELEPHONY: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_TELEPHONY_CALLING: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_TELEPHONY_CDMA: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_TELEPHONY_DATA: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_TELEPHONY_EUICC: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_TELEPHONY_EUICC_MEP: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_TELEPHONY_GSM: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_TELEPHONY_IMS: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_TELEPHONY_MBMS: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_TELEPHONY_MESSAGING: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_TELEPHONY_RADIO_ACCESS: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_TELEPHONY_SUBSCRIPTION: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_TELEVISION: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_TOUCHSCREEN: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_TOUCHSCREEN_MULTITOUCH: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_TOUCHSCREEN_MULTITOUCH_DISTINCT: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_TOUCHSCREEN_MULTITOUCH_JAZZHAND: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_USB_ACCESSORY: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_USB_HOST: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_VERIFIED_BOOT: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_VR_HEADTRACKING: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_VR_MODE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_VR_MODE_HIGH_PERFORMANCE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_VULKAN_DEQP_LEVEL: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_VULKAN_HARDWARE_COMPUTE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_VULKAN_HARDWARE_LEVEL: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_VULKAN_HARDWARE_VERSION: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_WATCH: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_WEBVIEW: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_WIFI: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_WIFI_AWARE: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_WIFI_DIRECT: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_WIFI_PASSPOINT: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_WIFI_RTT: String

  @JavaStaticField(isFinal: true)
  public var FEATURE_WINDOW_MAGNIFICATION: String

  @JavaStaticField(isFinal: true)
  public var FLAG_PERMISSION_WHITELIST_INSTALLER: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_PERMISSION_WHITELIST_SYSTEM: Int32

  @JavaStaticField(isFinal: true)
  public var FLAG_PERMISSION_WHITELIST_UPGRADE: Int32

  @JavaStaticField(isFinal: true)
  public var GET_ACTIVITIES: Int32

  @JavaStaticField(isFinal: true)
  public var GET_ATTRIBUTIONS: Int32

  @JavaStaticField(isFinal: true)
  public var GET_CONFIGURATIONS: Int32

  @JavaStaticField(isFinal: true)
  public var GET_DISABLED_COMPONENTS: Int32

  @JavaStaticField(isFinal: true)
  public var GET_DISABLED_UNTIL_USED_COMPONENTS: Int32

  @JavaStaticField(isFinal: true)
  public var GET_GIDS: Int32

  @JavaStaticField(isFinal: true)
  public var GET_INSTRUMENTATION: Int32

  @JavaStaticField(isFinal: true)
  public var GET_INTENT_FILTERS: Int32

  @JavaStaticField(isFinal: true)
  public var GET_META_DATA: Int32

  @JavaStaticField(isFinal: true)
  public var GET_PERMISSIONS: Int32

  @JavaStaticField(isFinal: true)
  public var GET_PROVIDERS: Int32

  @JavaStaticField(isFinal: true)
  public var GET_RECEIVERS: Int32

  @JavaStaticField(isFinal: true)
  public var GET_RESOLVED_FILTER: Int32

  @JavaStaticField(isFinal: true)
  public var GET_SERVICES: Int32

  @JavaStaticField(isFinal: true)
  public var GET_SHARED_LIBRARY_FILES: Int32

  @JavaStaticField(isFinal: true)
  public var GET_SIGNATURES: Int32

  @JavaStaticField(isFinal: true)
  public var GET_SIGNING_CERTIFICATES: Int32

  @JavaStaticField(isFinal: true)
  public var GET_UNINSTALLED_PACKAGES: Int32

  @JavaStaticField(isFinal: true)
  public var GET_URI_PERMISSION_PATTERNS: Int32

  @JavaStaticField(isFinal: true)
  public var INSTALL_REASON_DEVICE_RESTORE: Int32

  @JavaStaticField(isFinal: true)
  public var INSTALL_REASON_DEVICE_SETUP: Int32

  @JavaStaticField(isFinal: true)
  public var INSTALL_REASON_POLICY: Int32

  @JavaStaticField(isFinal: true)
  public var INSTALL_REASON_UNKNOWN: Int32

  @JavaStaticField(isFinal: true)
  public var INSTALL_REASON_USER: Int32

  @JavaStaticField(isFinal: true)
  public var INSTALL_SCENARIO_BULK: Int32

  @JavaStaticField(isFinal: true)
  public var INSTALL_SCENARIO_BULK_SECONDARY: Int32

  @JavaStaticField(isFinal: true)
  public var INSTALL_SCENARIO_DEFAULT: Int32

  @JavaStaticField(isFinal: true)
  public var INSTALL_SCENARIO_FAST: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_ALL: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_APEX: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_DEFAULT_ONLY: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_DIRECT_BOOT_AUTO: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_DIRECT_BOOT_AWARE: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_DIRECT_BOOT_UNAWARE: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_DISABLED_COMPONENTS: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_DISABLED_UNTIL_USED_COMPONENTS: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_SYSTEM_ONLY: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_UNINSTALLED_PACKAGES: Int32

  @JavaStaticField(isFinal: true)
  public var MAXIMUM_VERIFICATION_TIMEOUT: Int64

  @JavaStaticField(isFinal: true)
  public var PERMISSION_DENIED: Int32

  @JavaStaticField(isFinal: true)
  public var PERMISSION_GRANTED: Int32

  @JavaStaticField(isFinal: true)
  public var PROPERTY_MEDIA_CAPABILITIES: String

  @JavaStaticField(isFinal: true)
  public var SIGNATURE_FIRST_NOT_SIGNED: Int32

  @JavaStaticField(isFinal: true)
  public var SIGNATURE_MATCH: Int32

  @JavaStaticField(isFinal: true)
  public var SIGNATURE_NEITHER_SIGNED: Int32

  @JavaStaticField(isFinal: true)
  public var SIGNATURE_NO_MATCH: Int32

  @JavaStaticField(isFinal: true)
  public var SIGNATURE_SECOND_NOT_SIGNED: Int32

  @JavaStaticField(isFinal: true)
  public var SIGNATURE_UNKNOWN_PACKAGE: Int32

  @JavaStaticField(isFinal: true)
  public var SYNCHRONOUS: Int32

  @JavaStaticField(isFinal: true)
  public var VERIFICATION_ALLOW: Int32

  @JavaStaticField(isFinal: true)
  public var VERIFICATION_REJECT: Int32

  @JavaStaticField(isFinal: true)
  public var VERSION_CODE_HIGHEST: Int32
}
