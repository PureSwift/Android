// Auto-generated by Java-to-Swift wrapper generator.
import AndroidOS
import JavaKit
import JavaRuntime

extension ContentProviderOperation {
  @JavaClass("android.content.ContentProviderOperation$Builder")
  open class Builder: JavaObject {
  @JavaMethod
  open func withValues(_ arg0: ContentValues?) -> ContentProviderOperation.Builder!

  @JavaMethod
  open func withValue(_ arg0: String, _ arg1: JavaObject?) -> ContentProviderOperation.Builder!

  @JavaMethod
  open func withValueBackReferences(_ arg0: ContentValues?) -> ContentProviderOperation.Builder!

  @JavaMethod
  open func withValueBackReference(_ arg0: String, _ arg1: Int32) -> ContentProviderOperation.Builder!

  @JavaMethod
  open func withValueBackReference(_ arg0: String, _ arg1: Int32, _ arg2: String) -> ContentProviderOperation.Builder!

  @JavaMethod
  open func withExtras(_ arg0: Bundle?) -> ContentProviderOperation.Builder!

  @JavaMethod
  open func withExtra(_ arg0: String, _ arg1: JavaObject?) -> ContentProviderOperation.Builder!

  @JavaMethod
  open func withSelection(_ arg0: String, _ arg1: [String]) -> ContentProviderOperation.Builder!

  @JavaMethod
  open func withExtraBackReference(_ arg0: String, _ arg1: Int32, _ arg2: String) -> ContentProviderOperation.Builder!

  @JavaMethod
  open func withExtraBackReference(_ arg0: String, _ arg1: Int32) -> ContentProviderOperation.Builder!

  @JavaMethod
  open func withSelectionBackReference(_ arg0: Int32, _ arg1: Int32) -> ContentProviderOperation.Builder!

  @JavaMethod
  open func withSelectionBackReference(_ arg0: Int32, _ arg1: Int32, _ arg2: String) -> ContentProviderOperation.Builder!

  @JavaMethod
  open func withExpectedCount(_ arg0: Int32) -> ContentProviderOperation.Builder!

  @JavaMethod
  open func withYieldAllowed(_ arg0: Bool) -> ContentProviderOperation.Builder!

  @JavaMethod
  open func withExceptionAllowed(_ arg0: Bool) -> ContentProviderOperation.Builder!

  @JavaMethod
  open func build() -> ContentProviderOperation!
  }
}
