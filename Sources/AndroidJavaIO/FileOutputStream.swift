// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.io.FileOutputStream")
open class FileOutputStream: OutputStream {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: FileDescriptor?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: File?, _ arg1: Bool, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: File?, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: Bool, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  open override func write(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32) throws

  @JavaMethod
  open override func write(_ arg0: Int32) throws

  @JavaMethod
  open override func write(_ arg0: [Int8]) throws

  @JavaMethod
  open override func close() throws

  @JavaMethod
  open func getFD() throws -> FileDescriptor!
}
