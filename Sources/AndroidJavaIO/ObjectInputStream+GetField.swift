// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

extension ObjectInputStream {
  @JavaClass("java.io.ObjectInputStream$GetField")
  open class GetField: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getObjectStreamClass() -> ObjectStreamClass!

  @JavaMethod
  open func get(_ arg0: String, _ arg1: Int64) throws -> Int64

  @JavaMethod
  open func get(_ arg0: String, _ arg1: Float) throws -> Float

  @JavaMethod
  open func get(_ arg0: String, _ arg1: Int32) throws -> Int32

  @JavaMethod
  open func get(_ arg0: String, _ arg1: Double) throws -> Double

  @JavaMethod
  open func get(_ arg0: String, _ arg1: JavaObject?) throws -> JavaObject!

  @JavaMethod
  open func get(_ arg0: String, _ arg1: Bool) throws -> Bool

  @JavaMethod
  open func get(_ arg0: String, _ arg1: Int8) throws -> Int8

  @JavaMethod
  open func get(_ arg0: String, _ arg1: UInt16) throws -> UInt16

  @JavaMethod
  open func get(_ arg0: String, _ arg1: Int16) throws -> Int16

  @JavaMethod
  open func defaulted(_ arg0: String) throws -> Bool
  }
}
