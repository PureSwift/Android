// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.io.ObjectInputStream", implements: ObjectInput.self, ObjectStreamConstants.self)
open class ObjectInputStream: InputStream {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: InputStream?, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  open func readStreamHeader() throws

  @JavaMethod
  open func readObjectOverride() throws -> JavaObject!

  @JavaMethod
  open func readUnshared() throws -> JavaObject!

  @JavaMethod
  open func resolveObject(_ arg0: JavaObject?) throws -> JavaObject!

  @JavaMethod
  open func resolveProxyClass(_ arg0: [String]) throws -> JavaClass<JavaObject>!

  @JavaMethod
  open func readClassDescriptor() throws -> ObjectStreamClass!

  @JavaMethod
  open func registerValidation(_ arg0: ObjectInputValidation?, _ arg1: Int32) throws

  @JavaMethod
  open func enableResolveObject(_ arg0: Bool) -> Bool

  @JavaMethod
  open func resolveClass(_ arg0: ObjectStreamClass?) throws -> JavaClass<JavaObject>!

  @JavaMethod
  open func defaultReadObject() throws

  @JavaMethod
  open func readObject() throws -> JavaObject!

  @JavaMethod
  open func readFields() throws -> ObjectInputStream.GetField!

  @JavaMethod
  open func readLine() throws -> String

  @JavaMethod
  open override func close() throws

  @JavaMethod
  open func readInt() throws -> Int32

  @JavaMethod
  open override func read(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32) throws -> Int32

  @JavaMethod
  open override func read() throws -> Int32

  @JavaMethod
  open override func available() throws -> Int32

  @JavaMethod
  open func readUTF() throws -> String

  @JavaMethod
  open func readLong() throws -> Int64

  @JavaMethod
  open func readByte() throws -> Int8

  @JavaMethod
  open func readShort() throws -> Int16

  @JavaMethod
  open func readUnsignedShort() throws -> Int32

  @JavaMethod
  open func readChar() throws -> UInt16

  @JavaMethod
  open func readFloat() throws -> Float

  @JavaMethod
  open func readDouble() throws -> Double

  @JavaMethod
  open func readFully(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32) throws

  @JavaMethod
  open func readFully(_ arg0: [Int8]) throws

  @JavaMethod
  open func skipBytes(_ arg0: Int32) throws -> Int32

  @JavaMethod
  open func readBoolean() throws -> Bool

  @JavaMethod
  open func readUnsignedByte() throws -> Int32
}
extension JavaClass<ObjectInputStream> {
  @JavaStaticField(isFinal: true)
  public var STREAM_MAGIC: Int16

  @JavaStaticField(isFinal: true)
  public var STREAM_VERSION: Int16

  @JavaStaticField(isFinal: true)
  public var TC_BASE: Int8

  @JavaStaticField(isFinal: true)
  public var TC_NULL: Int8

  @JavaStaticField(isFinal: true)
  public var TC_REFERENCE: Int8

  @JavaStaticField(isFinal: true)
  public var TC_CLASSDESC: Int8

  @JavaStaticField(isFinal: true)
  public var TC_OBJECT: Int8

  @JavaStaticField(isFinal: true)
  public var TC_STRING: Int8

  @JavaStaticField(isFinal: true)
  public var TC_ARRAY: Int8

  @JavaStaticField(isFinal: true)
  public var TC_CLASS: Int8

  @JavaStaticField(isFinal: true)
  public var TC_BLOCKDATA: Int8

  @JavaStaticField(isFinal: true)
  public var TC_ENDBLOCKDATA: Int8

  @JavaStaticField(isFinal: true)
  public var TC_RESET: Int8

  @JavaStaticField(isFinal: true)
  public var TC_BLOCKDATALONG: Int8

  @JavaStaticField(isFinal: true)
  public var TC_EXCEPTION: Int8

  @JavaStaticField(isFinal: true)
  public var TC_LONGSTRING: Int8

  @JavaStaticField(isFinal: true)
  public var TC_PROXYCLASSDESC: Int8

  @JavaStaticField(isFinal: true)
  public var TC_ENUM: Int8

  @JavaStaticField(isFinal: true)
  public var TC_MAX: Int8

  @JavaStaticField(isFinal: true)
  public var baseWireHandle: Int32

  @JavaStaticField(isFinal: true)
  public var SC_WRITE_METHOD: Int8

  @JavaStaticField(isFinal: true)
  public var SC_BLOCK_DATA: Int8

  @JavaStaticField(isFinal: true)
  public var SC_SERIALIZABLE: Int8

  @JavaStaticField(isFinal: true)
  public var SC_EXTERNALIZABLE: Int8

  @JavaStaticField(isFinal: true)
  public var SC_ENUM: Int8

  @JavaStaticField(isFinal: true)
  public var SUBSTITUTION_PERMISSION: SerializablePermission!

  @JavaStaticField(isFinal: true)
  public var SUBCLASS_IMPLEMENTATION_PERMISSION: SerializablePermission!

  @JavaStaticField(isFinal: true)
  public var SERIAL_FILTER_PERMISSION: SerializablePermission!

  @JavaStaticField(isFinal: true)
  public var PROTOCOL_VERSION_1: Int32

  @JavaStaticField(isFinal: true)
  public var PROTOCOL_VERSION_2: Int32
}
