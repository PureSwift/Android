// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.io.FileInputStream")
open class FileInputStream: InputStream {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: FileDescriptor?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: File?, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  open override func readAllBytes() throws -> [Int8]

  @JavaMethod
  open override func close() throws

  @JavaMethod
  open override func read(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32) throws -> Int32

  @JavaMethod
  open override func read(_ arg0: [Int8]) throws -> Int32

  @JavaMethod
  open override func read() throws -> Int32

  @JavaMethod
  open override func readNBytes(_ arg0: Int32) throws -> [Int8]

  @JavaMethod
  open override func transferTo(_ arg0: OutputStream?) throws -> Int64

  @JavaMethod
  open override func skip(_ arg0: Int64) throws -> Int64

  @JavaMethod
  open override func available() throws -> Int32

  @JavaMethod
  open func getFD() throws -> FileDescriptor!
}
