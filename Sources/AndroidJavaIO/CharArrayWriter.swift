// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.io.CharArrayWriter")
open class CharArrayWriter: Writer {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func size() -> Int32

  @JavaMethod
  open func reset()

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func append(_ arg0: CharSequence?) throws -> Appendable!

  @JavaMethod
  open override func append(_ arg0: UInt16) -> CharArrayWriter!

  @JavaMethod
  open override func append(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32) throws -> Appendable!

  @JavaMethod
  open override func append(_ arg0: UInt16) throws -> Appendable!

  @JavaMethod
  open override func append(_ arg0: CharSequence?) -> CharArrayWriter!

  @JavaMethod
  open override func append(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32) -> CharArrayWriter!

  @JavaMethod
  open override func flush()

  @JavaMethod
  open func toCharArray() -> [UInt16]

  @JavaMethod
  open override func write(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open override func write(_ arg0: String, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open override func write(_ arg0: Int32)

  @JavaMethod
  open override func close()

  @JavaMethod
  open func writeTo(_ arg0: Writer?) throws
}
