// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.io.DataOutputStream", implements: DataOutput.self)
open class DataOutputStream: FilterOutputStream {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: OutputStream?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func size() -> Int32

  @JavaMethod
  open override func flush() throws

  @JavaMethod
  open override func write(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32) throws

  @JavaMethod
  open override func write(_ arg0: Int32) throws

  @JavaMethod
  open func writeInt(_ arg0: Int32) throws

  @JavaMethod
  open func writeUTF(_ arg0: String) throws

  @JavaMethod
  open func writeLong(_ arg0: Int64) throws

  @JavaMethod
  open func writeByte(_ arg0: Int32) throws

  @JavaMethod
  open func writeShort(_ arg0: Int32) throws

  @JavaMethod
  open func writeBytes(_ arg0: String) throws

  @JavaMethod
  open func writeChar(_ arg0: Int32) throws

  @JavaMethod
  open func writeFloat(_ arg0: Float) throws

  @JavaMethod
  open func writeDouble(_ arg0: Double) throws

  @JavaMethod
  open func writeBoolean(_ arg0: Bool) throws

  @JavaMethod
  open func writeChars(_ arg0: String) throws
}
