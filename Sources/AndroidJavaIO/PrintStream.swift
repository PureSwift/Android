// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitIO
import JavaRuntime

@JavaClass("java.io.PrintStream", implements: Appendable.self, Closeable.self)
open class PrintStream: FilterOutputStream {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: OutputStream?, _ arg1: Bool, _ arg2: Charset?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: OutputStream?, _ arg1: Bool, _ arg2: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: Charset?, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: File?, _ arg1: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: File?, _ arg1: Charset?, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: File?, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: OutputStream?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: OutputStream?, _ arg1: Bool, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func println(_ arg0: String)

  @JavaMethod
  open func println(_ arg0: JavaObject?)

  @JavaMethod
  open func println(_ arg0: Float)

  @JavaMethod
  open func println(_ arg0: Double)

  @JavaMethod
  open func println(_ arg0: [UInt16])

  @JavaMethod
  open func println(_ arg0: Bool)

  @JavaMethod
  open func println()

  @JavaMethod
  open func println(_ arg0: UInt16)

  @JavaMethod
  open func println(_ arg0: Int32)

  @JavaMethod
  open func println(_ arg0: Int64)

  @JavaMethod
  open func append(_ arg0: CharSequence?) throws -> Appendable!

  @JavaMethod
  open func append(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32) throws -> Appendable!

  @JavaMethod
  open func append(_ arg0: UInt16) throws -> Appendable!

  @JavaMethod
  open func append(_ arg0: CharSequence?) -> PrintStream!

  @JavaMethod
  open func append(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32) -> PrintStream!

  @JavaMethod
  open func append(_ arg0: UInt16) -> PrintStream!

  @JavaMethod
  open override func flush()

  @JavaMethod
  open func format(_ arg0: String, _ arg1: [JavaObject?]) -> PrintStream!

  @JavaMethod
  open func charset() -> Charset!

  @JavaMethod
  open func print(_ arg0: JavaObject?)

  @JavaMethod
  open func print(_ arg0: String)

  @JavaMethod
  open func print(_ arg0: [UInt16])

  @JavaMethod
  open func print(_ arg0: Bool)

  @JavaMethod
  open func print(_ arg0: UInt16)

  @JavaMethod
  open func print(_ arg0: Int32)

  @JavaMethod
  open func print(_ arg0: Double)

  @JavaMethod
  open func print(_ arg0: Float)

  @JavaMethod
  open func print(_ arg0: Int64)

  @JavaMethod
  open override func write(_ arg0: Int32)

  @JavaMethod
  open override func write(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open override func write(_ arg0: [Int8]) throws

  @JavaMethod
  open override func close()

  @JavaMethod
  open func printf(_ arg0: String, _ arg1: [JavaObject?]) -> PrintStream!

  @JavaMethod
  open func writeBytes(_ arg0: [Int8])

  @JavaMethod
  open func checkError() -> Bool

  @JavaMethod
  open func setError()

  @JavaMethod
  open func clearError()
}
