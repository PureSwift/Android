// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitIO
import JavaRuntime

@JavaClass("java.io.OutputStreamWriter")
open class OutputStreamWriter: Writer {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: OutputStream?, _ arg1: Charset?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: OutputStream?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: OutputStream?, _ arg1: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  open override func append(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32) throws -> Writer!

  @JavaMethod
  open override func append(_ arg0: CharSequence?) throws -> Appendable!

  @JavaMethod
  open override func append(_ arg0: CharSequence?) throws -> Writer!

  @JavaMethod
  open override func append(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32) throws -> Appendable!

  @JavaMethod
  open override func flush() throws

  @JavaMethod
  open override func write(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32) throws

  @JavaMethod
  open override func write(_ arg0: String, _ arg1: Int32, _ arg2: Int32) throws

  @JavaMethod
  open override func write(_ arg0: Int32) throws

  @JavaMethod
  open override func close() throws

  @JavaMethod
  open func getEncoding() -> String
}
