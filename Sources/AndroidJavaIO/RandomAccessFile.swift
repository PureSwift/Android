// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.io.RandomAccessFile", implements: DataOutput.self, DataInput.self, Closeable.self)
open class RandomAccessFile: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: File?, _ arg1: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  open func length() throws -> Int64

  @JavaMethod
  open func readLine() throws -> String

  @JavaMethod
  open func setLength(_ arg0: Int64) throws

  @JavaMethod
  open func write(_ arg0: [Int8]) throws

  @JavaMethod
  open func write(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32) throws

  @JavaMethod
  open func write(_ arg0: Int32) throws

  @JavaMethod
  open func close() throws

  @JavaMethod
  open func writeInt(_ arg0: Int32) throws

  @JavaMethod
  open func readInt() throws -> Int32

  @JavaMethod
  open func read(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32) throws -> Int32

  @JavaMethod
  open func read(_ arg0: [Int8]) throws -> Int32

  @JavaMethod
  open func read() throws -> Int32

  @JavaMethod
  open func writeUTF(_ arg0: String) throws

  @JavaMethod
  open func readUTF() throws -> String

  @JavaMethod
  open func readLong() throws -> Int64

  @JavaMethod
  open func readByte() throws -> Int8

  @JavaMethod
  open func readShort() throws -> Int16

  @JavaMethod
  open func writeLong(_ arg0: Int64) throws

  @JavaMethod
  open func writeByte(_ arg0: Int32) throws

  @JavaMethod
  open func writeShort(_ arg0: Int32) throws

  @JavaMethod
  open func getFD() throws -> FileDescriptor!

  @JavaMethod
  open func writeBytes(_ arg0: String) throws

  @JavaMethod
  open func readUnsignedShort() throws -> Int32

  @JavaMethod
  open func writeChar(_ arg0: Int32) throws

  @JavaMethod
  open func readChar() throws -> UInt16

  @JavaMethod
  open func writeFloat(_ arg0: Float) throws

  @JavaMethod
  open func readFloat() throws -> Float

  @JavaMethod
  open func writeDouble(_ arg0: Double) throws

  @JavaMethod
  open func readDouble() throws -> Double

  @JavaMethod
  open func readFully(_ arg0: [Int8]) throws

  @JavaMethod
  open func readFully(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32) throws

  @JavaMethod
  open func skipBytes(_ arg0: Int32) throws -> Int32

  @JavaMethod
  open func readBoolean() throws -> Bool

  @JavaMethod
  open func readUnsignedByte() throws -> Int32

  @JavaMethod
  open func writeBoolean(_ arg0: Bool) throws

  @JavaMethod
  open func writeChars(_ arg0: String) throws

  @JavaMethod
  open func getFilePointer() throws -> Int64

  @JavaMethod
  open func seek(_ arg0: Int64) throws
}
