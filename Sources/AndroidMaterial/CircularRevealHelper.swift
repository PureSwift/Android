// Auto-generated by Java-to-Swift wrapper generator.
import AndroidGraphics
import JavaKit
import JavaRuntime

@JavaClass("com.google.android.material.circularreveal.CircularRevealHelper")
open class CircularRevealHelper: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: CircularRevealHelper.Delegate?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func buildCircularRevealCache()

  @JavaMethod
  open func setRevealInfo(_ arg0: CircularRevealWidget.RevealInfo?)

  @JavaMethod
  open func destroyCircularRevealCache()

  @JavaMethod
  open func getRevealInfo() -> CircularRevealWidget.RevealInfo!

  @JavaMethod
  open func setCircularRevealScrimColor(_ arg0: Int32)

  @JavaMethod
  open func getCircularRevealScrimColor() -> Int32

  @JavaMethod
  open func getCircularRevealOverlayDrawable() -> Drawable!

  @JavaMethod
  open func setCircularRevealOverlayDrawable(_ arg0: Drawable?)

  @JavaMethod
  open func draw(_ arg0: Canvas?)

  @JavaMethod
  open func isOpaque() -> Bool
}
extension JavaClass<CircularRevealHelper> {
  @JavaStaticField(isFinal: true)
  public var BITMAP_SHADER: Int32

  @JavaStaticField(isFinal: true)
  public var CLIP_PATH: Int32

  @JavaStaticField(isFinal: true)
  public var REVEAL_ANIMATOR: Int32

  @JavaStaticField(isFinal: true)
  public var STRATEGY: Int32
}
