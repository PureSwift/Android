// Auto-generated by Java-to-Swift wrapper generator.
import AndroidContent
import AndroidGraphics
import AndroidOS
import JavaKit
import JavaRuntime

@JavaClass("com.google.android.material.datepicker.DayViewDecorator", implements: Parcelable.self)
open class DayViewDecorator: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getBackgroundColor(_ arg0: Context?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Bool, _ arg5: Bool) -> ColorStateList!

  @JavaMethod
  open func getCompoundDrawableLeft(_ arg0: Context?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Bool, _ arg5: Bool) -> Drawable!

  @JavaMethod
  open func getCompoundDrawableTop(_ arg0: Context?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Bool, _ arg5: Bool) -> Drawable!

  @JavaMethod
  open func getCompoundDrawableRight(_ arg0: Context?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Bool, _ arg5: Bool) -> Drawable!

  @JavaMethod
  open func getCompoundDrawableBottom(_ arg0: Context?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Bool, _ arg5: Bool) -> Drawable!

  @JavaMethod
  open func getTextColor(_ arg0: Context?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Bool, _ arg5: Bool) -> ColorStateList!

  @JavaMethod
  open func getContentDescription(_ arg0: Context?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Bool, _ arg5: Bool, _ arg6: CharSequence?) -> CharSequence!

  @JavaMethod
  open func initialize(_ arg0: Context?)
}
extension JavaClass<DayViewDecorator> {
  @JavaStaticField(isFinal: true)
  public var CONTENTS_FILE_DESCRIPTOR: Int32

  @JavaStaticField(isFinal: true)
  public var PARCELABLE_WRITE_RETURN_VALUE: Int32
}
