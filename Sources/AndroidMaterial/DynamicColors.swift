// Auto-generated by Java-to-Swift wrapper generator.
import AndroidApp
import AndroidContent
import JavaKit
import JavaRuntime

@JavaClass("com.google.android.material.color.DynamicColors")
open class DynamicColors: JavaObject {

}
extension JavaClass<DynamicColors> {
  @JavaStaticMethod
  public func applyToActivitiesIfAvailable(_ arg0: Application?, _ arg1: DynamicColorsOptions?)

  @JavaStaticMethod
  public func applyToActivitiesIfAvailable(_ arg0: Application?, _ arg1: DynamicColors.Precondition?)

  @JavaStaticMethod
  public func applyToActivitiesIfAvailable(_ arg0: Application?, _ arg1: Int32)

  @JavaStaticMethod
  public func applyToActivitiesIfAvailable(_ arg0: Application?, _ arg1: Int32, _ arg2: DynamicColors.Precondition?)

  @JavaStaticMethod
  public func applyToActivitiesIfAvailable(_ arg0: Application?)

  @JavaStaticMethod
  public func applyIfAvailable(_ arg0: Activity?, _ arg1: Int32)

  @JavaStaticMethod
  public func applyIfAvailable(_ arg0: Activity?)

  @JavaStaticMethod
  public func applyIfAvailable(_ arg0: Activity?, _ arg1: DynamicColors.Precondition?)

  @JavaStaticMethod
  public func applyToActivityIfAvailable(_ arg0: Activity?, _ arg1: DynamicColorsOptions?)

  @JavaStaticMethod
  public func applyToActivityIfAvailable(_ arg0: Activity?)

  @JavaStaticMethod
  public func wrapContextIfAvailable(_ arg0: Context?, _ arg1: DynamicColorsOptions?) -> Context!

  @JavaStaticMethod
  public func wrapContextIfAvailable(_ arg0: Context?) -> Context!

  @JavaStaticMethod
  public func wrapContextIfAvailable(_ arg0: Context?, _ arg1: Int32) -> Context!

  @JavaStaticMethod
  public func isDynamicColorAvailable() -> Bool
}
