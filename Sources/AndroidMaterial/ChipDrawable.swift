// Auto-generated by Java-to-Swift wrapper generator.
import AndroidContent
import AndroidGraphics
import AndroidUtil
import JavaKit
import JavaKitReflection
import JavaLang
import JavaRuntime

@JavaClass("com.google.android.material.chip.ChipDrawable", implements: Drawable.Callback.self)
open class ChipDrawable: Drawable {
  @JavaMethod
  open func isCheckable() -> Bool

  @JavaMethod
  open func setCheckable(_ arg0: Bool)

  @JavaMethod
  open func setRippleColor(_ arg0: ColorStateList?)

  @JavaMethod
  open func setRippleColorResource(_ arg0: Int32)

  @JavaMethod
  open func getRippleColor() -> ColorStateList!

  @JavaMethod
  open func getCheckedIcon() -> Drawable!

  @JavaMethod
  open func setCheckedIconResource(_ arg0: Int32)

  @JavaMethod
  open func setCheckedIcon(_ arg0: Drawable?)

  @JavaMethod
  open func getCheckedIconTint() -> ColorStateList!

  @JavaMethod
  open func setCheckedIconTint(_ arg0: ColorStateList?)

  @JavaMethod
  open override func setColorFilter(_ arg0: ColorFilter?)

  @JavaMethod
  open override func setTintList(_ arg0: ColorStateList?)

  @JavaMethod
  open override func setTintMode(_ arg0: PorterDuff.Mode?)

  @JavaMethod
  open override func getIntrinsicWidth() -> Int32

  @JavaMethod
  open override func getIntrinsicHeight() -> Int32

  @JavaMethod
  open override func draw(_ arg0: Canvas?)

  @JavaMethod
  open override func isStateful() -> Bool

  @JavaMethod
  open override func setVisible(_ arg0: Bool, _ arg1: Bool) -> Bool

  @JavaMethod
  open func invalidateDrawable(_ arg0: Drawable?)

  @JavaMethod
  open override func getAlpha() -> Int32

  @JavaMethod
  open override func setAlpha(_ arg0: Int32)

  @JavaMethod
  open func scheduleDrawable(_ arg0: Drawable?, _ arg1: Runnable?, _ arg2: Int64)

  @JavaMethod
  open func unscheduleDrawable(_ arg0: Drawable?, _ arg1: Runnable?)

  @JavaMethod
  open func setText(_ arg0: CharSequence?)

  @JavaMethod
  open func setUseCompatRipple(_ arg0: Bool)

  @JavaMethod
  open func getUseCompatRipple() -> Bool

  @JavaMethod
  open func setDelegate(_ arg0: ChipDrawable.Delegate?)

  @JavaMethod
  open func onSizeChange()

  @JavaMethod
  open func getChipTouchBounds(_ arg0: RectF?)

  @JavaMethod
  open func getCloseIconTouchBounds(_ arg0: RectF?)

  @JavaMethod
  open func isCloseIconStateful() -> Bool

  @JavaMethod
  open func setCloseIconState(_ arg0: [Int32]) -> Bool

  @JavaMethod
  open func getCloseIconState() -> [Int32]

  @JavaMethod
  open func onTextSizeChange()

  @JavaMethod
  open override func onStateChange(_ arg0: [Int32]) -> Bool

  @JavaMethod
  open override func onLayoutDirectionChanged(_ arg0: Int32) -> Bool

  @JavaMethod
  open override func onLevelChange(_ arg0: Int32) -> Bool

  @JavaMethod
  open override func getColorFilter() -> ColorFilter!

  @JavaMethod
  open override func getOpacity() -> Int32

  @JavaMethod
  open override func getOutline(_ arg0: Outline?)

  @JavaMethod
  open func setTextSize(_ arg0: Float)

  @JavaMethod
  open func setTextColor(_ arg0: ColorStateList?)

  @JavaMethod
  open func setTextColor(_ arg0: Int32)

  @JavaMethod
  open func getChipBackgroundColor() -> ColorStateList!

  @JavaMethod
  open func setChipBackgroundColorResource(_ arg0: Int32)

  @JavaMethod
  open func setChipBackgroundColor(_ arg0: ColorStateList?)

  @JavaMethod
  open func getChipMinHeight() -> Float

  @JavaMethod
  open func setChipMinHeightResource(_ arg0: Int32)

  @JavaMethod
  open func setChipMinHeight(_ arg0: Float)

  @JavaMethod
  open func getChipCornerRadius() -> Float

  @JavaMethod
  open func setChipCornerRadiusResource(_ arg0: Int32)

  @JavaMethod
  open func setChipCornerRadius(_ arg0: Float)

  @JavaMethod
  open func getChipStrokeColor() -> ColorStateList!

  @JavaMethod
  open func setChipStrokeColorResource(_ arg0: Int32)

  @JavaMethod
  open func setChipStrokeColor(_ arg0: ColorStateList?)

  @JavaMethod
  open func getChipStrokeWidth() -> Float

  @JavaMethod
  open func setChipStrokeWidthResource(_ arg0: Int32)

  @JavaMethod
  open func setChipStrokeWidth(_ arg0: Float)

  @JavaMethod
  open func setTextResource(_ arg0: Int32)

  @JavaMethod
  open func setTextAppearanceResource(_ arg0: Int32)

  @JavaMethod
  open func isChipIconVisible() -> Bool

  @JavaMethod
  open func isChipIconEnabled() -> Bool

  @JavaMethod
  open func setChipIconVisible(_ arg0: Int32)

  @JavaMethod
  open func setChipIconVisible(_ arg0: Bool)

  @JavaMethod
  open func setChipIconEnabledResource(_ arg0: Int32)

  @JavaMethod
  open func setChipIconEnabled(_ arg0: Bool)

  @JavaMethod
  open func getChipIcon() -> Drawable!

  @JavaMethod
  open func setChipIconResource(_ arg0: Int32)

  @JavaMethod
  open func setChipIcon(_ arg0: Drawable?)

  @JavaMethod
  open func getChipIconTint() -> ColorStateList!

  @JavaMethod
  open func setChipIconTintResource(_ arg0: Int32)

  @JavaMethod
  open func setChipIconTint(_ arg0: ColorStateList?)

  @JavaMethod
  open func getChipIconSize() -> Float

  @JavaMethod
  open func setChipIconSizeResource(_ arg0: Int32)

  @JavaMethod
  open func setChipIconSize(_ arg0: Float)

  @JavaMethod
  open func isCloseIconVisible() -> Bool

  @JavaMethod
  open func isCloseIconEnabled() -> Bool

  @JavaMethod
  open func setCloseIconVisible(_ arg0: Int32)

  @JavaMethod
  open func setCloseIconVisible(_ arg0: Bool)

  @JavaMethod
  open func setCloseIconEnabledResource(_ arg0: Int32)

  @JavaMethod
  open func setCloseIconEnabled(_ arg0: Bool)

  @JavaMethod
  open func getCloseIcon() -> Drawable!

  @JavaMethod
  open func setCloseIconResource(_ arg0: Int32)

  @JavaMethod
  open func setCloseIcon(_ arg0: Drawable?)

  @JavaMethod
  open func getCloseIconTint() -> ColorStateList!

  @JavaMethod
  open func setCloseIconTintResource(_ arg0: Int32)

  @JavaMethod
  open func setCloseIconTint(_ arg0: ColorStateList?)

  @JavaMethod
  open func getCloseIconSize() -> Float

  @JavaMethod
  open func setCloseIconSizeResource(_ arg0: Int32)

  @JavaMethod
  open func setCloseIconSize(_ arg0: Float)

  @JavaMethod
  open func setCloseIconContentDescription(_ arg0: CharSequence?)

  @JavaMethod
  open func getCloseIconContentDescription() -> CharSequence!

  @JavaMethod
  open func setCheckableResource(_ arg0: Int32)

  @JavaMethod
  open func isCheckedIconVisible() -> Bool

  @JavaMethod
  open func isCheckedIconEnabled() -> Bool

  @JavaMethod
  open func setCheckedIconVisible(_ arg0: Bool)

  @JavaMethod
  open func setCheckedIconVisible(_ arg0: Int32)

  @JavaMethod
  open func setCheckedIconEnabledResource(_ arg0: Int32)

  @JavaMethod
  open func setCheckedIconEnabled(_ arg0: Bool)

  @JavaMethod
  open func setCheckedIconTintResource(_ arg0: Int32)

  @JavaMethod
  open func getShowMotionSpec() -> MotionSpec!

  @JavaMethod
  open func setShowMotionSpecResource(_ arg0: Int32)

  @JavaMethod
  open func setShowMotionSpec(_ arg0: MotionSpec?)

  @JavaMethod
  open func getHideMotionSpec() -> MotionSpec!

  @JavaMethod
  open func setHideMotionSpecResource(_ arg0: Int32)

  @JavaMethod
  open func setHideMotionSpec(_ arg0: MotionSpec?)

  @JavaMethod
  open func getChipStartPadding() -> Float

  @JavaMethod
  open func setChipStartPaddingResource(_ arg0: Int32)

  @JavaMethod
  open func setChipStartPadding(_ arg0: Float)

  @JavaMethod
  open func getIconStartPadding() -> Float

  @JavaMethod
  open func setIconStartPaddingResource(_ arg0: Int32)

  @JavaMethod
  open func setIconStartPadding(_ arg0: Float)

  @JavaMethod
  open func getIconEndPadding() -> Float

  @JavaMethod
  open func setIconEndPaddingResource(_ arg0: Int32)

  @JavaMethod
  open func setIconEndPadding(_ arg0: Float)

  @JavaMethod
  open func getTextStartPadding() -> Float

  @JavaMethod
  open func setTextStartPaddingResource(_ arg0: Int32)

  @JavaMethod
  open func setTextStartPadding(_ arg0: Float)

  @JavaMethod
  open func getTextEndPadding() -> Float

  @JavaMethod
  open func setTextEndPaddingResource(_ arg0: Int32)

  @JavaMethod
  open func setTextEndPadding(_ arg0: Float)

  @JavaMethod
  open func getCloseIconStartPadding() -> Float

  @JavaMethod
  open func setCloseIconStartPaddingResource(_ arg0: Int32)

  @JavaMethod
  open func setCloseIconStartPadding(_ arg0: Float)

  @JavaMethod
  open func getCloseIconEndPadding() -> Float

  @JavaMethod
  open func setCloseIconEndPaddingResource(_ arg0: Int32)

  @JavaMethod
  open func setCloseIconEndPadding(_ arg0: Float)

  @JavaMethod
  open func getChipEndPadding() -> Float

  @JavaMethod
  open func setChipEndPaddingResource(_ arg0: Int32)

  @JavaMethod
  open func setChipEndPadding(_ arg0: Float)

  @JavaMethod
  open func getMaxWidth() -> Int32

  @JavaMethod
  open func setMaxWidth(_ arg0: Int32)

  @JavaMethod
  open func getText() -> CharSequence!
}
extension ChipDrawable {
  @JavaInterface("com.google.android.material.shape.MaterialShapeDrawable$CompatibilityShadowMode", extends: Annotation.self)
  public struct CompatibilityShadowMode {
  @JavaMethod
  public func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func toString() -> String

  @JavaMethod
  public func hashCode() -> Int32

  @JavaMethod
  public func annotationType() -> JavaClass<Annotation>!
  }
}
extension JavaClass<ChipDrawable> {
  @JavaStaticField(isFinal: true)
  public var SHADOW_COMPAT_MODE_DEFAULT: Int32

  @JavaStaticField(isFinal: true)
  public var SHADOW_COMPAT_MODE_NEVER: Int32

  @JavaStaticField(isFinal: true)
  public var SHADOW_COMPAT_MODE_ALWAYS: Int32

  @JavaStaticMethod
  public func createFromAttributes(_ arg0: Context?, _ arg1: AttributeSet?, _ arg2: Int32, _ arg3: Int32) -> ChipDrawable!

  @JavaStaticMethod
  public func createFromResource(_ arg0: Context?, _ arg1: Int32) -> ChipDrawable!
}
