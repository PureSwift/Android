// Auto-generated by Java-to-Swift wrapper generator.
import AndroidContent
import AndroidOS
import AndroidView
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("com.google.android.material.datepicker.SingleDateSelector", implements: DateSelector.self)
open class SingleDateSelector: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func setSelection(_ arg0: JavaObject?)

  @JavaMethod
  open func setSelection(_ arg0: JavaLong?)

  @JavaMethod
  open func getDefaultTitleResId() -> Int32

  @JavaMethod
  open func getSelectedDays() -> JavaCollection<JavaLong>!

  @JavaMethod
  open func select(_ arg0: Int64)

  @JavaMethod
  open func writeToParcel(_ arg0: Parcel?, _ arg1: Int32)

  @JavaMethod
  open func describeContents() -> Int32

  @JavaMethod
  open func getError() -> String

  @JavaMethod
  open func isSelectionComplete() -> Bool

  @JavaMethod
  open func getSelection() -> JavaLong!

  @JavaMethod
  open func onCreateTextInputView(_ arg0: LayoutInflater?, _ arg1: ViewGroup?, _ arg2: Bundle?, _ arg3: CalendarConstraints?, _ arg4: OnSelectionChangedListener?) -> View!

  @JavaMethod
  open func getDefaultThemeResId(_ arg0: Context?) -> Int32

  @JavaMethod
  open func getSelectionDisplayString(_ arg0: Context?) -> String

  @JavaMethod
  open func getSelectionContentDescription(_ arg0: Context?) -> String
}
extension JavaClass<SingleDateSelector> {
  @JavaStaticField(isFinal: true)
  public var CREATOR: Parcelable.Creator<SingleDateSelector>!

  @JavaStaticField(isFinal: true)
  public var CONTENTS_FILE_DESCRIPTOR: Int32

  @JavaStaticField(isFinal: true)
  public var PARCELABLE_WRITE_RETURN_VALUE: Int32
}
