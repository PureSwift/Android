// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaLang
import JavaRuntime

extension QuantizerWu {
  @JavaClass("com.google.android.material.color.utilities.QuantizerWu$Direction")
  open class Direction: Enum {
    public enum DirectionCases: Equatable {
      case RED
  case GREEN
  case BLUE
    }

    public var enumValue: DirectionCases! {
      let classObj = self.javaClass
      if self.equals(classObj.RED?.as(JavaObject.self)) {
        return DirectionCases.RED
  } else if self.equals(classObj.GREEN?.as(JavaObject.self)) {
        return DirectionCases.GREEN
  } else if self.equals(classObj.BLUE?.as(JavaObject.self)) {
        return DirectionCases.BLUE
  } else {
        return nil
      }
    }

  public convenience init(_ enumValue: DirectionCases, environment: JNIEnvironment? = nil) {
    let _environment = if let environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    let classObj = try! JavaClass<Direction>(environment: _environment)
    switch enumValue {
      case .RED:
        if let RED = classObj.RED {
          self.init(javaHolder: RED.javaHolder)
        } else {
          fatalError("Enum value RED was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .GREEN:
        if let GREEN = classObj.GREEN {
          self.init(javaHolder: GREEN.javaHolder)
        } else {
          fatalError("Enum value GREEN was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .BLUE:
        if let BLUE = classObj.BLUE {
          self.init(javaHolder: BLUE.javaHolder)
        } else {
          fatalError("Enum value BLUE was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
    }
  }
  }
}
extension JavaClass<QuantizerWu.Direction> {
  @JavaStaticField(isFinal: true)
  public var RED: QuantizerWu.Direction!

  @JavaStaticField(isFinal: true)
  public var GREEN: QuantizerWu.Direction!

  @JavaStaticField(isFinal: true)
  public var BLUE: QuantizerWu.Direction!

  @JavaStaticMethod
  public func values() -> [QuantizerWu.Direction?]

  @JavaStaticMethod
  public func valueOf(_ arg0: String) -> QuantizerWu.Direction!
}
