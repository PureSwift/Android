// Auto-generated by Java-to-Swift wrapper generator.
import AndroidContent
import AndroidUtil
import AndroidView
import AndroidWidget
import JavaKit
import JavaRuntime

extension CollapsingToolbarLayout {
  @JavaClass("com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams")
  open class LayoutParams: FrameLayout.LayoutParams {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Context?, _ arg1: AttributeSet?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: CollapsingToolbarLayout.LayoutParams?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, _ arg1: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: ViewGroup.LayoutParams?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: ViewGroup.MarginLayoutParams?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: FrameLayout.LayoutParams?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func setParallaxMultiplier(_ arg0: Float)

  @JavaMethod
  open func setCollapseMode(_ arg0: Int32)

  @JavaMethod
  open func getCollapseMode() -> Int32

  @JavaMethod
  open func getParallaxMultiplier() -> Float
  }
}
extension JavaClass<CollapsingToolbarLayout.LayoutParams> {
  @JavaStaticField(isFinal: true)
  public var COLLAPSE_MODE_OFF: Int32

  @JavaStaticField(isFinal: true)
  public var COLLAPSE_MODE_PIN: Int32

  @JavaStaticField(isFinal: true)
  public var COLLAPSE_MODE_PARALLAX: Int32

  @JavaStaticField(isFinal: true)
  public var UNSPECIFIED_GRAVITY: Int32

  @JavaStaticField(isFinal: true)
  public var FILL_PARENT: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_PARENT: Int32

  @JavaStaticField(isFinal: true)
  public var WRAP_CONTENT: Int32
}
