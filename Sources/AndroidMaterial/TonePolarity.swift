// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaLang
import JavaRuntime

@JavaClass("com.google.android.material.color.utilities.TonePolarity")
open class TonePolarity: Enum {
  public enum TonePolarityCases: Equatable {
    case DARKER
    case LIGHTER
    case NEARER
    case FARTHER
  }

  public var enumValue: TonePolarityCases! {
    let classObj = self.javaClass
    if self.equals(classObj.DARKER?.as(JavaObject.self)) {
      return TonePolarityCases.DARKER
    } else if self.equals(classObj.LIGHTER?.as(JavaObject.self)) {
      return TonePolarityCases.LIGHTER
    } else if self.equals(classObj.NEARER?.as(JavaObject.self)) {
      return TonePolarityCases.NEARER
    } else if self.equals(classObj.FARTHER?.as(JavaObject.self)) {
      return TonePolarityCases.FARTHER
    } else {
      return nil
    }
  }

  public convenience init(_ enumValue: TonePolarityCases, environment: JNIEnvironment? = nil) {
    let _environment = if let environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    let classObj = try! JavaClass<TonePolarity>(environment: _environment)
    switch enumValue {
      case .DARKER:
        if let DARKER = classObj.DARKER {
          self.init(javaHolder: DARKER.javaHolder)
        } else {
          fatalError("Enum value DARKER was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .LIGHTER:
        if let LIGHTER = classObj.LIGHTER {
          self.init(javaHolder: LIGHTER.javaHolder)
        } else {
          fatalError("Enum value LIGHTER was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .NEARER:
        if let NEARER = classObj.NEARER {
          self.init(javaHolder: NEARER.javaHolder)
        } else {
          fatalError("Enum value NEARER was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .FARTHER:
        if let FARTHER = classObj.FARTHER {
          self.init(javaHolder: FARTHER.javaHolder)
        } else {
          fatalError("Enum value FARTHER was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
    }
  }
}
extension TonePolarity {
  @JavaClass("java.lang.Enum$EnumDesc")
  open class EnumDesc<E: AnyJavaObject>: JavaObject {
  @JavaMethod
  open override func toString() -> String
  }
}
extension JavaClass<TonePolarity> {
  @JavaStaticField(isFinal: true)
  public var DARKER: TonePolarity!

  @JavaStaticField(isFinal: true)
  public var LIGHTER: TonePolarity!

  @JavaStaticField(isFinal: true)
  public var NEARER: TonePolarity!

  @JavaStaticField(isFinal: true)
  public var FARTHER: TonePolarity!

  @JavaStaticMethod
  public func values() -> [TonePolarity?]

  @JavaStaticMethod
  public func valueOf(_ arg0: String) -> TonePolarity!
}
