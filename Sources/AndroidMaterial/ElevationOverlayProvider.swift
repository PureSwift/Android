// Auto-generated by Java-to-Swift wrapper generator.
import AndroidContent
import AndroidView
import JavaKit
import JavaRuntime

@JavaClass("com.google.android.material.elevation.ElevationOverlayProvider")
open class ElevationOverlayProvider: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Context?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Bool, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Float, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func compositeOverlayWithThemeSurfaceColorIfNeeded(_ arg0: Float, _ arg1: View?) -> Int32

  @JavaMethod
  open func compositeOverlayWithThemeSurfaceColorIfNeeded(_ arg0: Float) -> Int32

  @JavaMethod
  open func compositeOverlayIfNeeded(_ arg0: Int32, _ arg1: Float) -> Int32

  @JavaMethod
  open func compositeOverlayIfNeeded(_ arg0: Int32, _ arg1: Float, _ arg2: View?) -> Int32

  @JavaMethod
  open func compositeOverlay(_ arg0: Int32, _ arg1: Float, _ arg2: View?) -> Int32

  @JavaMethod
  open func compositeOverlay(_ arg0: Int32, _ arg1: Float) -> Int32

  @JavaMethod
  open func calculateOverlayAlpha(_ arg0: Float) -> Int32

  @JavaMethod
  open func calculateOverlayAlphaFraction(_ arg0: Float) -> Float

  @JavaMethod
  open func isThemeElevationOverlayEnabled() -> Bool

  @JavaMethod
  open func getThemeElevationOverlayColor() -> Int32

  @JavaMethod
  open func getThemeSurfaceColor() -> Int32

  @JavaMethod
  open func getParentAbsoluteElevation(_ arg0: View?) -> Float
}
