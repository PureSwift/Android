// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("com.google.android.material.color.utilities.ColorUtils")
open class ColorUtils: JavaObject {

}
extension JavaClass<ColorUtils> {
  @JavaStaticMethod
  public func argbFromRgb(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32) -> Int32

  @JavaStaticMethod
  public func argbFromLinrgb(_ arg0: [Double]) -> Int32

  @JavaStaticMethod
  public func alphaFromArgb(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public func redFromArgb(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public func greenFromArgb(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public func blueFromArgb(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public func argbFromXyz(_ arg0: Double, _ arg1: Double, _ arg2: Double) -> Int32

  @JavaStaticMethod
  public func xyzFromArgb(_ arg0: Int32) -> [Double]

  @JavaStaticMethod
  public func argbFromLab(_ arg0: Double, _ arg1: Double, _ arg2: Double) -> Int32

  @JavaStaticMethod
  public func labFromArgb(_ arg0: Int32) -> [Double]

  @JavaStaticMethod
  public func argbFromLstar(_ arg0: Double) -> Int32

  @JavaStaticMethod
  public func lstarFromArgb(_ arg0: Int32) -> Double

  @JavaStaticMethod
  public func yFromLstar(_ arg0: Double) -> Double

  @JavaStaticMethod
  public func lstarFromY(_ arg0: Double) -> Double

  @JavaStaticMethod
  public func linearized(_ arg0: Int32) -> Double

  @JavaStaticMethod
  public func delinearized(_ arg0: Double) -> Int32

  @JavaStaticMethod
  public func whitePointD65() -> [Double]

  @JavaStaticMethod
  public func isOpaque(_ arg0: Int32) -> Bool
}
