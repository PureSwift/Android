// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("java.util.AbstractSequentialList")
open class AbstractSequentialList<E: AnyJavaObject>: AbstractList {
  @JavaMethod
  open override func remove(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open override func get(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open override func add(_ arg0: Int32, _ arg1: JavaObject?)

  @JavaMethod
  open override func iterator() -> JavaIterator<JavaObject>!

  @JavaMethod
  open override func addAll(_ arg0: Int32, _ arg1: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open override func set(_ arg0: Int32, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open override func listIterator(_ arg0: Int32) -> ListIterator<JavaObject>!
}
