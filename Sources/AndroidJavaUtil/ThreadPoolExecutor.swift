// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("java.util.concurrent.ThreadPoolExecutor")
open class ThreadPoolExecutor: AbstractExecutorService {
  @JavaMethod
  open func allowCoreThreadTimeOut(_ arg0: Bool)

  @JavaMethod
  open func allowsCoreThreadTimeOut() -> Bool

  @JavaMethod
  open func setThreadFactory(_ arg0: ThreadFactory?)

  @JavaMethod
  open func getThreadFactory() -> ThreadFactory!

  @JavaMethod
  open func setRejectedExecutionHandler(_ arg0: RejectedExecutionHandler?)

  @JavaMethod
  open func getRejectedExecutionHandler() -> RejectedExecutionHandler!

  @JavaMethod
  open func setCorePoolSize(_ arg0: Int32)

  @JavaMethod
  open func getCorePoolSize() -> Int32

  @JavaMethod
  open func prestartCoreThread() -> Bool

  @JavaMethod
  open func prestartAllCoreThreads() -> Int32

  @JavaMethod
  open func setMaximumPoolSize(_ arg0: Int32)

  @JavaMethod
  open func getMaximumPoolSize() -> Int32

  @JavaMethod
  open func setKeepAliveTime(_ arg0: Int64, _ arg1: TimeUnit?)

  @JavaMethod
  open func getKeepAliveTime(_ arg0: TimeUnit?) -> Int64

  @JavaMethod
  open func getActiveCount() -> Int32

  @JavaMethod
  open func getLargestPoolSize() -> Int32

  @JavaMethod
  open func getTaskCount() -> Int64

  @JavaMethod
  open func getCompletedTaskCount() -> Int64

  @JavaMethod
  open func shutdown()

  @JavaMethod
  open override func finalize()

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open func isTerminated() -> Bool

  @JavaMethod
  open func terminated()

  @JavaMethod
  open func isShutdown() -> Bool

  @JavaMethod
  open func awaitTermination(_ arg0: Int64, _ arg1: TimeUnit?) throws -> Bool

  @JavaMethod
  open func getPoolSize() -> Int32

  @JavaMethod
  open func isTerminating() -> Bool

  @JavaMethod
  open func purge()
}
