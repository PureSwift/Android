// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import JavaKit
import JavaRuntime

@JavaClass("java.util.UUID", implements: Serializable.self)
open class UUID: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int64, _ arg1: Int64, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getLeastSignificantBits() -> Int64

  @JavaMethod
  open func getMostSignificantBits() -> Int64

  @JavaMethod
  open func clockSequence() -> Int32

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open func version() -> Int32

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func compareTo(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open func compareTo(_ arg0: UUID?) -> Int32

  @JavaMethod
  open func timestamp() -> Int64

  @JavaMethod
  open func node() -> Int64

  @JavaMethod
  open func variant() -> Int32
}
extension JavaClass<UUID> {
  @JavaStaticMethod
  public func randomUUID() -> UUID!

  @JavaStaticMethod
  public func nameUUIDFromBytes(_ arg0: [Int8]) -> UUID!

  @JavaStaticMethod
  public func fromString(_ arg0: String) -> UUID!
}
