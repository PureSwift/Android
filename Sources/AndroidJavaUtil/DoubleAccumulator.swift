// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import JavaKit
import JavaKitFunction
import JavaRuntime

@JavaClass("java.util.concurrent.atomic.DoubleAccumulator", implements: Serializable.self)
open class DoubleAccumulator: JavaNumber {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaDoubleBinaryOperator?, _ arg1: Double, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func accumulate(_ arg0: Double)

  @JavaMethod
  open func getThenReset() -> Double

  @JavaMethod
  open func reset()

  @JavaMethod
  open func get() -> Double

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func intValue() -> Int32

  @JavaMethod
  open override func longValue() -> Int64

  @JavaMethod
  open override func floatValue() -> Float

  @JavaMethod
  open override func doubleValue() -> Double
}
