// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.util.logging.ErrorManager")
open class LoggingErrorManager: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func error(_ arg0: String, _ arg1: Exception?, _ arg2: Int32)
}
extension JavaClass<LoggingErrorManager> {
  @JavaStaticField(isFinal: true)
  public var GENERIC_FAILURE: Int32

  @JavaStaticField(isFinal: true)
  public var WRITE_FAILURE: Int32

  @JavaStaticField(isFinal: true)
  public var FLUSH_FAILURE: Int32

  @JavaStaticField(isFinal: true)
  public var CLOSE_FAILURE: Int32

  @JavaStaticField(isFinal: true)
  public var OPEN_FAILURE: Int32

  @JavaStaticField(isFinal: true)
  public var FORMAT_FAILURE: Int32
}
