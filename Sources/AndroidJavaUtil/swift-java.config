{
  "classes" : {
    "java.util.AbstractCollection" : "AbstractCollection",
    "java.util.AbstractList" : "AbstractList",
    "java.util.AbstractMap" : "AbstractMap",
    "java.util.AbstractMap$SimpleEntry" : "AbstractMap.SimpleEntry",
    "java.util.AbstractMap$SimpleImmutableEntry" : "AbstractMap.SimpleImmutableEntry",
    "java.util.AbstractQueue" : "AbstractQueue",
    "java.util.AbstractSequentialList" : "AbstractSequentialList",
    "java.util.AbstractSet" : "AbstractSet",
    "java.util.Arrays" : "Arrays",
    "java.util.Base64" : "Base64",
    "java.util.Base64$Decoder" : "Base64.Decoder",
    "java.util.Base64$Encoder" : "Base64.Encoder",
    "java.util.Calendar" : "Calendar",
    "java.util.Calendar$Builder" : "Calendar.Builder",
    "java.util.Collections" : "Collections",
    "java.util.Comparator" : "Comparator",
    "java.util.ConcurrentModificationException" : "ConcurrentModificationException",
    "java.util.Currency" : "Currency",
    "java.util.Date" : "Date",
    "java.util.Deque" : "Deque",
    "java.util.DoubleSummaryStatistics" : "DoubleSummaryStatistics",
    "java.util.DuplicateFormatFlagsException" : "DuplicateFormatFlagsException",
    "java.util.EmptyStackException" : "EmptyStackException",
    "java.util.EnumMap" : "EnumMap",
    "java.util.EnumSet" : "EnumSet",
    "java.util.EventListener" : "EventListener",
    "java.util.EventListenerProxy" : "EventListenerProxy",
    "java.util.EventObject" : "EventObject",
    "java.util.FormatFlagsConversionMismatchException" : "FormatFlagsConversionMismatchException",
    "java.util.Formattable" : "Formattable",
    "java.util.FormattableFlags" : "FormattableFlags",
    "java.util.Formatter" : "Formatter",
    "java.util.Formatter$BigDecimalLayoutForm" : "Formatter.BigDecimalLayoutForm",
    "java.util.FormatterClosedException" : "FormatterClosedException",
    "java.util.GregorianCalendar" : "GregorianCalendar",
    "java.util.Hashtable" : "Hashtable",
    "java.util.IdentityHashMap" : "IdentityHashMap",
    "java.util.IllegalFormatCodePointException" : "IllegalFormatCodePointException",
    "java.util.IllegalFormatConversionException" : "IllegalFormatConversionException",
    "java.util.IllegalFormatException" : "IllegalFormatException",
    "java.util.IllegalFormatFlagsException" : "IllegalFormatFlagsException",
    "java.util.IllegalFormatPrecisionException" : "IllegalFormatPrecisionException",
    "java.util.IllegalFormatWidthException" : "IllegalFormatWidthException",
    "java.util.IllformedLocaleException" : "IllformedLocaleException",
    "java.util.InputMismatchException" : "InputMismatchException",
    "java.util.IntSummaryStatistics" : "IntSummaryStatistics",
    "java.util.InvalidPropertiesFormatException" : "InvalidPropertiesFormatException",
    "java.util.LinkedHashMap" : "LinkedHashMap",
    "java.util.LinkedHashSet" : "LinkedHashSet",
    "java.util.LinkedList" : "LinkedList",
    "java.util.ListResourceBundle" : "ListResourceBundle",
    "java.util.Locale" : "Locale",
    "java.util.Locale$Builder" : "Locale.Builder",
    "java.util.Locale$Category" : "Locale.Category",
    "java.util.Locale$FilteringMode" : "Locale.FilteringMode",
    "java.util.Locale$LanguageRange" : "Locale.LanguageRange",
    "java.util.LongSummaryStatistics" : "LongSummaryStatistics",
    "java.util.Map" : "Map",
    "java.util.Map$Entry" : "Map.Entry",
    "java.util.MissingFormatArgumentException" : "MissingFormatArgumentException",
    "java.util.MissingFormatWidthException" : "MissingFormatWidthException",
    "java.util.MissingResourceException" : "MissingResourceException",
    "java.util.NavigableMap" : "NavigableMap",
    "java.util.NavigableSet" : "NavigableSet",
    "java.util.NoSuchElementException" : "NoSuchElementException",
    "java.util.Objects" : "Objects",
    "java.util.Observable" : "Observable",
    "java.util.Observer" : "Observer",
    "java.util.PrimitiveIterator" : "PrimitiveIterator",
    "java.util.PrimitiveIterator$OfDouble" : "PrimitiveIterator.OfDouble",
    "java.util.PrimitiveIterator$OfInt" : "PrimitiveIterator.OfInt",
    "java.util.PrimitiveIterator$OfLong" : "PrimitiveIterator.OfLong",
    "java.util.Properties" : "Properties",
    "java.util.PropertyPermission" : "PropertyPermission",
    "java.util.PropertyResourceBundle" : "PropertyResourceBundle",
    "java.util.Random" : "Random",
    "java.util.random.RandomGenerator" : "RandomGenerator",
    "java.util.random.RandomGenerator$SplittableGenerator" : "RandomGenerator.SplittableGenerator",
    "java.util.ResourceBundle" : "ResourceBundle",
    "java.util.ResourceBundle$Control" : "ResourceBundle.Control",
    "java.util.Scanner" : "Scanner",
    "java.util.ServiceConfigurationError" : "ServiceConfigurationError",
    "java.util.ServiceLoader" : "ServiceLoader",
    "java.util.SimpleTimeZone" : "SimpleTimeZone",
    "java.util.SortedMap" : "SortedMap",
    "java.util.SortedSet" : "SortedSet",
    "java.util.Spliterator" : "Spliterator",
    "java.util.Spliterator$OfDouble" : "Spliterator.OfDouble",
    "java.util.Spliterator$OfInt" : "Spliterator.OfInt",
    "java.util.Spliterator$OfLong" : "Spliterator.OfLong",
    "java.util.Spliterator$OfPrimitive" : "Spliterator.OfPrimitive",
    "java.util.Spliterators" : "Spliterators",
    "java.util.Spliterators$AbstractDoubleSpliterator" : "Spliterators.AbstractDoubleSpliterator",
    "java.util.Spliterators$AbstractIntSpliterator" : "Spliterators.AbstractIntSpliterator",
    "java.util.Spliterators$AbstractLongSpliterator" : "Spliterators.AbstractLongSpliterator",
    "java.util.Spliterators$AbstractSpliterator" : "Spliterators.AbstractSpliterator",
    "java.util.SplittableRandom" : "SplittableRandom",
    "java.util.StringJoiner" : "StringJoiner",
    "java.util.StringTokenizer" : "StringTokenizer",
    "java.util.TimeZone" : "TimeZone",
    "java.util.Timer" : "Timer",
    "java.util.TimerTask" : "TimerTask",
    "java.util.TooManyListenersException" : "TooManyListenersException",
    "java.util.UUID" : "UUID",
    "java.util.UnknownFormatConversionException" : "UnknownFormatConversionException",
    "java.util.UnknownFormatFlagsException" : "UnknownFormatFlagsException",
    "java.util.Vector" : "Vector",
    "java.util.WeakHashMap" : "WeakHashMap",
    "java.util.concurrent.AbstractExecutorService" : "AbstractExecutorService",
    "java.util.concurrent.ArrayBlockingQueue" : "ArrayBlockingQueue",
    "java.util.concurrent.BlockingDeque" : "BlockingDeque",
    "java.util.concurrent.BlockingQueue" : "BlockingQueue",
    "java.util.concurrent.BrokenBarrierException" : "BrokenBarrierException",
    "java.util.concurrent.Callable" : "Callable",
    "java.util.concurrent.CancellationException" : "CancellationException",
    "java.util.concurrent.CompletableFuture" : "CompletableFuture",
    "java.util.concurrent.CompletableFuture$AsynchronousCompletionTask" : "CompletableFuture.AsynchronousCompletionTask",
    "java.util.concurrent.CompletionException" : "CompletionException",
    "java.util.concurrent.CompletionService" : "CompletionService",
    "java.util.concurrent.CompletionStage" : "CompletionStage",
    "java.util.concurrent.ConcurrentHashMap" : "ConcurrentHashMap",
    "java.util.concurrent.ConcurrentHashMap$KeySetView" : "ConcurrentHashMap.KeySetView",
    "java.util.concurrent.ConcurrentLinkedDeque" : "ConcurrentLinkedDeque",
    "java.util.concurrent.ConcurrentLinkedQueue" : "ConcurrentLinkedQueue",
    "java.util.concurrent.ConcurrentMap" : "ConcurrentMap",
    "java.util.concurrent.ConcurrentNavigableMap" : "ConcurrentNavigableMap",
    "java.util.concurrent.ConcurrentSkipListMap" : "ConcurrentSkipListMap",
    "java.util.concurrent.ConcurrentSkipListSet" : "ConcurrentSkipListSet",
    "java.util.concurrent.CopyOnWriteArrayList" : "CopyOnWriteArrayList",
    "java.util.concurrent.CopyOnWriteArraySet" : "CopyOnWriteArraySet",
    "java.util.concurrent.CountDownLatch" : "CountDownLatch",
    "java.util.concurrent.CountedCompleter" : "CountedCompleter",
    "java.util.concurrent.CyclicBarrier" : "CyclicBarrier",
    "java.util.concurrent.DelayQueue" : "DelayQueue",
    "java.util.concurrent.Delayed" : "Delayed",
    "java.util.concurrent.Exchanger" : "Exchanger",
    "java.util.concurrent.ExecutionException" : "ExecutionException",
    "java.util.concurrent.Executor" : "Executor",
    "java.util.concurrent.ExecutorCompletionService" : "ExecutorCompletionService",
    "java.util.concurrent.ExecutorService" : "ExecutorService",
    "java.util.concurrent.Executors" : "Executors",
    "java.util.concurrent.Flow" : "Flow",
    "java.util.concurrent.Flow$Processor" : "Flow.Processor",
    "java.util.concurrent.Flow$Publisher" : "Flow.Publisher",
    "java.util.concurrent.Flow$Subscriber" : "Flow.Subscriber",
    "java.util.concurrent.Flow$Subscription" : "Flow.Subscription",
    "java.util.concurrent.ForkJoinPool" : "ForkJoinPool",
    "java.util.concurrent.ForkJoinPool$ForkJoinWorkerThreadFactory" : "ForkJoinPool.ForkJoinWorkerThreadFactory",
    "java.util.concurrent.ForkJoinPool$ManagedBlocker" : "ForkJoinPool.ManagedBlocker",
    "java.util.concurrent.ForkJoinTask" : "ForkJoinTask",
    "java.util.concurrent.ForkJoinWorkerThread" : "ForkJoinWorkerThread",
    "java.util.concurrent.Future" : "Future",
    "java.util.concurrent.FutureTask" : "FutureTask",
    "java.util.concurrent.LinkedBlockingDeque" : "LinkedBlockingDeque",
    "java.util.concurrent.LinkedBlockingQueue" : "LinkedBlockingQueue",
    "java.util.concurrent.LinkedTransferQueue" : "LinkedTransferQueue",
    "java.util.concurrent.Phaser" : "Phaser",
    "java.util.concurrent.PriorityBlockingQueue" : "PriorityBlockingQueue",
    "java.util.concurrent.RecursiveAction" : "RecursiveAction",
    "java.util.concurrent.RecursiveTask" : "RecursiveTask",
    "java.util.concurrent.RejectedExecutionException" : "RejectedExecutionException",
    "java.util.concurrent.RejectedExecutionHandler" : "RejectedExecutionHandler",
    "java.util.concurrent.RunnableFuture" : "RunnableFuture",
    "java.util.concurrent.RunnableScheduledFuture" : "RunnableScheduledFuture",
    "java.util.concurrent.ScheduledExecutorService" : "ScheduledExecutorService",
    "java.util.concurrent.ScheduledFuture" : "ScheduledFuture",
    "java.util.concurrent.ScheduledThreadPoolExecutor" : "ScheduledThreadPoolExecutor",
    "java.util.concurrent.Semaphore" : "Semaphore",
    "java.util.concurrent.SubmissionPublisher" : "SubmissionPublisher",
    "java.util.concurrent.SynchronousQueue" : "SynchronousQueue",
    "java.util.concurrent.ThreadFactory" : "ThreadFactory",
    "java.util.concurrent.ThreadLocalRandom" : "ThreadLocalRandom",
    "java.util.concurrent.ThreadPoolExecutor" : "ThreadPoolExecutor",
    "java.util.concurrent.ThreadPoolExecutor$AbortPolicy" : "ThreadPoolExecutor.AbortPolicy",
    "java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" : "ThreadPoolExecutor.CallerRunsPolicy",
    "java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy" : "ThreadPoolExecutor.DiscardOldestPolicy",
    "java.util.concurrent.ThreadPoolExecutor$DiscardPolicy" : "ThreadPoolExecutor.DiscardPolicy",
    "java.util.concurrent.TimeUnit" : "TimeUnit",
    "java.util.concurrent.TimeoutException" : "TimeoutException",
    "java.util.concurrent.TransferQueue" : "TransferQueue",
    "java.util.concurrent.atomic.AtomicBoolean" : "AtomicBoolean",
    "java.util.concurrent.atomic.AtomicInteger" : "AtomicInteger",
    "java.util.concurrent.atomic.AtomicIntegerArray" : "AtomicIntegerArray",
    "java.util.concurrent.atomic.AtomicIntegerFieldUpdater" : "AtomicIntegerFieldUpdater",
    "java.util.concurrent.atomic.AtomicLong" : "AtomicLong",
    "java.util.concurrent.atomic.AtomicLongArray" : "AtomicLongArray",
    "java.util.concurrent.atomic.AtomicLongFieldUpdater" : "AtomicLongFieldUpdater",
    "java.util.concurrent.atomic.AtomicMarkableReference" : "AtomicMarkableReference",
    "java.util.concurrent.atomic.AtomicReference" : "AtomicReference",
    "java.util.concurrent.atomic.AtomicReferenceArray" : "AtomicReferenceArray",
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater" : "AtomicReferenceFieldUpdater",
    "java.util.concurrent.atomic.AtomicStampedReference" : "AtomicStampedReference",
    "java.util.concurrent.atomic.DoubleAccumulator" : "DoubleAccumulator",
    "java.util.concurrent.atomic.DoubleAdder" : "DoubleAdder",
    "java.util.concurrent.atomic.LongAccumulator" : "LongAccumulator",
    "java.util.concurrent.atomic.LongAdder" : "LongAdder",
    "java.util.concurrent.locks.AbstractOwnableSynchronizer" : "AbstractOwnableSynchronizer",
    "java.util.concurrent.locks.AbstractQueuedLongSynchronizer" : "AbstractQueuedLongSynchronizer",
    "java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ConditionObject" : "AbstractQueuedLongSynchronizer.ConditionObject",
    "java.util.concurrent.locks.AbstractQueuedSynchronizer" : "AbstractQueuedSynchronizer",
    "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject" : "AbstractQueuedSynchronizer.ConditionObject",
    "java.util.concurrent.locks.Condition" : "Condition",
    "java.util.concurrent.locks.Lock" : "Lock",
    "java.util.concurrent.locks.LockSupport" : "LockSupport",
    "java.util.concurrent.locks.ReadWriteLock" : "ReadWriteLock",
    "java.util.concurrent.locks.ReentrantLock" : "ReentrantLock",
    "java.util.concurrent.locks.ReentrantReadWriteLock" : "ReentrantReadWriteLock",
    "java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock" : "ReentrantReadWriteLock.ReadLock",
    "java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock" : "ReentrantReadWriteLock.WriteLock",
    "java.util.concurrent.locks.StampedLock" : "StampedLock",
    "java.util.jar.Attributes$Name" : "AttributesName",
    "java.util.jar.JarException" : "JarException",
    "java.util.logging.ConsoleHandler" : "LoggingConsoleHandler",
    "java.util.logging.ErrorManager" : "LoggingErrorManager",
    "java.util.logging.FileHandler" : "LoggingFileHandler",
    "java.util.logging.Filter" : "LoggingFilter",
    "java.util.logging.Formatter" : "LoggingFormatter",
    "java.util.logging.Handler" : "LoggingHandler",
    "java.util.logging.Level" : "LoggingLevel",
    "java.util.logging.LogManager" : "LogManager",
    "java.util.logging.LogRecord" : "LogRecord",
    "java.util.logging.Logger" : "Logger",
    "java.util.logging.LoggingMXBean" : "LoggingMXBean",
    "java.util.logging.LoggingPermission" : "LoggingPermission",
    "java.util.logging.MemoryHandler" : "LoggingMemoryHandler",
    "java.util.logging.SimpleFormatter" : "LoggingSimpleFormatter",
    "java.util.logging.SocketHandler" : "LoggingSocketHandler",
    "java.util.logging.StreamHandler" : "LoggingStreamHandler",
    "java.util.logging.XMLFormatter" : "LoggingXMLFormatter",
    "java.util.prefs.AbstractPreferences" : "AbstractPreferences",
    "java.util.prefs.BackingStoreException" : "BackingStoreException",
    "java.util.prefs.InvalidPreferencesFormatException" : "InvalidPreferencesFormatException",
    "java.util.prefs.NodeChangeEvent" : "NodeChangeEvent",
    "java.util.prefs.NodeChangeListener" : "NodeChangeListener",
    "java.util.prefs.PreferenceChangeEvent" : "PreferenceChangeEvent",
    "java.util.prefs.PreferenceChangeListener" : "PreferenceChangeListener",
    "java.util.prefs.Preferences" : "Preferences",
    "java.util.prefs.PreferencesFactory" : "PreferencesFactory",
    "java.util.regex.MatchResult" : "MatchResult",
    "java.util.regex.Matcher" : "Matcher",
    "java.util.regex.Pattern" : "Pattern",
    "java.util.regex.PatternSyntaxException" : "PatternSyntaxException",
    "java.util.stream.BaseStream" : "BaseStream",
    "java.util.stream.Collector" : "Collector",
    "java.util.stream.Collector$Characteristics" : "Collector.Characteristics",
    "java.util.stream.Collectors" : "Collectors",
    "java.util.stream.DoubleStream" : "DoubleStream",
    "java.util.stream.DoubleStream$Builder" : "DoubleStream.Builder",
    "java.util.stream.IntStream" : "IntStream",
    "java.util.stream.IntStream$Builder" : "IntStream.Builder",
    "java.util.stream.LongStream" : "LongStream",
    "java.util.stream.LongStream$Builder" : "LongStream.Builder",
    "java.util.stream.Stream" : "Stream",
    "java.util.stream.Stream$Builder" : "Stream.Builder",
    "java.util.stream.StreamSupport" : "StreamSupport",
    "java.util.zip.Adler32" : "Adler32",
    "java.util.zip.CRC32" : "CRC32",
    "java.util.zip.CheckedInputStream" : "CheckedInputStream",
    "java.util.zip.CheckedOutputStream" : "CheckedOutputStream",
    "java.util.zip.Checksum" : "Checksum",
    "java.util.zip.DataFormatException" : "DataFormatException",
    "java.util.zip.Deflater" : "Deflater",
    "java.util.zip.DeflaterInputStream" : "DeflaterInputStream",
    "java.util.zip.DeflaterOutputStream" : "DeflaterOutputStream",
    "java.util.zip.GZIPInputStream" : "GZIPInputStream",
    "java.util.zip.GZIPOutputStream" : "GZIPOutputStream",
    "java.util.zip.Inflater" : "Inflater",
    "java.util.zip.InflaterInputStream" : "InflaterInputStream",
    "java.util.zip.InflaterOutputStream" : "InflaterOutputStream",
    "java.util.zip.ZipError" : "ZipError",
    "java.util.zip.ZipException" : "ZipException",
    "java.util.zip.ZipFile" : "ZipFile",
    "java.util.zip.ZipInputStream" : "ZipInputStream",
    "java.util.zip.ZipOutputStream" : "ZipOutputStream",
  },
  "classpath" : "android.jar"
}
