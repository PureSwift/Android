// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import JavaKit
import JavaKitFunction
import JavaRuntime

@JavaClass("java.util.concurrent.atomic.AtomicInteger", implements: Serializable.self)
open class AtomicInteger: JavaNumber {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func get() -> Int32

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func intValue() -> Int32

  @JavaMethod
  open override func longValue() -> Int64

  @JavaMethod
  open override func floatValue() -> Float

  @JavaMethod
  open override func doubleValue() -> Double

  @JavaMethod
  open func set(_ arg0: Int32)

  @JavaMethod
  open func getOpaque() -> Int32

  @JavaMethod
  open func setOpaque(_ arg0: Int32)

  @JavaMethod
  open func getAcquire() -> Int32

  @JavaMethod
  open func setRelease(_ arg0: Int32)

  @JavaMethod
  open func compareAndSet(_ arg0: Int32, _ arg1: Int32) -> Bool

  @JavaMethod
  open func compareAndExchange(_ arg0: Int32, _ arg1: Int32) -> Int32

  @JavaMethod
  open func compareAndExchangeAcquire(_ arg0: Int32, _ arg1: Int32) -> Int32

  @JavaMethod
  open func compareAndExchangeRelease(_ arg0: Int32, _ arg1: Int32) -> Int32

  @JavaMethod
  open func weakCompareAndSetPlain(_ arg0: Int32, _ arg1: Int32) -> Bool

  @JavaMethod
  open func weakCompareAndSet(_ arg0: Int32, _ arg1: Int32) -> Bool

  @JavaMethod
  open func weakCompareAndSetAcquire(_ arg0: Int32, _ arg1: Int32) -> Bool

  @JavaMethod
  open func weakCompareAndSetRelease(_ arg0: Int32, _ arg1: Int32) -> Bool

  @JavaMethod
  open func getAndSet(_ arg0: Int32) -> Int32

  @JavaMethod
  open func getAndAdd(_ arg0: Int32) -> Int32

  @JavaMethod
  open func incrementAndGet() -> Int32

  @JavaMethod
  open func weakCompareAndSetVolatile(_ arg0: Int32, _ arg1: Int32) -> Bool

  @JavaMethod
  open func lazySet(_ arg0: Int32)

  @JavaMethod
  open func getAndIncrement() -> Int32

  @JavaMethod
  open func getAndDecrement() -> Int32

  @JavaMethod
  open func decrementAndGet() -> Int32

  @JavaMethod
  open func addAndGet(_ arg0: Int32) -> Int32

  @JavaMethod
  open func getAndUpdate(_ arg0: JavaIntUnaryOperator?) -> Int32

  @JavaMethod
  open func updateAndGet(_ arg0: JavaIntUnaryOperator?) -> Int32

  @JavaMethod
  open func getAndAccumulate(_ arg0: Int32, _ arg1: JavaIntBinaryOperator?) -> Int32

  @JavaMethod
  open func accumulateAndGet(_ arg0: Int32, _ arg1: JavaIntBinaryOperator?) -> Int32

  @JavaMethod
  open func getPlain() -> Int32

  @JavaMethod
  open func setPlain(_ arg0: Int32)
}
