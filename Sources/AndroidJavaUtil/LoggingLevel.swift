// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import JavaKit
import JavaRuntime

@JavaClass("java.util.logging.Level", implements: Serializable.self)
open class LoggingLevel: JavaObject {
  @JavaMethod
  open func getName() -> String

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func intValue() -> Int32

  @JavaMethod
  open func getResourceBundleName() -> String

  @JavaMethod
  open func getLocalizedName() -> String
}
extension JavaClass<LoggingLevel> {
  @JavaStaticField(isFinal: true)
  public var OFF: LoggingLevel!

  @JavaStaticField(isFinal: true)
  public var SEVERE: LoggingLevel!

  @JavaStaticField(isFinal: true)
  public var WARNING: LoggingLevel!

  @JavaStaticField(isFinal: true)
  public var INFO: LoggingLevel!

  @JavaStaticField(isFinal: true)
  public var CONFIG: LoggingLevel!

  @JavaStaticField(isFinal: true)
  public var FINE: LoggingLevel!

  @JavaStaticField(isFinal: true)
  public var FINER: LoggingLevel!

  @JavaStaticField(isFinal: true)
  public var FINEST: LoggingLevel!

  @JavaStaticField(isFinal: true)
  public var ALL: LoggingLevel!

  @JavaStaticMethod
  public func parse(_ arg0: String) throws -> LoggingLevel!
}
