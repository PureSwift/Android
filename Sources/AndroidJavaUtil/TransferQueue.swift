// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaKitFunction
import JavaRuntime

@JavaInterface("java.util.concurrent.TransferQueue", extends: BlockingQueue<JavaObject>.self)
public struct TransferQueue<E: AnyJavaObject> {
  @JavaMethod
  public func tryTransfer(_ arg0: JavaObject?, _ arg1: Int64, _ arg2: TimeUnit?) throws -> Bool

  @JavaMethod
  public func tryTransfer(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func hasWaitingConsumer() -> Bool

  @JavaMethod
  public func getWaitingConsumerCount() -> Int32

  @JavaMethod
  public func transfer(_ arg0: JavaObject?) throws

  @JavaMethod
  public func remainingCapacity() -> Int32

  @JavaMethod
  public func drainTo(_ arg0: JavaCollection<JavaObject>?, _ arg1: Int32) -> Int32

  @JavaMethod
  public func drainTo(_ arg0: JavaCollection<JavaObject>?) -> Int32

  @JavaMethod
  public func remove(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func put(_ arg0: JavaObject?) throws

  @JavaMethod
  public func add(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func contains(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func poll(_ arg0: Int64, _ arg1: TimeUnit?) throws -> JavaObject!

  @JavaMethod
  public func offer(_ arg0: JavaObject?, _ arg1: Int64, _ arg2: TimeUnit?) throws -> Bool

  @JavaMethod
  public func offer(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func take() throws -> JavaObject!

  @JavaMethod
  public func remove() -> JavaObject!

  @JavaMethod
  public func peek() -> JavaObject!

  @JavaMethod
  public func element() -> JavaObject!

  @JavaMethod
  public func poll() -> JavaObject!

  @JavaMethod
  public func size() -> Int32

  @JavaMethod
  public func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func hashCode() -> Int32

  @JavaMethod
  public func clear()

  @JavaMethod
  public func isEmpty() -> Bool

  @JavaMethod
  public func toArray(_ arg0: [JavaObject?]) -> [JavaObject?]

  @JavaMethod
  public func toArray(_ arg0: JavaIntFunction<JavaArray>?) -> [JavaObject?]

  @JavaMethod
  public func toArray() -> [JavaObject?]

  @JavaMethod
  public func iterator() -> JavaIterator<JavaObject>!

  @JavaMethod
  public func stream() -> Stream<JavaObject>!

  @JavaMethod
  public func spliterator() -> Spliterator<JavaObject>!

  @JavaMethod
  public func addAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  public func removeIf(_ arg0: JavaPredicate<JavaObject>?) -> Bool

  @JavaMethod
  public func removeAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  public func retainAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  public func containsAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  public func parallelStream() -> Stream<JavaObject>!

  @JavaMethod
  public func forEach(_ arg0: JavaConsumer<JavaObject>?)
}
