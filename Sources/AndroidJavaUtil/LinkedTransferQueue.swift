// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("java.util.concurrent.LinkedTransferQueue", implements: TransferQueue<JavaObject>.self, Serializable.self)
open class LinkedTransferQueue<E: AnyJavaObject>: AbstractQueue {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaCollection<JavaObject>?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func tryTransfer(_ arg0: JavaObject?, _ arg1: Int64, _ arg2: TimeUnit?) throws -> Bool

  @JavaMethod
  open func tryTransfer(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func drainTo(_ arg0: JavaCollection<JavaObject>?, _ arg1: Int32) -> Int32

  @JavaMethod
  open func drainTo(_ arg0: JavaCollection<JavaObject>?) -> Int32

  @JavaMethod
  open func hasWaitingConsumer() -> Bool

  @JavaMethod
  open func getWaitingConsumerCount() -> Int32

  @JavaMethod
  open func remainingCapacity() -> Int32

  @JavaMethod
  open override func remove(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func size() -> Int32

  @JavaMethod
  open func put(_ arg0: JavaObject?)

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func clear()

  @JavaMethod
  open override func isEmpty() -> Bool

  @JavaMethod
  open override func add(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toArray(_ arg0: [JavaObject?]) -> [JavaObject?]

  @JavaMethod
  open override func toArray() -> [JavaObject?]

  @JavaMethod
  open override func iterator() -> JavaIterator<JavaObject>!

  @JavaMethod
  open override func contains(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func spliterator() -> Spliterator<JavaObject>!

  @JavaMethod
  open func peek() -> JavaObject!

  @JavaMethod
  open func transfer(_ arg0: JavaObject?) throws

  @JavaMethod
  open override func removeAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open override func retainAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open func poll() -> JavaObject!

  @JavaMethod
  open func poll(_ arg0: Int64, _ arg1: TimeUnit?) throws -> JavaObject!

  @JavaMethod
  open func offer(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func offer(_ arg0: JavaObject?, _ arg1: Int64, _ arg2: TimeUnit?) -> Bool

  @JavaMethod
  open func take() throws -> JavaObject!
}
