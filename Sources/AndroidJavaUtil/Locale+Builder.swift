// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

extension Locale {
  @JavaClass("java.util.Locale$Builder")
  open class Builder: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func clear() -> Locale.Builder!

  @JavaMethod
  open func build() -> Locale!

  @JavaMethod
  open func setLocale(_ arg0: Locale?) -> Locale.Builder!

  @JavaMethod
  open func setLanguageTag(_ arg0: String) -> Locale.Builder!

  @JavaMethod
  open func setLanguage(_ arg0: String) -> Locale.Builder!

  @JavaMethod
  open func setScript(_ arg0: String) -> Locale.Builder!

  @JavaMethod
  open func setRegion(_ arg0: String) -> Locale.Builder!

  @JavaMethod
  open func setVariant(_ arg0: String) -> Locale.Builder!

  @JavaMethod
  open func setExtension(_ arg0: UInt16, _ arg1: String) -> Locale.Builder!

  @JavaMethod
  open func setUnicodeLocaleKeyword(_ arg0: String, _ arg1: String) -> Locale.Builder!

  @JavaMethod
  open func addUnicodeLocaleAttribute(_ arg0: String) -> Locale.Builder!

  @JavaMethod
  open func removeUnicodeLocaleAttribute(_ arg0: String) -> Locale.Builder!

  @JavaMethod
  open func clearExtensions() -> Locale.Builder!
  }
}
