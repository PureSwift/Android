// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import JavaKit
import JavaRuntime

@JavaClass("java.util.concurrent.locks.StampedLock", implements: Serializable.self)
open class StampedLock: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func unlockWrite(_ arg0: Int64)

  @JavaMethod
  open func unlockRead(_ arg0: Int64)

  @JavaMethod
  open func getReadLockCount() -> Int32

  @JavaMethod
  open func writeLock() -> Int64

  @JavaMethod
  open func tryWriteLock(_ arg0: Int64, _ arg1: TimeUnit?) throws -> Int64

  @JavaMethod
  open func tryWriteLock() -> Int64

  @JavaMethod
  open func writeLockInterruptibly() throws -> Int64

  @JavaMethod
  open func readLock() -> Int64

  @JavaMethod
  open func tryReadLock() -> Int64

  @JavaMethod
  open func tryReadLock(_ arg0: Int64, _ arg1: TimeUnit?) throws -> Int64

  @JavaMethod
  open func readLockInterruptibly() throws -> Int64

  @JavaMethod
  open func tryOptimisticRead() -> Int64

  @JavaMethod
  open func tryConvertToWriteLock(_ arg0: Int64) -> Int64

  @JavaMethod
  open func tryConvertToReadLock(_ arg0: Int64) -> Int64

  @JavaMethod
  open func tryConvertToOptimisticRead(_ arg0: Int64) -> Int64

  @JavaMethod
  open func tryUnlockWrite() -> Bool

  @JavaMethod
  open func tryUnlockRead() -> Bool

  @JavaMethod
  open func isWriteLocked() -> Bool

  @JavaMethod
  open func isReadLocked() -> Bool

  @JavaMethod
  open func asReadLock() -> Lock!

  @JavaMethod
  open func asWriteLock() -> Lock!

  @JavaMethod
  open func asReadWriteLock() -> ReadWriteLock!

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open func validate(_ arg0: Int64) -> Bool

  @JavaMethod
  open func unlock(_ arg0: Int64)
}
extension JavaClass<StampedLock> {
  @JavaStaticMethod
  public func isWriteLockStamp(_ arg0: Int64) -> Bool

  @JavaStaticMethod
  public func isReadLockStamp(_ arg0: Int64) -> Bool

  @JavaStaticMethod
  public func isLockStamp(_ arg0: Int64) -> Bool

  @JavaStaticMethod
  public func isOptimisticReadStamp(_ arg0: Int64) -> Bool
}
