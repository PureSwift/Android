// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

extension Calendar {
  @JavaClass("java.util.Calendar$Builder")
  open class Builder: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func set(_ arg0: Int32, _ arg1: Int32) -> Calendar.Builder!

  @JavaMethod
  open func build() -> Calendar!

  @JavaMethod
  open func setTimeZone(_ arg0: TimeZone?) -> Calendar.Builder!

  @JavaMethod
  open func setLenient(_ arg0: Bool) -> Calendar.Builder!

  @JavaMethod
  open func setWeekDate(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32) -> Calendar.Builder!

  @JavaMethod
  open func setInstant(_ arg0: Int64) -> Calendar.Builder!

  @JavaMethod
  open func setInstant(_ arg0: Date?) -> Calendar.Builder!

  @JavaMethod
  open func setFields(_ arg0: [Int32]) -> Calendar.Builder!

  @JavaMethod
  open func setTimeOfDay(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32) -> Calendar.Builder!

  @JavaMethod
  open func setTimeOfDay(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32) -> Calendar.Builder!

  @JavaMethod
  open func setWeekDefinition(_ arg0: Int32, _ arg1: Int32) -> Calendar.Builder!

  @JavaMethod
  open func setDate(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32) -> Calendar.Builder!

  @JavaMethod
  open func setCalendarType(_ arg0: String) -> Calendar.Builder!

  @JavaMethod
  open func setLocale(_ arg0: Locale?) -> Calendar.Builder!
  }
}
