// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.net.MulticastSocket")
open class MulticastSocket: DatagramSocket {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: SocketAddress?, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil) throws

  @JavaMethod
  open func send(_ arg0: DatagramPacket?, _ arg1: Int8) throws

  @JavaMethod
  open func setTTL(_ arg0: Int8) throws

  @JavaMethod
  open func getTTL() throws -> Int8

  @JavaMethod
  open func setTimeToLive(_ arg0: Int32) throws

  @JavaMethod
  open func joinGroup(_ arg0: InetAddress?) throws

  @JavaMethod
  open override func joinGroup(_ arg0: SocketAddress?, _ arg1: NetworkInterface?) throws

  @JavaMethod
  open override func leaveGroup(_ arg0: SocketAddress?, _ arg1: NetworkInterface?) throws

  @JavaMethod
  open func leaveGroup(_ arg0: InetAddress?) throws

  @JavaMethod
  open func setInterface(_ arg0: InetAddress?) throws

  @JavaMethod
  open func getInterface() throws -> InetAddress!

  @JavaMethod
  open func setNetworkInterface(_ arg0: NetworkInterface?) throws

  @JavaMethod
  open func getNetworkInterface() throws -> NetworkInterface!

  @JavaMethod
  open func setLoopbackMode(_ arg0: Bool) throws

  @JavaMethod
  open func getLoopbackMode() throws -> Bool

  @JavaMethod
  open func getTimeToLive() throws -> Int32
}
