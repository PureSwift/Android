// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaLang
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("java.net.HttpCookie", implements: Cloneable.self)
open class HttpCookie: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: String, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getDomain() -> String

  @JavaMethod
  open func getPortlist() -> String

  @JavaMethod
  open func hasExpired() -> Bool

  @JavaMethod
  open func setCommentURL(_ arg0: String)

  @JavaMethod
  open func getCommentURL() -> String

  @JavaMethod
  open func setDiscard(_ arg0: Bool)

  @JavaMethod
  open func getDiscard() -> Bool

  @JavaMethod
  open func setPortlist(_ arg0: String)

  @JavaMethod
  open func setDomain(_ arg0: String)

  @JavaMethod
  open func setMaxAge(_ arg0: Int64)

  @JavaMethod
  open func getMaxAge() -> Int64

  @JavaMethod
  open func setPath(_ arg0: String)

  @JavaMethod
  open func setSecure(_ arg0: Bool)

  @JavaMethod
  open func getSecure() -> Bool

  @JavaMethod
  open func isHttpOnly() -> Bool

  @JavaMethod
  open func setHttpOnly(_ arg0: Bool)

  @JavaMethod
  open func getName() -> String

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open override func clone() -> JavaObject!

  @JavaMethod
  open func getValue() -> String

  @JavaMethod
  open func setValue(_ arg0: String)

  @JavaMethod
  open func getPath() -> String

  @JavaMethod
  open func setVersion(_ arg0: Int32)

  @JavaMethod
  open func setComment(_ arg0: String)

  @JavaMethod
  open func getComment() -> String

  @JavaMethod
  open func getVersion() -> Int32
}
extension JavaClass<HttpCookie> {
  @JavaStaticMethod
  public func domainMatches(_ arg0: String, _ arg1: String) -> Bool

  @JavaStaticMethod
  public func parse(_ arg0: String) -> List<HttpCookie>!
}
