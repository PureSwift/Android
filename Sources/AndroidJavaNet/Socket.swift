// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("java.net.Socket", implements: Closeable.self)
open class Socket: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: Int32, _ arg2: InetAddress?, _ arg3: Int32, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: InetAddress?, _ arg1: Int32, _ arg2: Bool, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: Int32, _ arg2: Bool, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: InetAddress?, _ arg1: Int32, _ arg2: InetAddress?, _ arg3: Int32, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Proxy?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: Int32, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: InetAddress?, _ arg1: Int32, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  open func connect(_ arg0: SocketAddress?) throws

  @JavaMethod
  open func connect(_ arg0: SocketAddress?, _ arg1: Int32) throws

  @JavaMethod
  open func getOutputStream() throws -> OutputStream!

  @JavaMethod
  open func isBound() -> Bool

  @JavaMethod
  open func isConnected() -> Bool

  @JavaMethod
  open func getInetAddress() -> InetAddress!

  @JavaMethod
  open func getRemoteSocketAddress() -> SocketAddress!

  @JavaMethod
  open func getLocalSocketAddress() -> SocketAddress!

  @JavaMethod
  open func getLocalAddress() -> InetAddress!

  @JavaMethod
  open func getLocalPort() -> Int32

  @JavaMethod
  open func setSoTimeout(_ arg0: Int32) throws

  @JavaMethod
  open func getSoTimeout() throws -> Int32

  @JavaMethod
  open func setSendBufferSize(_ arg0: Int32) throws

  @JavaMethod
  open func getSendBufferSize() throws -> Int32

  @JavaMethod
  open func setReceiveBufferSize(_ arg0: Int32) throws

  @JavaMethod
  open func getReceiveBufferSize() throws -> Int32

  @JavaMethod
  open func setReuseAddress(_ arg0: Bool) throws

  @JavaMethod
  open func getReuseAddress() throws -> Bool

  @JavaMethod
  open func setTrafficClass(_ arg0: Int32) throws

  @JavaMethod
  open func getTrafficClass() throws -> Int32

  @JavaMethod
  open func isClosed() -> Bool

  @JavaMethod
  open func setOption(_ arg0: SocketOption<JavaObject>?, _ arg1: JavaObject?) throws -> Socket!

  @JavaMethod
  open func getOption(_ arg0: SocketOption<JavaObject>?) throws -> JavaObject!

  @JavaMethod
  open func supportedOptions() -> JavaSet<SocketOption<JavaObject>>!

  @JavaMethod
  open func shutdownInput() throws

  @JavaMethod
  open func shutdownOutput() throws

  @JavaMethod
  open func sendUrgentData(_ arg0: Int32) throws

  @JavaMethod
  open func setPerformancePreferences(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open func isInputShutdown() -> Bool

  @JavaMethod
  open func isOutputShutdown() -> Bool

  @JavaMethod
  open func setTcpNoDelay(_ arg0: Bool) throws

  @JavaMethod
  open func getTcpNoDelay() throws -> Bool

  @JavaMethod
  open func setSoLinger(_ arg0: Bool, _ arg1: Int32) throws

  @JavaMethod
  open func getSoLinger() throws -> Int32

  @JavaMethod
  open func setOOBInline(_ arg0: Bool) throws

  @JavaMethod
  open func getOOBInline() throws -> Bool

  @JavaMethod
  open func setKeepAlive(_ arg0: Bool) throws

  @JavaMethod
  open func getKeepAlive() throws -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open func close() throws

  @JavaMethod
  open func getPort() -> Int32

  @JavaMethod
  open func getInputStream() throws -> InputStream!

  @JavaMethod
  open func bind(_ arg0: SocketAddress?) throws
}
extension JavaClass<Socket> {
  @JavaStaticMethod
  public func setSocketImplFactory(_ arg0: SocketImplFactory?) throws
}
