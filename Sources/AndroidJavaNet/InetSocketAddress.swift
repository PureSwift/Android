// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.net.InetSocketAddress")
open class InetSocketAddress: SocketAddress {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: InetAddress?, _ arg1: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func isUnresolved() -> Bool

  @JavaMethod
  open func getHostString() -> String

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func getAddress() -> InetAddress!

  @JavaMethod
  open func getPort() -> Int32

  @JavaMethod
  open func getHostName() -> String
}
extension JavaClass<InetSocketAddress> {
  @JavaStaticMethod
  public func createUnresolved(_ arg0: String, _ arg1: Int32) -> InetSocketAddress!
}
