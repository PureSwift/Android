// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitNetwork
import JavaRuntime

@JavaClass("java.net.Authenticator")
open class Authenticator: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getPasswordAuthentication() -> PasswordAuthentication!

  @JavaMethod
  open func requestPasswordAuthenticationInstance(_ arg0: String, _ arg1: InetAddress?, _ arg2: Int32, _ arg3: String, _ arg4: String, _ arg5: String, _ arg6: URL?, _ arg7: Authenticator.RequestorType?) -> PasswordAuthentication!

  @JavaMethod
  open func getRequestingHost() -> String

  @JavaMethod
  open func getRequestingSite() -> InetAddress!

  @JavaMethod
  open func getRequestingPort() -> Int32

  @JavaMethod
  open func getRequestingProtocol() -> String

  @JavaMethod
  open func getRequestingPrompt() -> String

  @JavaMethod
  open func getRequestingScheme() -> String

  @JavaMethod
  open func getRequestingURL() -> URL!

  @JavaMethod
  open func getRequestorType() -> Authenticator.RequestorType!
}
extension JavaClass<Authenticator> {
  @JavaStaticMethod
  public func requestPasswordAuthentication(_ arg0: InetAddress?, _ arg1: Int32, _ arg2: String, _ arg3: String, _ arg4: String) -> PasswordAuthentication!

  @JavaStaticMethod
  public func requestPasswordAuthentication(_ arg0: String, _ arg1: InetAddress?, _ arg2: Int32, _ arg3: String, _ arg4: String, _ arg5: String) -> PasswordAuthentication!

  @JavaStaticMethod
  public func requestPasswordAuthentication(_ arg0: Authenticator?, _ arg1: String, _ arg2: InetAddress?, _ arg3: Int32, _ arg4: String, _ arg5: String, _ arg6: String, _ arg7: URL?, _ arg8: Authenticator.RequestorType?) -> PasswordAuthentication!

  @JavaStaticMethod
  public func requestPasswordAuthentication(_ arg0: String, _ arg1: InetAddress?, _ arg2: Int32, _ arg3: String, _ arg4: String, _ arg5: String, _ arg6: URL?, _ arg7: Authenticator.RequestorType?) -> PasswordAuthentication!

  @JavaStaticMethod
  public func getDefault() -> Authenticator!

  @JavaStaticMethod
  public func setDefault(_ arg0: Authenticator?)
}
