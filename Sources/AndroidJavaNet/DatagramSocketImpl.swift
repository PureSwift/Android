// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("java.net.DatagramSocketImpl", implements: SocketOptions.self)
open class DatagramSocketImpl: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getLocalPort() -> Int32

  @JavaMethod
  open func setOption(_ arg0: SocketOption<JavaObject>?, _ arg1: JavaObject?) throws

  @JavaMethod
  open func getOption(_ arg0: SocketOption<JavaObject>?) throws -> JavaObject!

  @JavaMethod
  open func supportedOptions() -> JavaSet<SocketOption<JavaObject>>!

  @JavaMethod
  open func connect(_ arg0: InetAddress?, _ arg1: Int32) throws

  @JavaMethod
  open func send(_ arg0: DatagramPacket?) throws

  @JavaMethod
  open func disconnect()

  @JavaMethod
  open func peekData(_ arg0: DatagramPacket?) throws -> Int32

  @JavaMethod
  open func receive(_ arg0: DatagramPacket?) throws

  @JavaMethod
  open func setTTL(_ arg0: Int8) throws

  @JavaMethod
  open func getTTL() throws -> Int8

  @JavaMethod
  open func setTimeToLive(_ arg0: Int32) throws

  @JavaMethod
  open func leave(_ arg0: InetAddress?) throws

  @JavaMethod
  open func joinGroup(_ arg0: SocketAddress?, _ arg1: NetworkInterface?) throws

  @JavaMethod
  open func leaveGroup(_ arg0: SocketAddress?, _ arg1: NetworkInterface?) throws

  @JavaMethod
  open func getFileDescriptor() -> FileDescriptor!

  @JavaMethod
  open func join(_ arg0: InetAddress?) throws

  @JavaMethod
  open func close()

  @JavaMethod
  open func create() throws

  @JavaMethod
  open func peek(_ arg0: InetAddress?) throws -> Int32

  @JavaMethod
  open func bind(_ arg0: Int32, _ arg1: InetAddress?) throws

  @JavaMethod
  open func getTimeToLive() throws -> Int32
}
extension JavaClass<DatagramSocketImpl> {
  @JavaStaticField(isFinal: true)
  public var TCP_NODELAY: Int32

  @JavaStaticField(isFinal: true)
  public var SO_BINDADDR: Int32

  @JavaStaticField(isFinal: true)
  public var SO_REUSEADDR: Int32

  @JavaStaticField(isFinal: true)
  public var SO_REUSEPORT: Int32

  @JavaStaticField(isFinal: true)
  public var SO_BROADCAST: Int32

  @JavaStaticField(isFinal: true)
  public var IP_MULTICAST_IF: Int32

  @JavaStaticField(isFinal: true)
  public var IP_MULTICAST_IF2: Int32

  @JavaStaticField(isFinal: true)
  public var IP_MULTICAST_LOOP: Int32

  @JavaStaticField(isFinal: true)
  public var IP_TOS: Int32

  @JavaStaticField(isFinal: true)
  public var SO_LINGER: Int32

  @JavaStaticField(isFinal: true)
  public var SO_TIMEOUT: Int32

  @JavaStaticField(isFinal: true)
  public var SO_SNDBUF: Int32

  @JavaStaticField(isFinal: true)
  public var SO_RCVBUF: Int32

  @JavaStaticField(isFinal: true)
  public var SO_KEEPALIVE: Int32

  @JavaStaticField(isFinal: true)
  public var SO_OOBINLINE: Int32
}
