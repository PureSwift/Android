// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("java.net.NetworkInterface")
open class NetworkInterface: JavaObject {
  @JavaMethod
  open func getName() -> String

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func getParent() -> NetworkInterface!

  @JavaMethod
  open func isVirtual() -> Bool

  @JavaMethod
  open func getIndex() -> Int32

  @JavaMethod
  open func isUp() throws -> Bool

  @JavaMethod
  open func supportsMulticast() throws -> Bool

  @JavaMethod
  open func getInetAddresses() -> Enumeration<InetAddress>!

  @JavaMethod
  open func isLoopback() throws -> Bool

  @JavaMethod
  open func isPointToPoint() throws -> Bool

  @JavaMethod
  open func getInterfaceAddresses() -> List<InterfaceAddress>!

  @JavaMethod
  open func getSubInterfaces() -> Enumeration<NetworkInterface>!

  @JavaMethod
  open func getDisplayName() -> String

  @JavaMethod
  open func getHardwareAddress() throws -> [Int8]

  @JavaMethod
  open func getMTU() throws -> Int32
}
extension JavaClass<NetworkInterface> {
  @JavaStaticMethod
  public func getByName(_ arg0: String) throws -> NetworkInterface!

  @JavaStaticMethod
  public func getNetworkInterfaces() throws -> Enumeration<NetworkInterface>!

  @JavaStaticMethod
  public func getByIndex(_ arg0: Int32) throws -> NetworkInterface!

  @JavaStaticMethod
  public func getByInetAddress(_ arg0: InetAddress?) throws -> NetworkInterface!
}
