// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("java.net.SocketImpl", implements: SocketOptions.self)
open class SocketImpl: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func connect(_ arg0: String, _ arg1: Int32) throws

  @JavaMethod
  open func connect(_ arg0: InetAddress?, _ arg1: Int32) throws

  @JavaMethod
  open func connect(_ arg0: SocketAddress?, _ arg1: Int32) throws

  @JavaMethod
  open func getOutputStream() throws -> OutputStream!

  @JavaMethod
  open func getInetAddress() -> InetAddress!

  @JavaMethod
  open func getLocalPort() -> Int32

  @JavaMethod
  open func setOption(_ arg0: SocketOption<JavaObject>?, _ arg1: JavaObject?) throws

  @JavaMethod
  open func getOption(_ arg0: SocketOption<JavaObject>?) throws -> JavaObject!

  @JavaMethod
  open func supportedOptions() -> JavaSet<SocketOption<JavaObject>>!

  @JavaMethod
  open func listen(_ arg0: Int32) throws

  @JavaMethod
  open func shutdownInput() throws

  @JavaMethod
  open func shutdownOutput() throws

  @JavaMethod
  open func getFileDescriptor() -> FileDescriptor!

  @JavaMethod
  open func supportsUrgentData() -> Bool

  @JavaMethod
  open func sendUrgentData(_ arg0: Int32) throws

  @JavaMethod
  open func setPerformancePreferences(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open func accept(_ arg0: SocketImpl?) throws

  @JavaMethod
  open func close() throws

  @JavaMethod
  open func create(_ arg0: Bool) throws

  @JavaMethod
  open func available() throws -> Int32

  @JavaMethod
  open func getPort() -> Int32

  @JavaMethod
  open func getInputStream() throws -> InputStream!

  @JavaMethod
  open func bind(_ arg0: InetAddress?, _ arg1: Int32) throws
}
extension JavaClass<SocketImpl> {
  @JavaStaticField(isFinal: true)
  public var TCP_NODELAY: Int32

  @JavaStaticField(isFinal: true)
  public var SO_BINDADDR: Int32

  @JavaStaticField(isFinal: true)
  public var SO_REUSEADDR: Int32

  @JavaStaticField(isFinal: true)
  public var SO_REUSEPORT: Int32

  @JavaStaticField(isFinal: true)
  public var SO_BROADCAST: Int32

  @JavaStaticField(isFinal: true)
  public var IP_MULTICAST_IF: Int32

  @JavaStaticField(isFinal: true)
  public var IP_MULTICAST_IF2: Int32

  @JavaStaticField(isFinal: true)
  public var IP_MULTICAST_LOOP: Int32

  @JavaStaticField(isFinal: true)
  public var IP_TOS: Int32

  @JavaStaticField(isFinal: true)
  public var SO_LINGER: Int32

  @JavaStaticField(isFinal: true)
  public var SO_TIMEOUT: Int32

  @JavaStaticField(isFinal: true)
  public var SO_SNDBUF: Int32

  @JavaStaticField(isFinal: true)
  public var SO_RCVBUF: Int32

  @JavaStaticField(isFinal: true)
  public var SO_KEEPALIVE: Int32

  @JavaStaticField(isFinal: true)
  public var SO_OOBINLINE: Int32
}
