// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.net.Inet6Address")
open class Inet6Address: InetAddress {
  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open override func getAddress() -> [Int8]

  @JavaMethod
  open override func getHostAddress() -> String

  @JavaMethod
  open override func isLinkLocalAddress() -> Bool

  @JavaMethod
    open override func getScopeId() -> Int32

  @JavaMethod
  open override func isAnyLocalAddress() -> Bool

  @JavaMethod
  open override func isMulticastAddress() -> Bool

  @JavaMethod
  open override func isLoopbackAddress() -> Bool

  @JavaMethod
  open override func isSiteLocalAddress() -> Bool

  @JavaMethod
  open override func isMCGlobal() -> Bool

  @JavaMethod
  open override func isMCNodeLocal() -> Bool

  @JavaMethod
  open override func isMCLinkLocal() -> Bool

  @JavaMethod
  open override func isMCSiteLocal() -> Bool

  @JavaMethod
  open override func isMCOrgLocal() -> Bool

  @JavaMethod
  open func isIPv4CompatibleAddress() -> Bool

  @JavaMethod
  open func getScopedInterface() -> NetworkInterface!
}
extension JavaClass<Inet6Address> {
  @JavaStaticMethod
  public func ofLiteral(_ arg0: String) -> InetAddress!

  @JavaStaticMethod
  public func getByAddress(_ arg0: String, _ arg1: [Int8], _ arg2: Int32) throws -> Inet6Address!

  @JavaStaticMethod
  public func getByAddress(_ arg0: String, _ arg1: [Int8], _ arg2: NetworkInterface?) throws -> Inet6Address!
}
