// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import JavaKit
import JavaRuntime

@JavaClass("java.lang.SecurityManager")
open class SecurityManager: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getClassContext() -> [JavaClass<JavaObject>?]

  @JavaMethod
  open func getSecurityContext() -> JavaObject!

  @JavaMethod
  open func checkExec(_ arg0: String)

  @JavaMethod
  open func checkLink(_ arg0: String)

  @JavaMethod
  open func checkRead(_ arg0: FileDescriptor?)

  @JavaMethod
  open func checkRead(_ arg0: String)

  @JavaMethod
  open func checkRead(_ arg0: String, _ arg1: JavaObject?)

  @JavaMethod
  open func checkWrite(_ arg0: String)

  @JavaMethod
  open func checkWrite(_ arg0: FileDescriptor?)

  @JavaMethod
  open func checkDelete(_ arg0: String)

  @JavaMethod
  open func checkConnect(_ arg0: String, _ arg1: Int32)

  @JavaMethod
  open func checkConnect(_ arg0: String, _ arg1: Int32, _ arg2: JavaObject?)

  @JavaMethod
  open func checkListen(_ arg0: Int32)

  @JavaMethod
  open func checkAccept(_ arg0: String, _ arg1: Int32)

  @JavaMethod
  open func checkPropertiesAccess()

  @JavaMethod
  open func checkPropertyAccess(_ arg0: String)

  @JavaMethod
  open func checkPrintJobAccess()

  @JavaMethod
  open func checkPackageAccess(_ arg0: String)

  @JavaMethod
  open func checkPackageDefinition(_ arg0: String)

  @JavaMethod
  open func checkSetFactory()

  @JavaMethod
  open func checkSecurityAccess(_ arg0: String)

  @JavaMethod
  open func checkCreateClassLoader()

  @JavaMethod
  open func getThreadGroup() -> ThreadGroup!

  @JavaMethod
  open func checkAccess(_ arg0: ThreadGroup?)

  @JavaMethod
  open func checkAccess(_ arg0: Thread?)

  @JavaMethod
  open func checkExit(_ arg0: Int32)
}
