// Auto-generated by Java-to-Swift wrapper generator.
import AndroidJavaIO
import JavaKit
import JavaRuntime

@JavaClass("java.lang.StringBuilder", implements: Appendable.self, Serializable.self, Comparable.self, CharSequence.self)
open class StringBuilder: AbstractStringBuilder {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: CharSequence?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func length() -> Int32

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func append(_ arg0: StringBuffer?) -> StringBuilder!

  @JavaMethod
  open override func append(_ arg0: CharSequence?) -> StringBuilder!

  @JavaMethod
  open override func append(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32) -> StringBuilder!

  @JavaMethod
  open override func append(_ arg0: [UInt16]) -> StringBuilder!

  @JavaMethod
  open override func append(_ arg0: String) -> StringBuilder!

  @JavaMethod
  open override func append(_ arg0: Int32) -> StringBuilder!

  @JavaMethod
  open override func append(_ arg0: Int64) -> StringBuilder!

  @JavaMethod
  open override func append(_ arg0: Float) -> StringBuilder!

  @JavaMethod
  open override func append(_ arg0: Double) -> StringBuilder!

  @JavaMethod
  open override func append(_ arg0: UInt16) -> StringBuilder!

  @JavaMethod
  open override func append(_ arg0: Bool) -> StringBuilder!

  @JavaMethod
  open override func append(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32) -> StringBuilder!

  @JavaMethod
  open override func append(_ arg0: CharSequence?) throws -> Appendable!

  @JavaMethod
  open override func append(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32) throws -> Appendable!

  @JavaMethod
  open override func reverse() -> StringBuilder!

  @JavaMethod
  open override func getChars(_ arg0: Int32, _ arg1: Int32, _ arg2: [UInt16], _ arg3: Int32)

  @JavaMethod
  open func compareTo(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open func compareTo(_ arg0: StringBuilder?) -> Int32

  @JavaMethod
  open override func indexOf(_ arg0: String, _ arg1: Int32) -> Int32

  @JavaMethod
  open override func indexOf(_ arg0: String) -> Int32

  @JavaMethod
  open override func insert(_ arg0: Int32, _ arg1: CharSequence?) -> StringBuilder!

  @JavaMethod
  open override func insert(_ arg0: Int32, _ arg1: String) -> StringBuilder!

  @JavaMethod
  open override func insert(_ arg0: Int32, _ arg1: [UInt16]) -> StringBuilder!

  @JavaMethod
  open override func insert(_ arg0: Int32, _ arg1: JavaObject?) -> StringBuilder!

  @JavaMethod
  open override func insert(_ arg0: Int32, _ arg1: [UInt16], _ arg2: Int32, _ arg3: Int32) -> StringBuilder!

  @JavaMethod
  open override func insert(_ arg0: Int32, _ arg1: Int32) -> StringBuilder!

  @JavaMethod
  open override func insert(_ arg0: Int32, _ arg1: Double) -> StringBuilder!

  @JavaMethod
  open override func insert(_ arg0: Int32, _ arg1: Float) -> StringBuilder!

  @JavaMethod
  open override func insert(_ arg0: Int32, _ arg1: Int64) -> StringBuilder!

  @JavaMethod
  open override func insert(_ arg0: Int32, _ arg1: UInt16) -> StringBuilder!

  @JavaMethod
  open override func insert(_ arg0: Int32, _ arg1: Bool) -> StringBuilder!

  @JavaMethod
  open override func insert(_ arg0: Int32, _ arg1: CharSequence?, _ arg2: Int32, _ arg3: Int32) -> StringBuilder!

  @JavaMethod
  open override func charAt(_ arg0: Int32) -> UInt16

  @JavaMethod
  open override func codePointAt(_ arg0: Int32) -> Int32

  @JavaMethod
  open override func codePointBefore(_ arg0: Int32) -> Int32

  @JavaMethod
  open override func codePointCount(_ arg0: Int32, _ arg1: Int32) -> Int32

  @JavaMethod
  open override func offsetByCodePoints(_ arg0: Int32, _ arg1: Int32) -> Int32

  @JavaMethod
  open override func lastIndexOf(_ arg0: String, _ arg1: Int32) -> Int32

  @JavaMethod
  open override func lastIndexOf(_ arg0: String) -> Int32

  @JavaMethod
  open override func substring(_ arg0: Int32) -> String

  @JavaMethod
  open override func substring(_ arg0: Int32, _ arg1: Int32) -> String

  @JavaMethod
  open override func replace(_ arg0: Int32, _ arg1: Int32, _ arg2: String) -> StringBuilder!

  @JavaMethod
  open override func `repeat`(_ arg0: CharSequence?, _ arg1: Int32) -> StringBuilder!

  @JavaMethod
  open override func `repeat`(_ arg0: Int32, _ arg1: Int32) -> StringBuilder!

  @JavaMethod
  open override func subSequence(_ arg0: Int32, _ arg1: Int32) -> CharSequence!

  @JavaMethod
  open override func setLength(_ arg0: Int32)

  @JavaMethod
  open override func capacity() -> Int32

  @JavaMethod
  open override func ensureCapacity(_ arg0: Int32)

  @JavaMethod
  open override func trimToSize()

  @JavaMethod
  open override func setCharAt(_ arg0: Int32, _ arg1: UInt16)

  @JavaMethod
  open override func appendCodePoint(_ arg0: Int32) -> StringBuilder!

  @JavaMethod
  open override func delete(_ arg0: Int32, _ arg1: Int32) -> StringBuilder!

  @JavaMethod
  open override func deleteCharAt(_ arg0: Int32) -> StringBuilder!
}
