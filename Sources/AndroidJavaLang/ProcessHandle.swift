// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaInterface("java.lang.ProcessHandle", extends: Comparable.self)
public struct ProcessHandle {
  @JavaMethod
  public func destroyForcibly() -> Bool

  @JavaMethod
  public func supportsNormalTermination() -> Bool

  @JavaMethod
  public func parent() -> JavaOptional<ProcessHandle>!

  public func parentOptional() -> ProcessHandle? {
    Optional(javaOptional: parent())
  }

  @JavaMethod
  public func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func hashCode() -> Int32

  @JavaMethod
  public func compareTo(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  public func compareTo(_ arg0: ProcessHandle?) -> Int32

  @JavaMethod
  public func info() -> ProcessHandle.Info!

  @JavaMethod
  public func isAlive() -> Bool

  @JavaMethod
  public func destroy() -> Bool

  @JavaMethod
  public func pid() -> Int64
}
extension JavaClass<ProcessHandle> {
  @JavaStaticMethod
  public func of(_ arg0: Int64) -> JavaOptional<ProcessHandle>!

  public func ofOptional(_ arg0: Int64) -> ProcessHandle? {
    Optional(javaOptional: of(arg0))
  }

  @JavaStaticMethod
  public func current() -> ProcessHandle!
}
