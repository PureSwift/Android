// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

extension RelativeLayout {
  @JavaClass("android.widget.RelativeLayout$LayoutParams")
  open class LayoutParams: ViewSwitcher.MarginLayoutParams {
  @JavaField(isFinal: false)
  public var alignWithParent: Bool

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: RelativeLayout.LayoutParams?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: ViewSwitcher.MarginLayoutParams?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: ViewSwitcher.LayoutParams?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, _ arg1: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func debug(_ arg0: String) -> String

  @JavaMethod
  open func getRules() -> [Int32]

  @JavaMethod
  open override func resolveLayoutDirection(_ arg0: Int32)

  @JavaMethod
  open func addRule(_ arg0: Int32)

  @JavaMethod
  open func addRule(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open func removeRule(_ arg0: Int32)

  @JavaMethod
  open func getRule(_ arg0: Int32) -> Int32
  }
}
extension JavaClass<RelativeLayout.LayoutParams> {
  @JavaStaticField(isFinal: true)
  public var FILL_PARENT: Int32

  @JavaStaticField(isFinal: true)
  public var MATCH_PARENT: Int32

  @JavaStaticField(isFinal: true)
  public var WRAP_CONTENT: Int32
}
